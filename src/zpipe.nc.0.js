// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// TODO: " u s e   s t r i c t ";


// *** Environment setup code ***
var arguments_ = [];

var ENVIRONMENT_IS_NODE = typeof process === 'object';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  print = function(x) {
    process['stdout'].write(x + '\n');
  };
  printErr = function(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');

  read = function(filename) {
    var ret = nodeFS['readFileSync'](filename).toString();
    if (!ret && filename[0] != '/') {
      filename = __dirname.split('/').slice(0, -1).join('/') + '/src/' + filename;
      ret = nodeFS['readFileSync'](filename).toString();
    }
    return ret;
  };

  arguments_ = process['argv'].slice(2);

} else if (ENVIRONMENT_IS_SHELL) {
  // Polyfill over SpiderMonkey/V8 differences
  if (!this['read']) {
    read = function(f) { snarf(f) };
  }

  if (!this['arguments']) {
    arguments_ = scriptArgs;
  } else {
    arguments_ = arguments;
  }

} else if (ENVIRONMENT_IS_WEB) {
  print = printErr = function(x) {
    console.log(x);
  };

  read = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (this['arguments']) {
    arguments_ = arguments;
  }
} else if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...

  load = importScripts;

} else {
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}

if (typeof load == 'undefined' && typeof read != 'undefined') {
  load = function(f) {
    globalEval(read(f));
  };
}

if (typeof printErr === 'undefined') {
  printErr = function(){};
}

if (typeof print === 'undefined') {
  print = printErr;
}
// *** Environment setup code ***


try {
  this['Module'] = Module;
} catch(e) {
  this['Module'] = Module = {};
}
if (!Module.arguments) {
  Module.arguments = arguments_;
}
if (Module.print) {
  print = Module.print;
}

  
// Warning: .ll contains i64 or double values. These 64-bit values are dangerous in USE_TYPED_ARRAYS == 2. We store i64 as i32, and double as float. This can cause serious problems!
// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (/^\[\d+\ x\ (.*)\]/.test(type)) return true; // [15 x ?] blocks. Like structs
  if (/<?{ [^}]* }>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  bitshift64: function (low, high, op, bits) {
    var ander = Math.pow(2, bits)-1;
    if (bits < 32) {
      switch (op) {
        case 'shl':
          return [low << bits, (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits))];
        case 'ashr':
          return [(((low >>> bits ) | ((high&ander) << (32 - bits))) >> 0) >>> 0, (high >> bits) >>> 0];
        case 'lshr':
          return [((low >>> bits) | ((high&ander) << (32 - bits))) >>> 0, high >>> bits];
      }
    } else if (bits == 32) {
      switch (op) {
        case 'shl':
          return [0, low];
        case 'ashr':
          return [high, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high, 0];
      }
    } else { // bits > 32
      switch (op) {
        case 'shl':
          return [0, low << (bits - 32)];
        case 'ashr':
          return [(high >> (bits - 32)) >>> 0, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high >>>  (bits - 32) , 0];
      }
    }
    abort('unknown bitshift64 op: ' + [value, op, bits]);
  },
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type[type.length-1] == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = size;
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Types.types[field].alignSize;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      alignSize = type.packed ? 1 : Math.min(alignSize, Runtime.QUANTUM_SIZE);
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      assert(type.fields.length === struct.length, 'Number of named fields must match the type for ' + typeName);
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  stackAlloc: function stackAlloc(size) { var ret = STACKTOP;STACKTOP += size;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"); return ret; },
  staticAlloc: function staticAlloc(size) { var ret = STATICTOP;STATICTOP += size;STATICTOP = ((((STATICTOP)+3)>>2)<<2); if (STATICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function alignMemory(size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 4))*(quantum ? quantum : 4); return ret; },
  makeBigInt: function makeBigInt(low,high,unsigned) { var ret = (unsigned ? (((low)>>>0)+(((high)>>>0)*4294967296)) : (((low)>>>0)+(((high)|0)*4294967296))); return ret; },
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



var CorrectionsMonitor = {
  MAX_ALLOWED: 0, // XXX
  corrections: 0,
  sigs: {},

  note: function(type, succeed, sig) {
    if (!succeed) {
      this.corrections++;
      if (this.corrections >= this.MAX_ALLOWED) abort('\n\nToo many corrections!');
    }
  },

  print: function() {
  }
};





//========================================
// Runtime essentials
//========================================

var __THREW__ = false; // Used in checking for thrown exceptions.

var ABORT = false;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;

function abort(text) {
  print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Adding
//
//         __attribute__((used))
//
//       to the function definition will prevent that.
//
// Note: Closure optimizations will minify function names, making
//       functions no longer callable. If you run closure (on by default
//       in -O2 and above), you should export the functions you will call
//       by calling emcc with something like
//
//         -s EXPORTED_FUNCTIONS='["_func1","_func2"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number' or 'string' (use 'number' for any C pointer).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType.
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  function toC(value, type) {
    if (type == 'string') {
      var ret = STACKTOP;
      Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    return value;
  }
  try {
    var func = eval('_' + ident);
  } catch(e) {
    try {
      func = globalScope['Module']['_' + ident]; // closure exported function
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  return fromC(func.apply(null, cArgs), returnType);
}
Module["ccall"] = ccall;

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  // TODO: optimize this, eval the whole function once instead of going through ccall each time
  return function() {
    return ccall(ident, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': HEAP32[((ptr)>>2)]=value; break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': (tempDoubleF64[0]=value,HEAP32[((ptr)>>2)]=tempDoubleI32[0],HEAP32[((ptr+4)>>2)]=tempDoubleI32[1]); break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return (tempDoubleI32[0]=HEAP32[((ptr)>>2)],tempDoubleI32[1]=HEAP32[((ptr+4)>>2)],tempDoubleF64[0]);
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

// Allocates memory for some data and initializes it properly.

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;

function allocate(slab, types, allocator) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));

  if (zeroinit) {
      _memset(ret, 0, size);
      return ret;
  }
  
  var i = 0, type;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);
    i += Runtime.getNativeTypeSize(type);
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  var nullTerminated = typeof(length) == "undefined";
  var ret = "";
  var i = 0;
  var t;
  var nullByte = String.fromCharCode(0);
  while (1) {
    t = String.fromCharCode(HEAPU8[(ptr+i)]);
    if (nullTerminated && t == nullByte) { break; } else {}
    ret += t;
    i += 1;
    if (!nullTerminated && i == length) { break; }
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function Array_stringify(array) {
  var ret = "";
  for (var i = 0; i < array.length; i++) {
    ret += String.fromCharCode(array[i]);
  }
  return ret;
}
Module['Array_stringify'] = Array_stringify;

// Memory management

var FUNCTION_TABLE; // XXX: In theory the indexes here can be equal to pointers to stacked or malloced memory. Such comparisons should
                    //      be false, but can turn out true. We should probably set the top bit to prevent such issues.

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return Math.ceil(x/PAGE_SIZE)*PAGE_SIZE;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32;

var STACK_ROOT, STACKTOP, STACK_MAX;
var STATICTOP;
function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and STATICTOP is the new top.
  printErr('Warning: Enlarging memory arrays, this is not fast! ' + [STATICTOP, TOTAL_MEMORY]);
  assert(STATICTOP >= TOTAL_MEMORY);
  assert(TOTAL_MEMORY > 4); // So the loop below will not be infinite
  while (TOTAL_MEMORY <= STATICTOP) { // Simple heuristic. Override enlargeMemory() if your program has something more optimal for it
    TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY);
  }
  var oldHEAP8 = HEAP8;
  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAP8.set(oldHEAP8);
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 10485760;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
  assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
         'Cannot fallback to non-typed array case: Code is too specialized');

  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);

  // Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 255;
  assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

var base = intArrayFromString('(null)'); // So printing %s of NULL gives '(null)'
                                         // Also this ensures we leave 0 as an invalid address, 'NULL'
STATICTOP = base.length;
for (var i = 0; i < base.length; i++) {
  HEAP8[(i)]=base[i]
}

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;

STACK_ROOT = STACKTOP = Runtime.alignMemory(STATICTOP);
STACK_MAX = STACK_ROOT + TOTAL_STACK;

var tempDoublePtr = Runtime.alignMemory(STACK_MAX, 8);
var tempDoubleI8  = HEAP8.subarray(tempDoublePtr);
var tempDoubleI32 = HEAP32.subarray(tempDoublePtr >> 2);
var tempDoubleF32 = HEAPF32.subarray(tempDoublePtr >> 2);
var tempDoubleF64 = new Float64Array(HEAP8.buffer).subarray(tempDoublePtr >> 3);
function copyTempFloat(ptr) { // functions, because inlining this code is increases code size too much
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
  tempDoubleI8[4] = HEAP8[ptr+4];
  tempDoubleI8[5] = HEAP8[ptr+5];
  tempDoubleI8[6] = HEAP8[ptr+6];
  tempDoubleI8[7] = HEAP8[ptr+7];
}
STACK_MAX = tempDoublePtr + 8;

STATICTOP = alignMemoryPage(STACK_MAX);

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}

var __ATINIT__ = []; // functions called during startup
var __ATEXIT__ = []; // functions called during shutdown

function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);

  // Print summary of correction activity
  CorrectionsMonitor.print();
}


// Copies a list of num items on the HEAP into a
// a normal JavaScript array of numbers
function Array_copy(ptr, num) {
  return Array.prototype.slice.call(HEAP8.subarray(ptr, ptr+num)); // Make a normal array out of the typed 'view'
                                                                   // Consider making a typed array here, for speed?
  return HEAP.slice(ptr, ptr+num);
}
Module['Array_copy'] = Array_copy;

// Copies a list of num items on the HEAP into a
// JavaScript typed array.
function TypedArray_copy(ptr, num) {
  // TODO: optimize this!
  var arr = new Uint8Array(num);
  for (var i = 0; i < num; ++i) {
    arr[i] = HEAP8[(ptr+i)];
  }
  return arr.buffer;
}
Module['TypedArray_copy'] = TypedArray_copy;

function String_len(ptr) {
  var i = 0;
  while (HEAP8[(ptr+i)]) i++; // Note: should be |!= 0|, technically. But this helps catch bugs with undefineds
  return i;
}
Module['String_len'] = String_len;

// Copies a C-style string, terminated by a zero, from the HEAP into
// a normal JavaScript array of numbers
function String_copy(ptr, addZero) {
  var len = String_len(ptr);
  if (addZero) len++;
  var ret = Array_copy(ptr, len);
  if (addZero) ret[len-1] = 0;
  return ret;
}
Module['String_copy'] = String_copy;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull) {
  var ret = [];
  var t;
  var i = 0;
  while (i < stringy.length) {
    var chr = stringy.charCodeAt(i);
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + stringy[i] + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(chr);
    i = i + 1;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var i = 0;
  while (i < string.length) {
    var chr = string.charCodeAt(i);
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + string[i] + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    HEAP8[(buffer+i)]=chr
    i = i + 1;
  }
  if (!dontAddNull) {
    HEAP8[(buffer+i)]=0
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

var STRING_TABLE = [];

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
  // TODO: clean up previous line
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// === Body ===




function _def($source, $dest, $level) {
  var __stackBase__  = STACKTOP; STACKTOP += 32824; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $source_addr;
      var $dest_addr;
      var $level_addr;
      var $ret;
      var $flush;
      var $have;
      var $strm=__stackBase__;
      var $in=__stackBase__+56;
      var $out=__stackBase__+16440;
      $source_addr=$source;
      $dest_addr=$dest;
      $level_addr=$level;
      var $zalloc=(($strm+32)|0);
      HEAP32[(($zalloc)>>2)]=0;
      var $zfree=(($strm+36)|0);
      HEAP32[(($zfree)>>2)]=0;
      var $opaque=(($strm+40)|0);
      HEAP32[(($opaque)>>2)]=0;
      var $0=$level_addr;
      var $call=_deflateInit2_($strm, $0, 8, 15, 8, 0, ((STRING_TABLE.__str)|0), 56);
      $ret=$call;
      var $1=$ret;
      var $cmp=(($1)|0)!=0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $2=$ret;
      $retval=$2;
      __label__ = 23; break;
    case 2: // $if_end
      __label__ = 3; break;
    case 3: // $do_body
      var $arraydecay=(($in)|0);
      var $3=$source_addr;
      var $call1=_fread($arraydecay, 1, 16384, $3);
      var $avail_in=(($strm+4)|0);
      HEAP32[(($avail_in)>>2)]=$call1;
      var $4=$source_addr;
      var $call2=_ferror($4);
      var $tobool=(($call2)|0)!=0;
      if ($tobool) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then3
      var $call4=_deflateEnd($strm);
      $retval=-1;
      __label__ = 23; break;
    case 5: // $if_end5
      var $5=$source_addr;
      var $call6=_feof($5);
      var $tobool7=(($call6)|0)!=0;
      var $cond=$tobool7 ? 4 : 1;
      $flush=$cond;
      var $arraydecay8=(($in)|0);
      var $next_in=(($strm)|0);
      HEAP32[(($next_in)>>2)]=$arraydecay8;
      __label__ = 6; break;
    case 6: // $do_body9
      var $avail_out=(($strm+16)|0);
      HEAP32[(($avail_out)>>2)]=16384;
      var $arraydecay10=(($out)|0);
      var $next_out=(($strm+12)|0);
      HEAP32[(($next_out)>>2)]=$arraydecay10;
      var $6=$flush;
      var $call11=_deflate($strm, $6);
      $ret=$call11;
      var $7=$ret;
      var $cmp12=(($7)|0)!=-2;
      if ($cmp12) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $cond_true
      __label__ = 9; break;
    case 8: // $cond_false
      ___assert_func(((STRING_TABLE.__str1)|0), 75, ((STRING_TABLE.___func___def)|0), ((STRING_TABLE.__str2)|0));
      __label__ = 9; break;
    case 9: // $cond_end
      var $avail_out13=(($strm+16)|0);
      var $8=HEAP32[(($avail_out13)>>2)];
      var $sub=((16384-$8)|0);
      $have=$sub;
      var $arraydecay14=(($out)|0);
      var $9=$have;
      var $10=$dest_addr;
      var $call15=_fwrite($arraydecay14, 1, $9, $10);
      var $11=$have;
      var $cmp16=(($call15)|0)!=(($11)|0);
      if ($cmp16) { __label__ = 11; break; } else { __label__ = 10; break; }
    case 10: // $lor_lhs_false
      var $12=$dest_addr;
      var $call17=_ferror($12);
      var $tobool18=(($call17)|0)!=0;
      if ($tobool18) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then19
      var $call20=_deflateEnd($strm);
      $retval=-1;
      __label__ = 23; break;
    case 12: // $if_end21
      __label__ = 13; break;
    case 13: // $do_cond
      var $avail_out22=(($strm+16)|0);
      var $13=HEAP32[(($avail_out22)>>2)];
      var $cmp23=(($13)|0)==0;
      if ($cmp23) { __label__ = 6; break; } else { __label__ = 14; break; }
    case 14: // $do_end
      var $avail_in24=(($strm+4)|0);
      var $14=HEAP32[(($avail_in24)>>2)];
      var $cmp25=(($14)|0)==0;
      if ($cmp25) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $cond_true26
      __label__ = 17; break;
    case 16: // $cond_false27
      ___assert_func(((STRING_TABLE.__str1)|0), 82, ((STRING_TABLE.___func___def)|0), ((STRING_TABLE.__str3)|0));
      __label__ = 17; break;
    case 17: // $cond_end28
      __label__ = 18; break;
    case 18: // $do_cond29
      var $15=$flush;
      var $cmp30=(($15)|0)!=4;
      if ($cmp30) { __label__ = 3; break; } else { __label__ = 19; break; }
    case 19: // $do_end31
      var $16=$ret;
      var $cmp32=(($16)|0)==1;
      if ($cmp32) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: // $cond_true33
      __label__ = 22; break;
    case 21: // $cond_false34
      ___assert_func(((STRING_TABLE.__str1)|0), 86, ((STRING_TABLE.___func___def)|0), ((STRING_TABLE.__str4)|0));
      __label__ = 22; break;
    case 22: // $cond_end35
      var $call36=_deflateEnd($strm);
      $retval=0;
      __label__ = 23; break;
    case 23: // $return
      var $17=$retval;
      STACKTOP = __stackBase__;
      return $17;
    default: assert(0, "bad label: " + __label__);
  }
}
_def["X"]=1;

function _inf($source, $dest) {
  var __stackBase__  = STACKTOP; STACKTOP += 32824; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $source_addr;
      var $dest_addr;
      var $ret;
      var $have;
      var $strm=__stackBase__;
      var $in=__stackBase__+56;
      var $out=__stackBase__+16440;
      $source_addr=$source;
      $dest_addr=$dest;
      var $zalloc=(($strm+32)|0);
      HEAP32[(($zalloc)>>2)]=0;
      var $zfree=(($strm+36)|0);
      HEAP32[(($zfree)>>2)]=0;
      var $opaque=(($strm+40)|0);
      HEAP32[(($opaque)>>2)]=0;
      var $avail_in=(($strm+4)|0);
      HEAP32[(($avail_in)>>2)]=0;
      var $next_in=(($strm)|0);
      HEAP32[(($next_in)>>2)]=0;
      var $call=_inflateInit_($strm, ((STRING_TABLE.__str)|0), 56);
      $ret=$call;
      var $0=$ret;
      var $cmp=(($0)|0)!=0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $1=$ret;
      $retval=$1;
      __label__ = 22; break;
    case 2: // $if_end
      __label__ = 3; break;
    case 3: // $do_body
      var $arraydecay=(($in)|0);
      var $2=$source_addr;
      var $call1=_fread($arraydecay, 1, 16384, $2);
      var $avail_in2=(($strm+4)|0);
      HEAP32[(($avail_in2)>>2)]=$call1;
      var $3=$source_addr;
      var $call3=_ferror($3);
      var $tobool=(($call3)|0)!=0;
      if ($tobool) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then4
      var $call5=_inflateEnd($strm);
      $retval=-1;
      __label__ = 22; break;
    case 5: // $if_end6
      var $avail_in7=(($strm+4)|0);
      var $4=HEAP32[(($avail_in7)>>2)];
      var $cmp8=(($4)|0)==0;
      if ($cmp8) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then9
      __label__ = 21; break;
    case 7: // $if_end10
      var $arraydecay11=(($in)|0);
      var $next_in12=(($strm)|0);
      HEAP32[(($next_in12)>>2)]=$arraydecay11;
      __label__ = 8; break;
    case 8: // $do_body13
      var $avail_out=(($strm+16)|0);
      HEAP32[(($avail_out)>>2)]=16384;
      var $arraydecay14=(($out)|0);
      var $next_out=(($strm+12)|0);
      HEAP32[(($next_out)>>2)]=$arraydecay14;
      var $call15=_inflate($strm, 1);
      $ret=$call15;
      var $5=$ret;
      var $cmp16=(($5)|0)!=-2;
      if ($cmp16) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $cond_true
      __label__ = 11; break;
    case 10: // $cond_false
      ___assert_func(((STRING_TABLE.__str1)|0), 133, ((STRING_TABLE.___func___inf)|0), ((STRING_TABLE.__str2)|0));
      __label__ = 11; break;
    case 11: // $cond_end
      var $6=$ret;
      if ($6 == 2) {
        __label__ = 12; break;
      }
      else if ($6 == -3 || $6 == -4) {
        __label__ = 13; break;
      }
      else {
      __label__ = 14; break;
      }
      
    case 12: // $sw_bb
      $ret=-3;
      __label__ = 13; break;
    case 13: // $sw_bb17
      var $call18=_inflateEnd($strm);
      var $7=$ret;
      $retval=$7;
      __label__ = 22; break;
    case 14: // $sw_epilog
      var $avail_out19=(($strm+16)|0);
      var $8=HEAP32[(($avail_out19)>>2)];
      var $sub=((16384-$8)|0);
      $have=$sub;
      var $arraydecay20=(($out)|0);
      var $9=$have;
      var $10=$dest_addr;
      var $call21=_fwrite($arraydecay20, 1, $9, $10);
      var $11=$have;
      var $cmp22=(($call21)|0)!=(($11)|0);
      if ($cmp22) { __label__ = 16; break; } else { __label__ = 15; break; }
    case 15: // $lor_lhs_false
      var $12=$dest_addr;
      var $call23=_ferror($12);
      var $tobool24=(($call23)|0)!=0;
      if ($tobool24) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $if_then25
      var $call26=_inflateEnd($strm);
      $retval=-1;
      __label__ = 22; break;
    case 17: // $if_end27
      __label__ = 18; break;
    case 18: // $do_cond
      var $avail_out28=(($strm+16)|0);
      var $13=HEAP32[(($avail_out28)>>2)];
      var $cmp29=(($13)|0)==0;
      if ($cmp29) { __label__ = 8; break; } else { __label__ = 19; break; }
    case 19: // $do_end
      __label__ = 20; break;
    case 20: // $do_cond30
      var $14=$ret;
      var $cmp31=(($14)|0)!=1;
      if ($cmp31) { __label__ = 3; break; } else { __label__ = 21; break; }
    case 21: // $do_end32
      var $call33=_inflateEnd($strm);
      var $15=$ret;
      var $cmp34=(($15)|0)==1;
      var $cond=$cmp34 ? 0 : -3;
      $retval=$cond;
      __label__ = 22; break;
    case 22: // $return
      var $16=$retval;
      STACKTOP = __stackBase__;
      return $16;
    default: assert(0, "bad label: " + __label__);
  }
}
_inf["X"]=1;

function _zerr($ret) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $ret_addr;
      $ret_addr=$ret;
      var $0=HEAP32[((__impure_ptr)>>2)];
      var $_stderr=(($0+12)|0);
      var $1=HEAP32[(($_stderr)>>2)];
      var $call=_fputs(((STRING_TABLE.__str5)|0), $1);
      var $2=$ret_addr;
      if ($2 == -1) {
        __label__ = 1; break;
      }
      else if ($2 == -2) {
        __label__ = 6; break;
      }
      else if ($2 == -3) {
        __label__ = 7; break;
      }
      else if ($2 == -4) {
        __label__ = 8; break;
      }
      else if ($2 == -6) {
        __label__ = 9; break;
      }
      else {
      __label__ = 10; break;
      }
      
    case 1: // $sw_bb
      var $3=HEAP32[((__impure_ptr)>>2)];
      var $_stdin=(($3+4)|0);
      var $4=HEAP32[(($_stdin)>>2)];
      var $call1=_ferror($4);
      var $tobool=(($call1)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      var $5=HEAP32[((__impure_ptr)>>2)];
      var $_stderr2=(($5+12)|0);
      var $6=HEAP32[(($_stderr2)>>2)];
      var $call3=_fputs(((STRING_TABLE.__str6)|0), $6);
      __label__ = 3; break;
    case 3: // $if_end
      var $7=HEAP32[((__impure_ptr)>>2)];
      var $_stdout=(($7+8)|0);
      var $8=HEAP32[(($_stdout)>>2)];
      var $call4=_ferror($8);
      var $tobool5=(($call4)|0)!=0;
      if ($tobool5) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then6
      var $9=HEAP32[((__impure_ptr)>>2)];
      var $_stderr7=(($9+12)|0);
      var $10=HEAP32[(($_stderr7)>>2)];
      var $call8=_fputs(((STRING_TABLE.__str7)|0), $10);
      __label__ = 5; break;
    case 5: // $if_end9
      __label__ = 10; break;
    case 6: // $sw_bb10
      var $11=HEAP32[((__impure_ptr)>>2)];
      var $_stderr11=(($11+12)|0);
      var $12=HEAP32[(($_stderr11)>>2)];
      var $call12=_fputs(((STRING_TABLE.__str8)|0), $12);
      __label__ = 10; break;
    case 7: // $sw_bb13
      var $13=HEAP32[((__impure_ptr)>>2)];
      var $_stderr14=(($13+12)|0);
      var $14=HEAP32[(($_stderr14)>>2)];
      var $call15=_fputs(((STRING_TABLE.__str9)|0), $14);
      __label__ = 10; break;
    case 8: // $sw_bb16
      var $15=HEAP32[((__impure_ptr)>>2)];
      var $_stderr17=(($15+12)|0);
      var $16=HEAP32[(($_stderr17)>>2)];
      var $call18=_fputs(((STRING_TABLE.__str10)|0), $16);
      __label__ = 10; break;
    case 9: // $sw_bb19
      var $17=HEAP32[((__impure_ptr)>>2)];
      var $_stderr20=(($17+12)|0);
      var $18=HEAP32[(($_stderr20)>>2)];
      var $call21=_fputs(((STRING_TABLE.__str11)|0), $18);
      __label__ = 10; break;
    case 10: // $sw_epilog
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_zerr["X"]=1;

function _main($argc, $argv) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $argc_addr;
      var $argv_addr;
      var $ret;
      $retval=0;
      $argc_addr=$argc;
      $argv_addr=$argv;
      var $0=$argc_addr;
      var $cmp=(($0)|0)==1;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 4; break; }
    case 1: // $if_then
      var $1=HEAP32[((__impure_ptr)>>2)];
      var $_stdin=(($1+4)|0);
      var $2=HEAP32[(($_stdin)>>2)];
      var $3=HEAP32[((__impure_ptr)>>2)];
      var $_stdout=(($3+8)|0);
      var $4=HEAP32[(($_stdout)>>2)];
      var $call=_def($2, $4, -1);
      $ret=$call;
      var $5=$ret;
      var $cmp1=(($5)|0)!=0;
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then2
      var $6=$ret;
      _zerr($6);
      __label__ = 3; break;
    case 3: // $if_end
      var $7=$ret;
      $retval=$7;
      __label__ = 10; break;
    case 4: // $if_else
      var $8=$argc_addr;
      var $cmp3=(($8)|0)==2;
      if ($cmp3) { __label__ = 5; break; } else { __label__ = 9; break; }
    case 5: // $land_lhs_true
      var $9=$argv_addr;
      var $arrayidx=(($9+4)|0);
      var $10=HEAP32[(($arrayidx)>>2)];
      var $call4=_strcmp($10, ((STRING_TABLE.__str12)|0));
      var $cmp5=(($call4)|0)==0;
      if ($cmp5) { __label__ = 6; break; } else { __label__ = 9; break; }
    case 6: // $if_then6
      var $11=HEAP32[((__impure_ptr)>>2)];
      var $_stdin7=(($11+4)|0);
      var $12=HEAP32[(($_stdin7)>>2)];
      var $13=HEAP32[((__impure_ptr)>>2)];
      var $_stdout8=(($13+8)|0);
      var $14=HEAP32[(($_stdout8)>>2)];
      var $call9=_inf($12, $14);
      $ret=$call9;
      var $15=$ret;
      var $cmp10=(($15)|0)!=0;
      if ($cmp10) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then11
      var $16=$ret;
      _zerr($16);
      __label__ = 8; break;
    case 8: // $if_end12
      var $17=$ret;
      $retval=$17;
      __label__ = 10; break;
    case 9: // $if_else13
      var $18=HEAP32[((__impure_ptr)>>2)];
      var $_stderr=(($18+12)|0);
      var $19=HEAP32[(($_stderr)>>2)];
      var $call14=_fputs(((STRING_TABLE.__str13)|0), $19);
      $retval=1;
      __label__ = 10; break;
    case 10: // $return
      var $20=$retval;
      ;
      return $20;
    default: assert(0, "bad label: " + __label__);
  }
}
Module["_main"] = _main;_main["X"]=1;

function _deflateInit2_($strm, $level, $method, $windowBits, $memLevel, $strategy, $version, $stream_size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $level_addr;
      var $method_addr;
      var $windowBits_addr;
      var $memLevel_addr;
      var $strategy_addr;
      var $version_addr;
      var $stream_size_addr;
      var $s;
      var $wrap;
      var $overlay;
      $strm_addr=$strm;
      $level_addr=$level;
      $method_addr=$method;
      $windowBits_addr=$windowBits;
      $memLevel_addr=$memLevel;
      $strategy_addr=$strategy;
      $version_addr=$version;
      $stream_size_addr=$stream_size;
      $wrap=1;
      var $0=$version_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 3; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$version_addr;
      var $arrayidx=(($1)|0);
      var $2=HEAP8[($arrayidx)];
      var $conv=(($2 << 24) >> 24);
      var $3=HEAP8[(((STRING_TABLE._deflateInit2__my_version)|0))];
      var $conv1=(($3 << 24) >> 24);
      var $cmp2=(($conv)|0)!=(($conv1)|0);
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 2; break; }
    case 2: // $lor_lhs_false4
      var $4=$stream_size_addr;
      var $cmp5=(($4)|0)!=56;
      if ($cmp5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      $retval=-6;
      __label__ = 37; break;
    case 4: // $if_end
      var $5=$strm_addr;
      var $cmp7=(($5)|0)==0;
      if ($cmp7) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then9
      $retval=-2;
      __label__ = 37; break;
    case 6: // $if_end10
      var $6=$strm_addr;
      var $msg=(($6+24)|0);
      HEAP32[(($msg)>>2)]=0;
      var $7=$strm_addr;
      var $zalloc=(($7+32)|0);
      var $8=HEAP32[(($zalloc)>>2)];
      var $cmp11=(($8)|0)==0;
      if ($cmp11) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then13
      var $9=$strm_addr;
      var $zalloc14=(($9+32)|0);
      HEAP32[(($zalloc14)>>2)]=2;
      var $10=$strm_addr;
      var $opaque=(($10+40)|0);
      HEAP32[(($opaque)>>2)]=0;
      __label__ = 8; break;
    case 8: // $if_end15
      var $11=$strm_addr;
      var $zfree=(($11+36)|0);
      var $12=HEAP32[(($zfree)>>2)];
      var $cmp16=(($12)|0)==0;
      if ($cmp16) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then18
      var $13=$strm_addr;
      var $zfree19=(($13+36)|0);
      HEAP32[(($zfree19)>>2)]=4;
      __label__ = 10; break;
    case 10: // $if_end20
      var $14=$level_addr;
      var $cmp21=(($14)|0)==-1;
      if ($cmp21) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then23
      $level_addr=6;
      __label__ = 12; break;
    case 12: // $if_end24
      var $15=$windowBits_addr;
      var $cmp25=(($15)|0) < 0;
      if ($cmp25) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then27
      $wrap=0;
      var $16=$windowBits_addr;
      var $sub=(((-$16))|0);
      $windowBits_addr=$sub;
      __label__ = 17; break;
    case 14: // $if_else
      var $17=$windowBits_addr;
      var $cmp28=(($17)|0) > 15;
      if ($cmp28) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then30
      $wrap=2;
      var $18=$windowBits_addr;
      var $sub31=(($18-16)|0);
      $windowBits_addr=$sub31;
      __label__ = 16; break;
    case 16: // $if_end32
      __label__ = 17; break;
    case 17: // $if_end33
      var $19=$memLevel_addr;
      var $cmp34=(($19)|0) < 1;
      if ($cmp34) { __label__ = 26; break; } else { __label__ = 18; break; }
    case 18: // $lor_lhs_false36
      var $20=$memLevel_addr;
      var $cmp37=(($20)|0) > 9;
      if ($cmp37) { __label__ = 26; break; } else { __label__ = 19; break; }
    case 19: // $lor_lhs_false39
      var $21=$method_addr;
      var $cmp40=(($21)|0)!=8;
      if ($cmp40) { __label__ = 26; break; } else { __label__ = 20; break; }
    case 20: // $lor_lhs_false42
      var $22=$windowBits_addr;
      var $cmp43=(($22)|0) < 8;
      if ($cmp43) { __label__ = 26; break; } else { __label__ = 21; break; }
    case 21: // $lor_lhs_false45
      var $23=$windowBits_addr;
      var $cmp46=(($23)|0) > 15;
      if ($cmp46) { __label__ = 26; break; } else { __label__ = 22; break; }
    case 22: // $lor_lhs_false48
      var $24=$level_addr;
      var $cmp49=(($24)|0) < 0;
      if ($cmp49) { __label__ = 26; break; } else { __label__ = 23; break; }
    case 23: // $lor_lhs_false51
      var $25=$level_addr;
      var $cmp52=(($25)|0) > 9;
      if ($cmp52) { __label__ = 26; break; } else { __label__ = 24; break; }
    case 24: // $lor_lhs_false54
      var $26=$strategy_addr;
      var $cmp55=(($26)|0) < 0;
      if ($cmp55) { __label__ = 26; break; } else { __label__ = 25; break; }
    case 25: // $lor_lhs_false57
      var $27=$strategy_addr;
      var $cmp58=(($27)|0) > 4;
      if ($cmp58) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: // $if_then60
      $retval=-2;
      __label__ = 37; break;
    case 27: // $if_end61
      var $28=$windowBits_addr;
      var $cmp62=(($28)|0)==8;
      if ($cmp62) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: // $if_then64
      $windowBits_addr=9;
      __label__ = 29; break;
    case 29: // $if_end65
      var $29=$strm_addr;
      var $zalloc66=(($29+32)|0);
      var $30=HEAP32[(($zalloc66)>>2)];
      var $31=$strm_addr;
      var $opaque67=(($31+40)|0);
      var $32=HEAP32[(($opaque67)>>2)];
      var $call=FUNCTION_TABLE[$30]($32, 1, 5828);
      var $33=$call;
      $s=$33;
      var $34=$s;
      var $cmp68=(($34)|0)==0;
      if ($cmp68) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then70
      $retval=-4;
      __label__ = 37; break;
    case 31: // $if_end71
      var $35=$s;
      var $36=$strm_addr;
      var $state=(($36+28)|0);
      HEAP32[(($state)>>2)]=$35;
      var $37=$strm_addr;
      var $38=$s;
      var $strm72=(($38)|0);
      HEAP32[(($strm72)>>2)]=$37;
      var $39=$wrap;
      var $40=$s;
      var $wrap73=(($40+24)|0);
      HEAP32[(($wrap73)>>2)]=$39;
      var $41=$s;
      var $gzhead=(($41+28)|0);
      HEAP32[(($gzhead)>>2)]=0;
      var $42=$windowBits_addr;
      var $43=$s;
      var $w_bits=(($43+48)|0);
      HEAP32[(($w_bits)>>2)]=$42;
      var $44=$s;
      var $w_bits74=(($44+48)|0);
      var $45=HEAP32[(($w_bits74)>>2)];
      var $shl=1 << $45;
      var $46=$s;
      var $w_size=(($46+44)|0);
      HEAP32[(($w_size)>>2)]=$shl;
      var $47=$s;
      var $w_size75=(($47+44)|0);
      var $48=HEAP32[(($w_size75)>>2)];
      var $sub76=(($48-1)|0);
      var $49=$s;
      var $w_mask=(($49+52)|0);
      HEAP32[(($w_mask)>>2)]=$sub76;
      var $50=$memLevel_addr;
      var $add=(($50+7)|0);
      var $51=$s;
      var $hash_bits=(($51+80)|0);
      HEAP32[(($hash_bits)>>2)]=$add;
      var $52=$s;
      var $hash_bits77=(($52+80)|0);
      var $53=HEAP32[(($hash_bits77)>>2)];
      var $shl78=1 << $53;
      var $54=$s;
      var $hash_size=(($54+76)|0);
      HEAP32[(($hash_size)>>2)]=$shl78;
      var $55=$s;
      var $hash_size79=(($55+76)|0);
      var $56=HEAP32[(($hash_size79)>>2)];
      var $sub80=(($56-1)|0);
      var $57=$s;
      var $hash_mask=(($57+84)|0);
      HEAP32[(($hash_mask)>>2)]=$sub80;
      var $58=$s;
      var $hash_bits81=(($58+80)|0);
      var $59=HEAP32[(($hash_bits81)>>2)];
      var $add82=(($59+3)|0);
      var $sub83=(($add82-1)|0);
      var $div=Math.floor((($sub83)>>>0)/3);
      var $60=$s;
      var $hash_shift=(($60+88)|0);
      HEAP32[(($hash_shift)>>2)]=$div;
      var $61=$strm_addr;
      var $zalloc84=(($61+32)|0);
      var $62=HEAP32[(($zalloc84)>>2)];
      var $63=$strm_addr;
      var $opaque85=(($63+40)|0);
      var $64=HEAP32[(($opaque85)>>2)];
      var $65=$s;
      var $w_size86=(($65+44)|0);
      var $66=HEAP32[(($w_size86)>>2)];
      var $call87=FUNCTION_TABLE[$62]($64, $66, 2);
      var $67=$s;
      var $window=(($67+56)|0);
      HEAP32[(($window)>>2)]=$call87;
      var $68=$strm_addr;
      var $zalloc88=(($68+32)|0);
      var $69=HEAP32[(($zalloc88)>>2)];
      var $70=$strm_addr;
      var $opaque89=(($70+40)|0);
      var $71=HEAP32[(($opaque89)>>2)];
      var $72=$s;
      var $w_size90=(($72+44)|0);
      var $73=HEAP32[(($w_size90)>>2)];
      var $call91=FUNCTION_TABLE[$69]($71, $73, 2);
      var $74=$call91;
      var $75=$s;
      var $prev=(($75+64)|0);
      HEAP32[(($prev)>>2)]=$74;
      var $76=$s;
      var $prev92=(($76+64)|0);
      var $77=HEAP32[(($prev92)>>2)];
      var $78=$77;
      var $79=$s;
      var $w_size93=(($79+44)|0);
      var $80=HEAP32[(($w_size93)>>2)];
      var $mul=((($80<<1))|0);
      _memset($78, 0, $mul, 1);
      var $81=$strm_addr;
      var $zalloc94=(($81+32)|0);
      var $82=HEAP32[(($zalloc94)>>2)];
      var $83=$strm_addr;
      var $opaque95=(($83+40)|0);
      var $84=HEAP32[(($opaque95)>>2)];
      var $85=$s;
      var $hash_size96=(($85+76)|0);
      var $86=HEAP32[(($hash_size96)>>2)];
      var $call97=FUNCTION_TABLE[$82]($84, $86, 2);
      var $87=$call97;
      var $88=$s;
      var $head=(($88+68)|0);
      HEAP32[(($head)>>2)]=$87;
      var $89=$s;
      var $high_water=(($89+5824)|0);
      HEAP32[(($high_water)>>2)]=0;
      var $90=$memLevel_addr;
      var $add98=(($90+6)|0);
      var $shl99=1 << $add98;
      var $91=$s;
      var $lit_bufsize=(($91+5788)|0);
      HEAP32[(($lit_bufsize)>>2)]=$shl99;
      var $92=$strm_addr;
      var $zalloc100=(($92+32)|0);
      var $93=HEAP32[(($zalloc100)>>2)];
      var $94=$strm_addr;
      var $opaque101=(($94+40)|0);
      var $95=HEAP32[(($opaque101)>>2)];
      var $96=$s;
      var $lit_bufsize102=(($96+5788)|0);
      var $97=HEAP32[(($lit_bufsize102)>>2)];
      var $call103=FUNCTION_TABLE[$93]($95, $97, 4);
      var $98=$call103;
      $overlay=$98;
      var $99=$overlay;
      var $100=$99;
      var $101=$s;
      var $pending_buf=(($101+8)|0);
      HEAP32[(($pending_buf)>>2)]=$100;
      var $102=$s;
      var $lit_bufsize104=(($102+5788)|0);
      var $103=HEAP32[(($lit_bufsize104)>>2)];
      var $mul105=((($103<<2))|0);
      var $104=$s;
      var $pending_buf_size=(($104+12)|0);
      HEAP32[(($pending_buf_size)>>2)]=$mul105;
      var $105=$s;
      var $window106=(($105+56)|0);
      var $106=HEAP32[(($window106)>>2)];
      var $cmp107=(($106)|0)==0;
      if ($cmp107) { __label__ = 35; break; } else { __label__ = 32; break; }
    case 32: // $lor_lhs_false109
      var $107=$s;
      var $prev110=(($107+64)|0);
      var $108=HEAP32[(($prev110)>>2)];
      var $cmp111=(($108)|0)==0;
      if ($cmp111) { __label__ = 35; break; } else { __label__ = 33; break; }
    case 33: // $lor_lhs_false113
      var $109=$s;
      var $head114=(($109+68)|0);
      var $110=HEAP32[(($head114)>>2)];
      var $cmp115=(($110)|0)==0;
      if ($cmp115) { __label__ = 35; break; } else { __label__ = 34; break; }
    case 34: // $lor_lhs_false117
      var $111=$s;
      var $pending_buf118=(($111+8)|0);
      var $112=HEAP32[(($pending_buf118)>>2)];
      var $cmp119=(($112)|0)==0;
      if ($cmp119) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $if_then121
      var $113=$s;
      var $status=(($113+4)|0);
      HEAP32[(($status)>>2)]=666;
      var $114=HEAP32[((((_z_errmsg+24)|0))>>2)];
      var $115=$strm_addr;
      var $msg122=(($115+24)|0);
      HEAP32[(($msg122)>>2)]=$114;
      var $116=$strm_addr;
      var $call123=_deflateEnd($116);
      $retval=-4;
      __label__ = 37; break;
    case 36: // $if_end124
      var $117=$overlay;
      var $118=$s;
      var $lit_bufsize125=(($118+5788)|0);
      var $119=HEAPU32[(($lit_bufsize125)>>2)];
      var $div126=Math.floor((($119)>>>0)/2);
      var $add_ptr=(($117+($div126<<1))|0);
      var $120=$s;
      var $d_buf=(($120+5796)|0);
      HEAP32[(($d_buf)>>2)]=$add_ptr;
      var $121=$s;
      var $pending_buf127=(($121+8)|0);
      var $122=HEAP32[(($pending_buf127)>>2)];
      var $123=$s;
      var $lit_bufsize128=(($123+5788)|0);
      var $124=HEAP32[(($lit_bufsize128)>>2)];
      var $mul129=(($124*3)|0);
      var $add_ptr130=(($122+$mul129)|0);
      var $125=$s;
      var $l_buf=(($125+5784)|0);
      HEAP32[(($l_buf)>>2)]=$add_ptr130;
      var $126=$level_addr;
      var $127=$s;
      var $level131=(($127+132)|0);
      HEAP32[(($level131)>>2)]=$126;
      var $128=$strategy_addr;
      var $129=$s;
      var $strategy132=(($129+136)|0);
      HEAP32[(($strategy132)>>2)]=$128;
      var $130=$method_addr;
      var $conv133=(($130) & 255);
      var $131=$s;
      var $method134=(($131+36)|0);
      HEAP8[($method134)]=$conv133;
      var $132=$strm_addr;
      var $call135=_deflateReset($132);
      $retval=$call135;
      __label__ = 37; break;
    case 37: // $return
      var $133=$retval;
      ;
      return $133;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflateInit2_["X"]=1;

function _deflateEnd($strm) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $status;
      $strm_addr=$strm;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state=(($1+28)|0);
      var $2=HEAP32[(($state)>>2)];
      var $cmp1=(($2)|0)==0;
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      $retval=-2;
      __label__ = 20; break;
    case 3: // $if_end
      var $3=$strm_addr;
      var $state2=(($3+28)|0);
      var $4=HEAP32[(($state2)>>2)];
      var $status3=(($4+4)|0);
      var $5=HEAP32[(($status3)>>2)];
      $status=$5;
      var $6=$status;
      var $cmp4=(($6)|0)!=42;
      if ($cmp4) { __label__ = 4; break; } else { __label__ = 11; break; }
    case 4: // $land_lhs_true
      var $7=$status;
      var $cmp5=(($7)|0)!=69;
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 11; break; }
    case 5: // $land_lhs_true6
      var $8=$status;
      var $cmp7=(($8)|0)!=73;
      if ($cmp7) { __label__ = 6; break; } else { __label__ = 11; break; }
    case 6: // $land_lhs_true8
      var $9=$status;
      var $cmp9=(($9)|0)!=91;
      if ($cmp9) { __label__ = 7; break; } else { __label__ = 11; break; }
    case 7: // $land_lhs_true10
      var $10=$status;
      var $cmp11=(($10)|0)!=103;
      if ($cmp11) { __label__ = 8; break; } else { __label__ = 11; break; }
    case 8: // $land_lhs_true12
      var $11=$status;
      var $cmp13=(($11)|0)!=113;
      if ($cmp13) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 9: // $land_lhs_true14
      var $12=$status;
      var $cmp15=(($12)|0)!=666;
      if ($cmp15) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then16
      $retval=-2;
      __label__ = 20; break;
    case 11: // $if_end17
      var $13=$strm_addr;
      var $state18=(($13+28)|0);
      var $14=HEAP32[(($state18)>>2)];
      var $pending_buf=(($14+8)|0);
      var $15=HEAP32[(($pending_buf)>>2)];
      var $tobool=(($15)|0)!=0;
      if ($tobool) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then19
      var $16=$strm_addr;
      var $zfree=(($16+36)|0);
      var $17=HEAP32[(($zfree)>>2)];
      var $18=$strm_addr;
      var $opaque=(($18+40)|0);
      var $19=HEAP32[(($opaque)>>2)];
      var $20=$strm_addr;
      var $state20=(($20+28)|0);
      var $21=HEAP32[(($state20)>>2)];
      var $pending_buf21=(($21+8)|0);
      var $22=HEAP32[(($pending_buf21)>>2)];
      FUNCTION_TABLE[$17]($19, $22);
      __label__ = 13; break;
    case 13: // $if_end22
      var $23=$strm_addr;
      var $state23=(($23+28)|0);
      var $24=HEAP32[(($state23)>>2)];
      var $head=(($24+68)|0);
      var $25=HEAP32[(($head)>>2)];
      var $tobool24=(($25)|0)!=0;
      if ($tobool24) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then25
      var $26=$strm_addr;
      var $zfree26=(($26+36)|0);
      var $27=HEAP32[(($zfree26)>>2)];
      var $28=$strm_addr;
      var $opaque27=(($28+40)|0);
      var $29=HEAP32[(($opaque27)>>2)];
      var $30=$strm_addr;
      var $state28=(($30+28)|0);
      var $31=HEAP32[(($state28)>>2)];
      var $head29=(($31+68)|0);
      var $32=HEAP32[(($head29)>>2)];
      var $33=$32;
      FUNCTION_TABLE[$27]($29, $33);
      __label__ = 15; break;
    case 15: // $if_end30
      var $34=$strm_addr;
      var $state31=(($34+28)|0);
      var $35=HEAP32[(($state31)>>2)];
      var $prev=(($35+64)|0);
      var $36=HEAP32[(($prev)>>2)];
      var $tobool32=(($36)|0)!=0;
      if ($tobool32) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $if_then33
      var $37=$strm_addr;
      var $zfree34=(($37+36)|0);
      var $38=HEAP32[(($zfree34)>>2)];
      var $39=$strm_addr;
      var $opaque35=(($39+40)|0);
      var $40=HEAP32[(($opaque35)>>2)];
      var $41=$strm_addr;
      var $state36=(($41+28)|0);
      var $42=HEAP32[(($state36)>>2)];
      var $prev37=(($42+64)|0);
      var $43=HEAP32[(($prev37)>>2)];
      var $44=$43;
      FUNCTION_TABLE[$38]($40, $44);
      __label__ = 17; break;
    case 17: // $if_end38
      var $45=$strm_addr;
      var $state39=(($45+28)|0);
      var $46=HEAP32[(($state39)>>2)];
      var $window=(($46+56)|0);
      var $47=HEAP32[(($window)>>2)];
      var $tobool40=(($47)|0)!=0;
      if ($tobool40) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: // $if_then41
      var $48=$strm_addr;
      var $zfree42=(($48+36)|0);
      var $49=HEAP32[(($zfree42)>>2)];
      var $50=$strm_addr;
      var $opaque43=(($50+40)|0);
      var $51=HEAP32[(($opaque43)>>2)];
      var $52=$strm_addr;
      var $state44=(($52+28)|0);
      var $53=HEAP32[(($state44)>>2)];
      var $window45=(($53+56)|0);
      var $54=HEAP32[(($window45)>>2)];
      FUNCTION_TABLE[$49]($51, $54);
      __label__ = 19; break;
    case 19: // $if_end46
      var $55=$strm_addr;
      var $zfree47=(($55+36)|0);
      var $56=HEAP32[(($zfree47)>>2)];
      var $57=$strm_addr;
      var $opaque48=(($57+40)|0);
      var $58=HEAP32[(($opaque48)>>2)];
      var $59=$strm_addr;
      var $state49=(($59+28)|0);
      var $60=HEAP32[(($state49)>>2)];
      var $61=$60;
      FUNCTION_TABLE[$56]($58, $61);
      var $62=$strm_addr;
      var $state50=(($62+28)|0);
      HEAP32[(($state50)>>2)]=0;
      var $63=$status;
      var $cmp51=(($63)|0)==113;
      var $cond=$cmp51 ? -3 : 0;
      $retval=$cond;
      __label__ = 20; break;
    case 20: // $return
      var $64=$retval;
      ;
      return $64;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflateEnd["X"]=1;

function _deflateReset($strm) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $s;
      $strm_addr=$strm;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 4; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state=(($1+28)|0);
      var $2=HEAP32[(($state)>>2)];
      var $cmp1=(($2)|0)==0;
      if ($cmp1) { __label__ = 4; break; } else { __label__ = 2; break; }
    case 2: // $lor_lhs_false2
      var $3=$strm_addr;
      var $zalloc=(($3+32)|0);
      var $4=HEAP32[(($zalloc)>>2)];
      var $cmp3=(($4)|0)==0;
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: // $lor_lhs_false4
      var $5=$strm_addr;
      var $zfree=(($5+36)|0);
      var $6=HEAP32[(($zfree)>>2)];
      var $cmp5=(($6)|0)==0;
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then
      $retval=-2;
      __label__ = 11; break;
    case 5: // $if_end
      var $7=$strm_addr;
      var $total_out=(($7+20)|0);
      HEAP32[(($total_out)>>2)]=0;
      var $8=$strm_addr;
      var $total_in=(($8+8)|0);
      HEAP32[(($total_in)>>2)]=0;
      var $9=$strm_addr;
      var $msg=(($9+24)|0);
      HEAP32[(($msg)>>2)]=0;
      var $10=$strm_addr;
      var $data_type=(($10+44)|0);
      HEAP32[(($data_type)>>2)]=2;
      var $11=$strm_addr;
      var $state6=(($11+28)|0);
      var $12=HEAP32[(($state6)>>2)];
      $s=$12;
      var $13=$s;
      var $pending=(($13+20)|0);
      HEAP32[(($pending)>>2)]=0;
      var $14=$s;
      var $pending_buf=(($14+8)|0);
      var $15=HEAP32[(($pending_buf)>>2)];
      var $16=$s;
      var $pending_out=(($16+16)|0);
      HEAP32[(($pending_out)>>2)]=$15;
      var $17=$s;
      var $wrap=(($17+24)|0);
      var $18=HEAP32[(($wrap)>>2)];
      var $cmp7=(($18)|0) < 0;
      if ($cmp7) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then8
      var $19=$s;
      var $wrap9=(($19+24)|0);
      var $20=HEAP32[(($wrap9)>>2)];
      var $sub=(((-$20))|0);
      var $21=$s;
      var $wrap10=(($21+24)|0);
      HEAP32[(($wrap10)>>2)]=$sub;
      __label__ = 7; break;
    case 7: // $if_end11
      var $22=$s;
      var $wrap12=(($22+24)|0);
      var $23=HEAP32[(($wrap12)>>2)];
      var $tobool=(($23)|0)!=0;
      var $cond=$tobool ? 42 : 113;
      var $24=$s;
      var $status=(($24+4)|0);
      HEAP32[(($status)>>2)]=$cond;
      var $25=$s;
      var $wrap13=(($25+24)|0);
      var $26=HEAP32[(($wrap13)>>2)];
      var $cmp14=(($26)|0)==2;
      if ($cmp14) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $cond_true
      var $call=_crc32(0, 0, 0);
      var $cond16 = $call;__label__ = 10; break;
    case 9: // $cond_false
      var $call15=_adler32(0, 0, 0);
      var $cond16 = $call15;__label__ = 10; break;
    case 10: // $cond_end
      var $cond16;
      var $27=$strm_addr;
      var $adler=(($27+48)|0);
      HEAP32[(($adler)>>2)]=$cond16;
      var $28=$s;
      var $last_flush=(($28+40)|0);
      HEAP32[(($last_flush)>>2)]=0;
      var $29=$s;
      __tr_init($29);
      var $30=$s;
      _lm_init($30);
      $retval=0;
      __label__ = 11; break;
    case 11: // $return
      var $31=$retval;
      ;
      return $31;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflateReset["X"]=1;

function _lm_init($s) {
  ;
  var __label__;

  var $s_addr;
  $s_addr=$s;
  var $0=$s_addr;
  var $w_size=(($0+44)|0);
  var $1=HEAP32[(($w_size)>>2)];
  var $mul=((($1<<1))|0);
  var $2=$s_addr;
  var $window_size=(($2+60)|0);
  HEAP32[(($window_size)>>2)]=$mul;
  var $3=$s_addr;
  var $hash_size=(($3+76)|0);
  var $4=HEAP32[(($hash_size)>>2)];
  var $sub=(($4-1)|0);
  var $5=$s_addr;
  var $head=(($5+68)|0);
  var $6=HEAP32[(($head)>>2)];
  var $arrayidx=(($6+($sub<<1))|0);
  HEAP16[(($arrayidx)>>1)]=0;
  var $7=$s_addr;
  var $head1=(($7+68)|0);
  var $8=HEAP32[(($head1)>>2)];
  var $9=$8;
  var $10=$s_addr;
  var $hash_size2=(($10+76)|0);
  var $11=HEAP32[(($hash_size2)>>2)];
  var $sub3=(($11-1)|0);
  var $mul4=((($sub3<<1))|0);
  _memset($9, 0, $mul4, 1);
  var $12=$s_addr;
  var $level=(($12+132)|0);
  var $13=HEAP32[(($level)>>2)];
  var $arrayidx5=((_configuration_table+$13*12)|0);
  var $max_lazy=(($arrayidx5+2)|0);
  var $14=HEAPU16[(($max_lazy)>>1)];
  var $conv=(($14)&65535);
  var $15=$s_addr;
  var $max_lazy_match=(($15+128)|0);
  HEAP32[(($max_lazy_match)>>2)]=$conv;
  var $16=$s_addr;
  var $level6=(($16+132)|0);
  var $17=HEAP32[(($level6)>>2)];
  var $arrayidx7=((_configuration_table+$17*12)|0);
  var $good_length=(($arrayidx7)|0);
  var $18=HEAPU16[(($good_length)>>1)];
  var $conv8=(($18)&65535);
  var $19=$s_addr;
  var $good_match=(($19+140)|0);
  HEAP32[(($good_match)>>2)]=$conv8;
  var $20=$s_addr;
  var $level9=(($20+132)|0);
  var $21=HEAP32[(($level9)>>2)];
  var $arrayidx10=((_configuration_table+$21*12)|0);
  var $nice_length=(($arrayidx10+4)|0);
  var $22=HEAPU16[(($nice_length)>>1)];
  var $conv11=(($22)&65535);
  var $23=$s_addr;
  var $nice_match=(($23+144)|0);
  HEAP32[(($nice_match)>>2)]=$conv11;
  var $24=$s_addr;
  var $level12=(($24+132)|0);
  var $25=HEAP32[(($level12)>>2)];
  var $arrayidx13=((_configuration_table+$25*12)|0);
  var $max_chain=(($arrayidx13+6)|0);
  var $26=HEAPU16[(($max_chain)>>1)];
  var $conv14=(($26)&65535);
  var $27=$s_addr;
  var $max_chain_length=(($27+124)|0);
  HEAP32[(($max_chain_length)>>2)]=$conv14;
  var $28=$s_addr;
  var $strstart=(($28+108)|0);
  HEAP32[(($strstart)>>2)]=0;
  var $29=$s_addr;
  var $block_start=(($29+92)|0);
  HEAP32[(($block_start)>>2)]=0;
  var $30=$s_addr;
  var $lookahead=(($30+116)|0);
  HEAP32[(($lookahead)>>2)]=0;
  var $31=$s_addr;
  var $prev_length=(($31+120)|0);
  HEAP32[(($prev_length)>>2)]=2;
  var $32=$s_addr;
  var $match_length=(($32+96)|0);
  HEAP32[(($match_length)>>2)]=2;
  var $33=$s_addr;
  var $match_start=(($33+112)|0);
  HEAP32[(($match_start)>>2)]=0;
  var $34=$s_addr;
  var $match_available=(($34+104)|0);
  HEAP32[(($match_available)>>2)]=0;
  var $35=$s_addr;
  var $ins_h=(($35+72)|0);
  HEAP32[(($ins_h)>>2)]=0;
  ;
  return;
}
_lm_init["X"]=1;

function _deflate($strm, $flush) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $flush_addr;
      var $old_flush;
      var $s;
      var $header;
      var $level_flags;
      var $beg;
      var $beg329;
      var $val;
      var $beg408;
      var $val410;
      var $bstate;
      $strm_addr=$strm;
      $flush_addr=$flush;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 4; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state=(($1+28)|0);
      var $2=HEAP32[(($state)>>2)];
      var $cmp1=(($2)|0)==0;
      if ($cmp1) { __label__ = 4; break; } else { __label__ = 2; break; }
    case 2: // $lor_lhs_false2
      var $3=$flush_addr;
      var $cmp3=(($3)|0) > 5;
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: // $lor_lhs_false4
      var $4=$flush_addr;
      var $cmp5=(($4)|0) < 0;
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then
      $retval=-2;
      __label__ = 172; break;
    case 5: // $if_end
      var $5=$strm_addr;
      var $state6=(($5+28)|0);
      var $6=HEAP32[(($state6)>>2)];
      $s=$6;
      var $7=$strm_addr;
      var $next_out=(($7+12)|0);
      var $8=HEAP32[(($next_out)>>2)];
      var $cmp7=(($8)|0)==0;
      if ($cmp7) { __label__ = 10; break; } else { __label__ = 6; break; }
    case 6: // $lor_lhs_false8
      var $9=$strm_addr;
      var $next_in=(($9)|0);
      var $10=HEAP32[(($next_in)>>2)];
      var $cmp9=(($10)|0)==0;
      if ($cmp9) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $land_lhs_true
      var $11=$strm_addr;
      var $avail_in=(($11+4)|0);
      var $12=HEAP32[(($avail_in)>>2)];
      var $cmp10=(($12)|0)!=0;
      if ($cmp10) { __label__ = 10; break; } else { __label__ = 8; break; }
    case 8: // $lor_lhs_false11
      var $13=$s;
      var $status=(($13+4)|0);
      var $14=HEAP32[(($status)>>2)];
      var $cmp12=(($14)|0)==666;
      if ($cmp12) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 9: // $land_lhs_true13
      var $15=$flush_addr;
      var $cmp14=(($15)|0)!=4;
      if ($cmp14) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then15
      var $16=HEAP32[((((_z_errmsg+16)|0))>>2)];
      var $17=$strm_addr;
      var $msg=(($17+24)|0);
      HEAP32[(($msg)>>2)]=$16;
      $retval=-2;
      __label__ = 172; break;
    case 11: // $if_end16
      var $18=$strm_addr;
      var $avail_out=(($18+16)|0);
      var $19=HEAP32[(($avail_out)>>2)];
      var $cmp17=(($19)|0)==0;
      if ($cmp17) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then18
      var $20=HEAP32[((((_z_errmsg+28)|0))>>2)];
      var $21=$strm_addr;
      var $msg19=(($21+24)|0);
      HEAP32[(($msg19)>>2)]=$20;
      $retval=-5;
      __label__ = 172; break;
    case 13: // $if_end20
      var $22=$strm_addr;
      var $23=$s;
      var $strm21=(($23)|0);
      HEAP32[(($strm21)>>2)]=$22;
      var $24=$s;
      var $last_flush=(($24+40)|0);
      var $25=HEAP32[(($last_flush)>>2)];
      $old_flush=$25;
      var $26=$flush_addr;
      var $27=$s;
      var $last_flush22=(($27+40)|0);
      HEAP32[(($last_flush22)>>2)]=$26;
      var $28=$s;
      var $status23=(($28+4)|0);
      var $29=HEAP32[(($status23)>>2)];
      var $cmp24=(($29)|0)==42;
      if ($cmp24) { __label__ = 14; break; } else { __label__ = 49; break; }
    case 14: // $if_then25
      var $30=$s;
      var $wrap=(($30+24)|0);
      var $31=HEAP32[(($wrap)>>2)];
      var $cmp26=(($31)|0)==2;
      if ($cmp26) { __label__ = 15; break; } else { __label__ = 33; break; }
    case 15: // $if_then27
      var $call=_crc32(0, 0, 0);
      var $32=$strm_addr;
      var $adler=(($32+48)|0);
      HEAP32[(($adler)>>2)]=$call;
      var $33=$s;
      var $pending=(($33+20)|0);
      var $34=HEAP32[(($pending)>>2)];
      var $inc=(($34+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $35=$s;
      var $pending_buf=(($35+8)|0);
      var $36=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($36+$34)|0);
      HEAP8[($arrayidx)]=31;
      var $37=$s;
      var $pending28=(($37+20)|0);
      var $38=HEAP32[(($pending28)>>2)];
      var $inc29=(($38+1)|0);
      HEAP32[(($pending28)>>2)]=$inc29;
      var $39=$s;
      var $pending_buf30=(($39+8)|0);
      var $40=HEAP32[(($pending_buf30)>>2)];
      var $arrayidx31=(($40+$38)|0);
      HEAP8[($arrayidx31)]=-117;
      var $41=$s;
      var $pending32=(($41+20)|0);
      var $42=HEAP32[(($pending32)>>2)];
      var $inc33=(($42+1)|0);
      HEAP32[(($pending32)>>2)]=$inc33;
      var $43=$s;
      var $pending_buf34=(($43+8)|0);
      var $44=HEAP32[(($pending_buf34)>>2)];
      var $arrayidx35=(($44+$42)|0);
      HEAP8[($arrayidx35)]=8;
      var $45=$s;
      var $gzhead=(($45+28)|0);
      var $46=HEAP32[(($gzhead)>>2)];
      var $cmp36=(($46)|0)==0;
      if ($cmp36) { __label__ = 16; break; } else { __label__ = 22; break; }
    case 16: // $if_then37
      var $47=$s;
      var $pending38=(($47+20)|0);
      var $48=HEAP32[(($pending38)>>2)];
      var $inc39=(($48+1)|0);
      HEAP32[(($pending38)>>2)]=$inc39;
      var $49=$s;
      var $pending_buf40=(($49+8)|0);
      var $50=HEAP32[(($pending_buf40)>>2)];
      var $arrayidx41=(($50+$48)|0);
      HEAP8[($arrayidx41)]=0;
      var $51=$s;
      var $pending42=(($51+20)|0);
      var $52=HEAP32[(($pending42)>>2)];
      var $inc43=(($52+1)|0);
      HEAP32[(($pending42)>>2)]=$inc43;
      var $53=$s;
      var $pending_buf44=(($53+8)|0);
      var $54=HEAP32[(($pending_buf44)>>2)];
      var $arrayidx45=(($54+$52)|0);
      HEAP8[($arrayidx45)]=0;
      var $55=$s;
      var $pending46=(($55+20)|0);
      var $56=HEAP32[(($pending46)>>2)];
      var $inc47=(($56+1)|0);
      HEAP32[(($pending46)>>2)]=$inc47;
      var $57=$s;
      var $pending_buf48=(($57+8)|0);
      var $58=HEAP32[(($pending_buf48)>>2)];
      var $arrayidx49=(($58+$56)|0);
      HEAP8[($arrayidx49)]=0;
      var $59=$s;
      var $pending50=(($59+20)|0);
      var $60=HEAP32[(($pending50)>>2)];
      var $inc51=(($60+1)|0);
      HEAP32[(($pending50)>>2)]=$inc51;
      var $61=$s;
      var $pending_buf52=(($61+8)|0);
      var $62=HEAP32[(($pending_buf52)>>2)];
      var $arrayidx53=(($62+$60)|0);
      HEAP8[($arrayidx53)]=0;
      var $63=$s;
      var $pending54=(($63+20)|0);
      var $64=HEAP32[(($pending54)>>2)];
      var $inc55=(($64+1)|0);
      HEAP32[(($pending54)>>2)]=$inc55;
      var $65=$s;
      var $pending_buf56=(($65+8)|0);
      var $66=HEAP32[(($pending_buf56)>>2)];
      var $arrayidx57=(($66+$64)|0);
      HEAP8[($arrayidx57)]=0;
      var $67=$s;
      var $level=(($67+132)|0);
      var $68=HEAP32[(($level)>>2)];
      var $cmp58=(($68)|0)==9;
      if ($cmp58) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $cond_true
      var $cond62 = 2;__label__ = 21; break;
    case 18: // $cond_false
      var $69=$s;
      var $strategy=(($69+136)|0);
      var $70=HEAP32[(($strategy)>>2)];
      var $cmp59=(($70)|0) >= 2;
      if ($cmp59) { var $73 = 1;__label__ = 20; break; } else { __label__ = 19; break; }
    case 19: // $lor_rhs
      var $71=$s;
      var $level60=(($71+132)|0);
      var $72=HEAP32[(($level60)>>2)];
      var $cmp61=(($72)|0) < 2;
      var $73 = $cmp61;__label__ = 20; break;
    case 20: // $lor_end
      var $73;
      var $cond=$73 ? 4 : 0;
      var $cond62 = $cond;__label__ = 21; break;
    case 21: // $cond_end
      var $cond62;
      var $conv=(($cond62) & 255);
      var $74=$s;
      var $pending63=(($74+20)|0);
      var $75=HEAP32[(($pending63)>>2)];
      var $inc64=(($75+1)|0);
      HEAP32[(($pending63)>>2)]=$inc64;
      var $76=$s;
      var $pending_buf65=(($76+8)|0);
      var $77=HEAP32[(($pending_buf65)>>2)];
      var $arrayidx66=(($77+$75)|0);
      HEAP8[($arrayidx66)]=$conv;
      var $78=$s;
      var $pending67=(($78+20)|0);
      var $79=HEAP32[(($pending67)>>2)];
      var $inc68=(($79+1)|0);
      HEAP32[(($pending67)>>2)]=$inc68;
      var $80=$s;
      var $pending_buf69=(($80+8)|0);
      var $81=HEAP32[(($pending_buf69)>>2)];
      var $arrayidx70=(($81+$79)|0);
      HEAP8[($arrayidx70)]=3;
      var $82=$s;
      var $status71=(($82+4)|0);
      HEAP32[(($status71)>>2)]=113;
      __label__ = 32; break;
    case 22: // $if_else
      var $83=$s;
      var $gzhead72=(($83+28)|0);
      var $84=HEAP32[(($gzhead72)>>2)];
      var $text=(($84)|0);
      var $85=HEAP32[(($text)>>2)];
      var $tobool=(($85)|0)!=0;
      var $cond73=$tobool ? 1 : 0;
      var $86=$s;
      var $gzhead74=(($86+28)|0);
      var $87=HEAP32[(($gzhead74)>>2)];
      var $hcrc=(($87+44)|0);
      var $88=HEAP32[(($hcrc)>>2)];
      var $tobool75=(($88)|0)!=0;
      var $cond76=$tobool75 ? 2 : 0;
      var $add=(($cond73+$cond76)|0);
      var $89=$s;
      var $gzhead77=(($89+28)|0);
      var $90=HEAP32[(($gzhead77)>>2)];
      var $extra=(($90+16)|0);
      var $91=HEAP32[(($extra)>>2)];
      var $cmp78=(($91)|0)==0;
      var $cond80=$cmp78 ? 0 : 4;
      var $add81=(($add+$cond80)|0);
      var $92=$s;
      var $gzhead82=(($92+28)|0);
      var $93=HEAP32[(($gzhead82)>>2)];
      var $name=(($93+28)|0);
      var $94=HEAP32[(($name)>>2)];
      var $cmp83=(($94)|0)==0;
      var $cond85=$cmp83 ? 0 : 8;
      var $add86=(($add81+$cond85)|0);
      var $95=$s;
      var $gzhead87=(($95+28)|0);
      var $96=HEAP32[(($gzhead87)>>2)];
      var $comment=(($96+36)|0);
      var $97=HEAP32[(($comment)>>2)];
      var $cmp88=(($97)|0)==0;
      var $cond90=$cmp88 ? 0 : 16;
      var $add91=(($add86+$cond90)|0);
      var $conv92=(($add91) & 255);
      var $98=$s;
      var $pending93=(($98+20)|0);
      var $99=HEAP32[(($pending93)>>2)];
      var $inc94=(($99+1)|0);
      HEAP32[(($pending93)>>2)]=$inc94;
      var $100=$s;
      var $pending_buf95=(($100+8)|0);
      var $101=HEAP32[(($pending_buf95)>>2)];
      var $arrayidx96=(($101+$99)|0);
      HEAP8[($arrayidx96)]=$conv92;
      var $102=$s;
      var $gzhead97=(($102+28)|0);
      var $103=HEAP32[(($gzhead97)>>2)];
      var $time=(($103+4)|0);
      var $104=HEAP32[(($time)>>2)];
      var $and=$104 & 255;
      var $conv98=(($and) & 255);
      var $105=$s;
      var $pending99=(($105+20)|0);
      var $106=HEAP32[(($pending99)>>2)];
      var $inc100=(($106+1)|0);
      HEAP32[(($pending99)>>2)]=$inc100;
      var $107=$s;
      var $pending_buf101=(($107+8)|0);
      var $108=HEAP32[(($pending_buf101)>>2)];
      var $arrayidx102=(($108+$106)|0);
      HEAP8[($arrayidx102)]=$conv98;
      var $109=$s;
      var $gzhead103=(($109+28)|0);
      var $110=HEAP32[(($gzhead103)>>2)];
      var $time104=(($110+4)|0);
      var $111=HEAPU32[(($time104)>>2)];
      var $shr=$111 >>> 8;
      var $and105=$shr & 255;
      var $conv106=(($and105) & 255);
      var $112=$s;
      var $pending107=(($112+20)|0);
      var $113=HEAPU32[(($pending107)>>2)];
      var $inc108=(($113+1)|0);
      HEAP32[(($pending107)>>2)]=$inc108;
      var $114=$s;
      var $pending_buf109=(($114+8)|0);
      var $115=HEAP32[(($pending_buf109)>>2)];
      var $arrayidx110=(($115+$113)|0);
      HEAP8[($arrayidx110)]=$conv106;
      var $116=$s;
      var $gzhead111=(($116+28)|0);
      var $117=HEAP32[(($gzhead111)>>2)];
      var $time112=(($117+4)|0);
      var $118=HEAPU32[(($time112)>>2)];
      var $shr113=$118 >>> 16;
      var $and114=$shr113 & 255;
      var $conv115=(($and114) & 255);
      var $119=$s;
      var $pending116=(($119+20)|0);
      var $120=HEAPU32[(($pending116)>>2)];
      var $inc117=(($120+1)|0);
      HEAP32[(($pending116)>>2)]=$inc117;
      var $121=$s;
      var $pending_buf118=(($121+8)|0);
      var $122=HEAP32[(($pending_buf118)>>2)];
      var $arrayidx119=(($122+$120)|0);
      HEAP8[($arrayidx119)]=$conv115;
      var $123=$s;
      var $gzhead120=(($123+28)|0);
      var $124=HEAP32[(($gzhead120)>>2)];
      var $time121=(($124+4)|0);
      var $125=HEAPU32[(($time121)>>2)];
      var $shr122=$125 >>> 24;
      var $and123=$shr122 & 255;
      var $conv124=(($and123) & 255);
      var $126=$s;
      var $pending125=(($126+20)|0);
      var $127=HEAPU32[(($pending125)>>2)];
      var $inc126=(($127+1)|0);
      HEAP32[(($pending125)>>2)]=$inc126;
      var $128=$s;
      var $pending_buf127=(($128+8)|0);
      var $129=HEAP32[(($pending_buf127)>>2)];
      var $arrayidx128=(($129+$127)|0);
      HEAP8[($arrayidx128)]=$conv124;
      var $130=$s;
      var $level129=(($130+132)|0);
      var $131=HEAP32[(($level129)>>2)];
      var $cmp130=(($131)|0)==9;
      if ($cmp130) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: // $cond_true132
      var $cond144 = 2;__label__ = 27; break;
    case 24: // $cond_false133
      var $132=$s;
      var $strategy134=(($132+136)|0);
      var $133=HEAP32[(($strategy134)>>2)];
      var $cmp135=(($133)|0) >= 2;
      if ($cmp135) { var $136 = 1;__label__ = 26; break; } else { __label__ = 25; break; }
    case 25: // $lor_rhs137
      var $134=$s;
      var $level138=(($134+132)|0);
      var $135=HEAP32[(($level138)>>2)];
      var $cmp139=(($135)|0) < 2;
      var $136 = $cmp139;__label__ = 26; break;
    case 26: // $lor_end141
      var $136;
      var $cond142=$136 ? 4 : 0;
      var $cond144 = $cond142;__label__ = 27; break;
    case 27: // $cond_end143
      var $cond144;
      var $conv145=(($cond144) & 255);
      var $137=$s;
      var $pending146=(($137+20)|0);
      var $138=HEAP32[(($pending146)>>2)];
      var $inc147=(($138+1)|0);
      HEAP32[(($pending146)>>2)]=$inc147;
      var $139=$s;
      var $pending_buf148=(($139+8)|0);
      var $140=HEAP32[(($pending_buf148)>>2)];
      var $arrayidx149=(($140+$138)|0);
      HEAP8[($arrayidx149)]=$conv145;
      var $141=$s;
      var $gzhead150=(($141+28)|0);
      var $142=HEAP32[(($gzhead150)>>2)];
      var $os=(($142+12)|0);
      var $143=HEAP32[(($os)>>2)];
      var $and151=$143 & 255;
      var $conv152=(($and151) & 255);
      var $144=$s;
      var $pending153=(($144+20)|0);
      var $145=HEAP32[(($pending153)>>2)];
      var $inc154=(($145+1)|0);
      HEAP32[(($pending153)>>2)]=$inc154;
      var $146=$s;
      var $pending_buf155=(($146+8)|0);
      var $147=HEAP32[(($pending_buf155)>>2)];
      var $arrayidx156=(($147+$145)|0);
      HEAP8[($arrayidx156)]=$conv152;
      var $148=$s;
      var $gzhead157=(($148+28)|0);
      var $149=HEAP32[(($gzhead157)>>2)];
      var $extra158=(($149+16)|0);
      var $150=HEAP32[(($extra158)>>2)];
      var $cmp159=(($150)|0)!=0;
      if ($cmp159) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: // $if_then161
      var $151=$s;
      var $gzhead162=(($151+28)|0);
      var $152=HEAP32[(($gzhead162)>>2)];
      var $extra_len=(($152+20)|0);
      var $153=HEAP32[(($extra_len)>>2)];
      var $and163=$153 & 255;
      var $conv164=(($and163) & 255);
      var $154=$s;
      var $pending165=(($154+20)|0);
      var $155=HEAP32[(($pending165)>>2)];
      var $inc166=(($155+1)|0);
      HEAP32[(($pending165)>>2)]=$inc166;
      var $156=$s;
      var $pending_buf167=(($156+8)|0);
      var $157=HEAP32[(($pending_buf167)>>2)];
      var $arrayidx168=(($157+$155)|0);
      HEAP8[($arrayidx168)]=$conv164;
      var $158=$s;
      var $gzhead169=(($158+28)|0);
      var $159=HEAP32[(($gzhead169)>>2)];
      var $extra_len170=(($159+20)|0);
      var $160=HEAPU32[(($extra_len170)>>2)];
      var $shr171=$160 >>> 8;
      var $and172=$shr171 & 255;
      var $conv173=(($and172) & 255);
      var $161=$s;
      var $pending174=(($161+20)|0);
      var $162=HEAPU32[(($pending174)>>2)];
      var $inc175=(($162+1)|0);
      HEAP32[(($pending174)>>2)]=$inc175;
      var $163=$s;
      var $pending_buf176=(($163+8)|0);
      var $164=HEAP32[(($pending_buf176)>>2)];
      var $arrayidx177=(($164+$162)|0);
      HEAP8[($arrayidx177)]=$conv173;
      __label__ = 29; break;
    case 29: // $if_end178
      var $165=$s;
      var $gzhead179=(($165+28)|0);
      var $166=HEAP32[(($gzhead179)>>2)];
      var $hcrc180=(($166+44)|0);
      var $167=HEAP32[(($hcrc180)>>2)];
      var $tobool181=(($167)|0)!=0;
      if ($tobool181) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then182
      var $168=$strm_addr;
      var $adler183=(($168+48)|0);
      var $169=HEAP32[(($adler183)>>2)];
      var $170=$s;
      var $pending_buf184=(($170+8)|0);
      var $171=HEAP32[(($pending_buf184)>>2)];
      var $172=$s;
      var $pending185=(($172+20)|0);
      var $173=HEAP32[(($pending185)>>2)];
      var $call186=_crc32($169, $171, $173);
      var $174=$strm_addr;
      var $adler187=(($174+48)|0);
      HEAP32[(($adler187)>>2)]=$call186;
      __label__ = 31; break;
    case 31: // $if_end188
      var $175=$s;
      var $gzindex=(($175+32)|0);
      HEAP32[(($gzindex)>>2)]=0;
      var $176=$s;
      var $status189=(($176+4)|0);
      HEAP32[(($status189)>>2)]=69;
      __label__ = 32; break;
    case 32: // $if_end190
      __label__ = 48; break;
    case 33: // $if_else191
      var $177=$s;
      var $w_bits=(($177+48)|0);
      var $178=HEAP32[(($w_bits)>>2)];
      var $sub=(($178-8)|0);
      var $shl=$sub << 4;
      var $add192=(($shl+8)|0);
      var $shl193=$add192 << 8;
      $header=$shl193;
      var $179=$s;
      var $strategy194=(($179+136)|0);
      var $180=HEAP32[(($strategy194)>>2)];
      var $cmp195=(($180)|0) >= 2;
      if ($cmp195) { __label__ = 35; break; } else { __label__ = 34; break; }
    case 34: // $lor_lhs_false197
      var $181=$s;
      var $level198=(($181+132)|0);
      var $182=HEAP32[(($level198)>>2)];
      var $cmp199=(($182)|0) < 2;
      if ($cmp199) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $if_then201
      $level_flags=0;
      __label__ = 43; break;
    case 36: // $if_else202
      var $183=$s;
      var $level203=(($183+132)|0);
      var $184=HEAP32[(($level203)>>2)];
      var $cmp204=(($184)|0) < 6;
      if ($cmp204) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: // $if_then206
      $level_flags=1;
      __label__ = 42; break;
    case 38: // $if_else207
      var $185=$s;
      var $level208=(($185+132)|0);
      var $186=HEAP32[(($level208)>>2)];
      var $cmp209=(($186)|0)==6;
      if ($cmp209) { __label__ = 39; break; } else { __label__ = 40; break; }
    case 39: // $if_then211
      $level_flags=2;
      __label__ = 41; break;
    case 40: // $if_else212
      $level_flags=3;
      __label__ = 41; break;
    case 41: // $if_end213
      __label__ = 42; break;
    case 42: // $if_end214
      __label__ = 43; break;
    case 43: // $if_end215
      var $187=$level_flags;
      var $shl216=$187 << 6;
      var $188=$header;
      var $or=$188 | $shl216;
      $header=$or;
      var $189=$s;
      var $strstart=(($189+108)|0);
      var $190=HEAP32[(($strstart)>>2)];
      var $cmp217=(($190)|0)!=0;
      if ($cmp217) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: // $if_then219
      var $191=$header;
      var $or220=$191 | 32;
      $header=$or220;
      __label__ = 45; break;
    case 45: // $if_end221
      var $192=$header;
      var $rem=(($192)>>>0)%31;
      var $sub222=((31-$rem)|0);
      var $193=$header;
      var $add223=(($193+$sub222)|0);
      $header=$add223;
      var $194=$s;
      var $status224=(($194+4)|0);
      HEAP32[(($status224)>>2)]=113;
      var $195=$s;
      var $196=$header;
      _putShortMSB($195, $196);
      var $197=$s;
      var $strstart225=(($197+108)|0);
      var $198=HEAP32[(($strstart225)>>2)];
      var $cmp226=(($198)|0)!=0;
      if ($cmp226) { __label__ = 46; break; } else { __label__ = 47; break; }
    case 46: // $if_then228
      var $199=$s;
      var $200=$strm_addr;
      var $adler229=(($200+48)|0);
      var $201=HEAPU32[(($adler229)>>2)];
      var $shr230=$201 >>> 16;
      _putShortMSB($199, $shr230);
      var $202=$s;
      var $203=$strm_addr;
      var $adler231=(($203+48)|0);
      var $204=HEAP32[(($adler231)>>2)];
      var $and232=$204 & 65535;
      _putShortMSB($202, $and232);
      __label__ = 47; break;
    case 47: // $if_end233
      var $call234=_adler32(0, 0, 0);
      var $205=$strm_addr;
      var $adler235=(($205+48)|0);
      HEAP32[(($adler235)>>2)]=$call234;
      __label__ = 48; break;
    case 48: // $if_end236
      __label__ = 49; break;
    case 49: // $if_end237
      var $206=$s;
      var $status238=(($206+4)|0);
      var $207=HEAP32[(($status238)>>2)];
      var $cmp239=(($207)|0)==69;
      if ($cmp239) { __label__ = 50; break; } else { __label__ = 69; break; }
    case 50: // $if_then241
      var $208=$s;
      var $gzhead242=(($208+28)|0);
      var $209=HEAP32[(($gzhead242)>>2)];
      var $extra243=(($209+16)|0);
      var $210=HEAP32[(($extra243)>>2)];
      var $cmp244=(($210)|0)!=0;
      if ($cmp244) { __label__ = 51; break; } else { __label__ = 67; break; }
    case 51: // $if_then246
      var $211=$s;
      var $pending247=(($211+20)|0);
      var $212=HEAP32[(($pending247)>>2)];
      $beg=$212;
      __label__ = 52; break;
    case 52: // $while_cond
      var $213=$s;
      var $gzindex248=(($213+32)|0);
      var $214=HEAPU32[(($gzindex248)>>2)];
      var $215=$s;
      var $gzhead249=(($215+28)|0);
      var $216=HEAP32[(($gzhead249)>>2)];
      var $extra_len250=(($216+20)|0);
      var $217=HEAP32[(($extra_len250)>>2)];
      var $and251=$217 & 65535;
      var $cmp252=(($214)>>>0) < (($and251)>>>0);
      if ($cmp252) { __label__ = 53; break; } else { __label__ = 61; break; }
    case 53: // $while_body
      var $218=$s;
      var $pending254=(($218+20)|0);
      var $219=HEAP32[(($pending254)>>2)];
      var $220=$s;
      var $pending_buf_size=(($220+12)|0);
      var $221=HEAP32[(($pending_buf_size)>>2)];
      var $cmp255=(($219)|0)==(($221)|0);
      if ($cmp255) { __label__ = 54; break; } else { __label__ = 60; break; }
    case 54: // $if_then257
      var $222=$s;
      var $gzhead258=(($222+28)|0);
      var $223=HEAP32[(($gzhead258)>>2)];
      var $hcrc259=(($223+44)|0);
      var $224=HEAP32[(($hcrc259)>>2)];
      var $tobool260=(($224)|0)!=0;
      if ($tobool260) { __label__ = 55; break; } else { __label__ = 57; break; }
    case 55: // $land_lhs_true261
      var $225=$s;
      var $pending262=(($225+20)|0);
      var $226=HEAPU32[(($pending262)>>2)];
      var $227=$beg;
      var $cmp263=(($226)>>>0) > (($227)>>>0);
      if ($cmp263) { __label__ = 56; break; } else { __label__ = 57; break; }
    case 56: // $if_then265
      var $228=$strm_addr;
      var $adler266=(($228+48)|0);
      var $229=HEAP32[(($adler266)>>2)];
      var $230=$s;
      var $pending_buf267=(($230+8)|0);
      var $231=HEAP32[(($pending_buf267)>>2)];
      var $232=$beg;
      var $add_ptr=(($231+$232)|0);
      var $233=$s;
      var $pending268=(($233+20)|0);
      var $234=HEAP32[(($pending268)>>2)];
      var $235=$beg;
      var $sub269=(($234-$235)|0);
      var $call270=_crc32($229, $add_ptr, $sub269);
      var $236=$strm_addr;
      var $adler271=(($236+48)|0);
      HEAP32[(($adler271)>>2)]=$call270;
      __label__ = 57; break;
    case 57: // $if_end272
      var $237=$strm_addr;
      _flush_pending($237);
      var $238=$s;
      var $pending273=(($238+20)|0);
      var $239=HEAP32[(($pending273)>>2)];
      $beg=$239;
      var $240=$s;
      var $pending274=(($240+20)|0);
      var $241=HEAP32[(($pending274)>>2)];
      var $242=$s;
      var $pending_buf_size275=(($242+12)|0);
      var $243=HEAP32[(($pending_buf_size275)>>2)];
      var $cmp276=(($241)|0)==(($243)|0);
      if ($cmp276) { __label__ = 58; break; } else { __label__ = 59; break; }
    case 58: // $if_then278
      __label__ = 61; break;
    case 59: // $if_end279
      __label__ = 60; break;
    case 60: // $if_end280
      var $244=$s;
      var $gzindex281=(($244+32)|0);
      var $245=HEAP32[(($gzindex281)>>2)];
      var $246=$s;
      var $gzhead282=(($246+28)|0);
      var $247=HEAP32[(($gzhead282)>>2)];
      var $extra283=(($247+16)|0);
      var $248=HEAP32[(($extra283)>>2)];
      var $arrayidx284=(($248+$245)|0);
      var $249=HEAP8[($arrayidx284)];
      var $250=$s;
      var $pending285=(($250+20)|0);
      var $251=HEAP32[(($pending285)>>2)];
      var $inc286=(($251+1)|0);
      HEAP32[(($pending285)>>2)]=$inc286;
      var $252=$s;
      var $pending_buf287=(($252+8)|0);
      var $253=HEAP32[(($pending_buf287)>>2)];
      var $arrayidx288=(($253+$251)|0);
      HEAP8[($arrayidx288)]=$249;
      var $254=$s;
      var $gzindex289=(($254+32)|0);
      var $255=HEAP32[(($gzindex289)>>2)];
      var $inc290=(($255+1)|0);
      HEAP32[(($gzindex289)>>2)]=$inc290;
      __label__ = 52; break;
    case 61: // $while_end
      var $256=$s;
      var $gzhead291=(($256+28)|0);
      var $257=HEAP32[(($gzhead291)>>2)];
      var $hcrc292=(($257+44)|0);
      var $258=HEAP32[(($hcrc292)>>2)];
      var $tobool293=(($258)|0)!=0;
      if ($tobool293) { __label__ = 62; break; } else { __label__ = 64; break; }
    case 62: // $land_lhs_true294
      var $259=$s;
      var $pending295=(($259+20)|0);
      var $260=HEAPU32[(($pending295)>>2)];
      var $261=$beg;
      var $cmp296=(($260)>>>0) > (($261)>>>0);
      if ($cmp296) { __label__ = 63; break; } else { __label__ = 64; break; }
    case 63: // $if_then298
      var $262=$strm_addr;
      var $adler299=(($262+48)|0);
      var $263=HEAP32[(($adler299)>>2)];
      var $264=$s;
      var $pending_buf300=(($264+8)|0);
      var $265=HEAP32[(($pending_buf300)>>2)];
      var $266=$beg;
      var $add_ptr301=(($265+$266)|0);
      var $267=$s;
      var $pending302=(($267+20)|0);
      var $268=HEAP32[(($pending302)>>2)];
      var $269=$beg;
      var $sub303=(($268-$269)|0);
      var $call304=_crc32($263, $add_ptr301, $sub303);
      var $270=$strm_addr;
      var $adler305=(($270+48)|0);
      HEAP32[(($adler305)>>2)]=$call304;
      __label__ = 64; break;
    case 64: // $if_end306
      var $271=$s;
      var $gzindex307=(($271+32)|0);
      var $272=HEAP32[(($gzindex307)>>2)];
      var $273=$s;
      var $gzhead308=(($273+28)|0);
      var $274=HEAP32[(($gzhead308)>>2)];
      var $extra_len309=(($274+20)|0);
      var $275=HEAP32[(($extra_len309)>>2)];
      var $cmp310=(($272)|0)==(($275)|0);
      if ($cmp310) { __label__ = 65; break; } else { __label__ = 66; break; }
    case 65: // $if_then312
      var $276=$s;
      var $gzindex313=(($276+32)|0);
      HEAP32[(($gzindex313)>>2)]=0;
      var $277=$s;
      var $status314=(($277+4)|0);
      HEAP32[(($status314)>>2)]=73;
      __label__ = 66; break;
    case 66: // $if_end315
      __label__ = 68; break;
    case 67: // $if_else316
      var $278=$s;
      var $status317=(($278+4)|0);
      HEAP32[(($status317)>>2)]=73;
      __label__ = 68; break;
    case 68: // $if_end318
      __label__ = 69; break;
    case 69: // $if_end319
      var $279=$s;
      var $status320=(($279+4)|0);
      var $280=HEAP32[(($status320)>>2)];
      var $cmp321=(($280)|0)==73;
      if ($cmp321) { __label__ = 70; break; } else { __label__ = 89; break; }
    case 70: // $if_then323
      var $281=$s;
      var $gzhead324=(($281+28)|0);
      var $282=HEAP32[(($gzhead324)>>2)];
      var $name325=(($282+28)|0);
      var $283=HEAP32[(($name325)>>2)];
      var $cmp326=(($283)|0)!=0;
      if ($cmp326) { __label__ = 71; break; } else { __label__ = 87; break; }
    case 71: // $if_then328
      var $284=$s;
      var $pending330=(($284+20)|0);
      var $285=HEAP32[(($pending330)>>2)];
      $beg329=$285;
      __label__ = 72; break;
    case 72: // $do_body
      var $286=$s;
      var $pending331=(($286+20)|0);
      var $287=HEAP32[(($pending331)>>2)];
      var $288=$s;
      var $pending_buf_size332=(($288+12)|0);
      var $289=HEAP32[(($pending_buf_size332)>>2)];
      var $cmp333=(($287)|0)==(($289)|0);
      if ($cmp333) { __label__ = 73; break; } else { __label__ = 79; break; }
    case 73: // $if_then335
      var $290=$s;
      var $gzhead336=(($290+28)|0);
      var $291=HEAP32[(($gzhead336)>>2)];
      var $hcrc337=(($291+44)|0);
      var $292=HEAP32[(($hcrc337)>>2)];
      var $tobool338=(($292)|0)!=0;
      if ($tobool338) { __label__ = 74; break; } else { __label__ = 76; break; }
    case 74: // $land_lhs_true339
      var $293=$s;
      var $pending340=(($293+20)|0);
      var $294=HEAPU32[(($pending340)>>2)];
      var $295=$beg329;
      var $cmp341=(($294)>>>0) > (($295)>>>0);
      if ($cmp341) { __label__ = 75; break; } else { __label__ = 76; break; }
    case 75: // $if_then343
      var $296=$strm_addr;
      var $adler344=(($296+48)|0);
      var $297=HEAP32[(($adler344)>>2)];
      var $298=$s;
      var $pending_buf345=(($298+8)|0);
      var $299=HEAP32[(($pending_buf345)>>2)];
      var $300=$beg329;
      var $add_ptr346=(($299+$300)|0);
      var $301=$s;
      var $pending347=(($301+20)|0);
      var $302=HEAP32[(($pending347)>>2)];
      var $303=$beg329;
      var $sub348=(($302-$303)|0);
      var $call349=_crc32($297, $add_ptr346, $sub348);
      var $304=$strm_addr;
      var $adler350=(($304+48)|0);
      HEAP32[(($adler350)>>2)]=$call349;
      __label__ = 76; break;
    case 76: // $if_end351
      var $305=$strm_addr;
      _flush_pending($305);
      var $306=$s;
      var $pending352=(($306+20)|0);
      var $307=HEAP32[(($pending352)>>2)];
      $beg329=$307;
      var $308=$s;
      var $pending353=(($308+20)|0);
      var $309=HEAP32[(($pending353)>>2)];
      var $310=$s;
      var $pending_buf_size354=(($310+12)|0);
      var $311=HEAP32[(($pending_buf_size354)>>2)];
      var $cmp355=(($309)|0)==(($311)|0);
      if ($cmp355) { __label__ = 77; break; } else { __label__ = 78; break; }
    case 77: // $if_then357
      $val=1;
      __label__ = 81; break;
    case 78: // $if_end358
      __label__ = 79; break;
    case 79: // $if_end359
      var $312=$s;
      var $gzindex360=(($312+32)|0);
      var $313=HEAP32[(($gzindex360)>>2)];
      var $inc361=(($313+1)|0);
      HEAP32[(($gzindex360)>>2)]=$inc361;
      var $314=$s;
      var $gzhead362=(($314+28)|0);
      var $315=HEAP32[(($gzhead362)>>2)];
      var $name363=(($315+28)|0);
      var $316=HEAP32[(($name363)>>2)];
      var $arrayidx364=(($316+$313)|0);
      var $317=HEAPU8[($arrayidx364)];
      var $conv365=(($317)&255);
      $val=$conv365;
      var $318=$val;
      var $conv366=(($318) & 255);
      var $319=$s;
      var $pending367=(($319+20)|0);
      var $320=HEAPU32[(($pending367)>>2)];
      var $inc368=(($320+1)|0);
      HEAP32[(($pending367)>>2)]=$inc368;
      var $321=$s;
      var $pending_buf369=(($321+8)|0);
      var $322=HEAP32[(($pending_buf369)>>2)];
      var $arrayidx370=(($322+$320)|0);
      HEAP8[($arrayidx370)]=$conv366;
      __label__ = 80; break;
    case 80: // $do_cond
      var $323=$val;
      var $cmp371=(($323)|0)!=0;
      if ($cmp371) { __label__ = 72; break; } else { __label__ = 81; break; }
    case 81: // $do_end
      var $324=$s;
      var $gzhead373=(($324+28)|0);
      var $325=HEAP32[(($gzhead373)>>2)];
      var $hcrc374=(($325+44)|0);
      var $326=HEAP32[(($hcrc374)>>2)];
      var $tobool375=(($326)|0)!=0;
      if ($tobool375) { __label__ = 82; break; } else { __label__ = 84; break; }
    case 82: // $land_lhs_true376
      var $327=$s;
      var $pending377=(($327+20)|0);
      var $328=HEAPU32[(($pending377)>>2)];
      var $329=$beg329;
      var $cmp378=(($328)>>>0) > (($329)>>>0);
      if ($cmp378) { __label__ = 83; break; } else { __label__ = 84; break; }
    case 83: // $if_then380
      var $330=$strm_addr;
      var $adler381=(($330+48)|0);
      var $331=HEAP32[(($adler381)>>2)];
      var $332=$s;
      var $pending_buf382=(($332+8)|0);
      var $333=HEAP32[(($pending_buf382)>>2)];
      var $334=$beg329;
      var $add_ptr383=(($333+$334)|0);
      var $335=$s;
      var $pending384=(($335+20)|0);
      var $336=HEAP32[(($pending384)>>2)];
      var $337=$beg329;
      var $sub385=(($336-$337)|0);
      var $call386=_crc32($331, $add_ptr383, $sub385);
      var $338=$strm_addr;
      var $adler387=(($338+48)|0);
      HEAP32[(($adler387)>>2)]=$call386;
      __label__ = 84; break;
    case 84: // $if_end388
      var $339=$val;
      var $cmp389=(($339)|0)==0;
      if ($cmp389) { __label__ = 85; break; } else { __label__ = 86; break; }
    case 85: // $if_then391
      var $340=$s;
      var $gzindex392=(($340+32)|0);
      HEAP32[(($gzindex392)>>2)]=0;
      var $341=$s;
      var $status393=(($341+4)|0);
      HEAP32[(($status393)>>2)]=91;
      __label__ = 86; break;
    case 86: // $if_end394
      __label__ = 88; break;
    case 87: // $if_else395
      var $342=$s;
      var $status396=(($342+4)|0);
      HEAP32[(($status396)>>2)]=91;
      __label__ = 88; break;
    case 88: // $if_end397
      __label__ = 89; break;
    case 89: // $if_end398
      var $343=$s;
      var $status399=(($343+4)|0);
      var $344=HEAP32[(($status399)>>2)];
      var $cmp400=(($344)|0)==91;
      if ($cmp400) { __label__ = 90; break; } else { __label__ = 109; break; }
    case 90: // $if_then402
      var $345=$s;
      var $gzhead403=(($345+28)|0);
      var $346=HEAP32[(($gzhead403)>>2)];
      var $comment404=(($346+36)|0);
      var $347=HEAP32[(($comment404)>>2)];
      var $cmp405=(($347)|0)!=0;
      if ($cmp405) { __label__ = 91; break; } else { __label__ = 107; break; }
    case 91: // $if_then407
      var $348=$s;
      var $pending409=(($348+20)|0);
      var $349=HEAP32[(($pending409)>>2)];
      $beg408=$349;
      __label__ = 92; break;
    case 92: // $do_body411
      var $350=$s;
      var $pending412=(($350+20)|0);
      var $351=HEAP32[(($pending412)>>2)];
      var $352=$s;
      var $pending_buf_size413=(($352+12)|0);
      var $353=HEAP32[(($pending_buf_size413)>>2)];
      var $cmp414=(($351)|0)==(($353)|0);
      if ($cmp414) { __label__ = 93; break; } else { __label__ = 99; break; }
    case 93: // $if_then416
      var $354=$s;
      var $gzhead417=(($354+28)|0);
      var $355=HEAP32[(($gzhead417)>>2)];
      var $hcrc418=(($355+44)|0);
      var $356=HEAP32[(($hcrc418)>>2)];
      var $tobool419=(($356)|0)!=0;
      if ($tobool419) { __label__ = 94; break; } else { __label__ = 96; break; }
    case 94: // $land_lhs_true420
      var $357=$s;
      var $pending421=(($357+20)|0);
      var $358=HEAPU32[(($pending421)>>2)];
      var $359=$beg408;
      var $cmp422=(($358)>>>0) > (($359)>>>0);
      if ($cmp422) { __label__ = 95; break; } else { __label__ = 96; break; }
    case 95: // $if_then424
      var $360=$strm_addr;
      var $adler425=(($360+48)|0);
      var $361=HEAP32[(($adler425)>>2)];
      var $362=$s;
      var $pending_buf426=(($362+8)|0);
      var $363=HEAP32[(($pending_buf426)>>2)];
      var $364=$beg408;
      var $add_ptr427=(($363+$364)|0);
      var $365=$s;
      var $pending428=(($365+20)|0);
      var $366=HEAP32[(($pending428)>>2)];
      var $367=$beg408;
      var $sub429=(($366-$367)|0);
      var $call430=_crc32($361, $add_ptr427, $sub429);
      var $368=$strm_addr;
      var $adler431=(($368+48)|0);
      HEAP32[(($adler431)>>2)]=$call430;
      __label__ = 96; break;
    case 96: // $if_end432
      var $369=$strm_addr;
      _flush_pending($369);
      var $370=$s;
      var $pending433=(($370+20)|0);
      var $371=HEAP32[(($pending433)>>2)];
      $beg408=$371;
      var $372=$s;
      var $pending434=(($372+20)|0);
      var $373=HEAP32[(($pending434)>>2)];
      var $374=$s;
      var $pending_buf_size435=(($374+12)|0);
      var $375=HEAP32[(($pending_buf_size435)>>2)];
      var $cmp436=(($373)|0)==(($375)|0);
      if ($cmp436) { __label__ = 97; break; } else { __label__ = 98; break; }
    case 97: // $if_then438
      $val410=1;
      __label__ = 101; break;
    case 98: // $if_end439
      __label__ = 99; break;
    case 99: // $if_end440
      var $376=$s;
      var $gzindex441=(($376+32)|0);
      var $377=HEAP32[(($gzindex441)>>2)];
      var $inc442=(($377+1)|0);
      HEAP32[(($gzindex441)>>2)]=$inc442;
      var $378=$s;
      var $gzhead443=(($378+28)|0);
      var $379=HEAP32[(($gzhead443)>>2)];
      var $comment444=(($379+36)|0);
      var $380=HEAP32[(($comment444)>>2)];
      var $arrayidx445=(($380+$377)|0);
      var $381=HEAPU8[($arrayidx445)];
      var $conv446=(($381)&255);
      $val410=$conv446;
      var $382=$val410;
      var $conv447=(($382) & 255);
      var $383=$s;
      var $pending448=(($383+20)|0);
      var $384=HEAPU32[(($pending448)>>2)];
      var $inc449=(($384+1)|0);
      HEAP32[(($pending448)>>2)]=$inc449;
      var $385=$s;
      var $pending_buf450=(($385+8)|0);
      var $386=HEAP32[(($pending_buf450)>>2)];
      var $arrayidx451=(($386+$384)|0);
      HEAP8[($arrayidx451)]=$conv447;
      __label__ = 100; break;
    case 100: // $do_cond452
      var $387=$val410;
      var $cmp453=(($387)|0)!=0;
      if ($cmp453) { __label__ = 92; break; } else { __label__ = 101; break; }
    case 101: // $do_end455
      var $388=$s;
      var $gzhead456=(($388+28)|0);
      var $389=HEAP32[(($gzhead456)>>2)];
      var $hcrc457=(($389+44)|0);
      var $390=HEAP32[(($hcrc457)>>2)];
      var $tobool458=(($390)|0)!=0;
      if ($tobool458) { __label__ = 102; break; } else { __label__ = 104; break; }
    case 102: // $land_lhs_true459
      var $391=$s;
      var $pending460=(($391+20)|0);
      var $392=HEAPU32[(($pending460)>>2)];
      var $393=$beg408;
      var $cmp461=(($392)>>>0) > (($393)>>>0);
      if ($cmp461) { __label__ = 103; break; } else { __label__ = 104; break; }
    case 103: // $if_then463
      var $394=$strm_addr;
      var $adler464=(($394+48)|0);
      var $395=HEAP32[(($adler464)>>2)];
      var $396=$s;
      var $pending_buf465=(($396+8)|0);
      var $397=HEAP32[(($pending_buf465)>>2)];
      var $398=$beg408;
      var $add_ptr466=(($397+$398)|0);
      var $399=$s;
      var $pending467=(($399+20)|0);
      var $400=HEAP32[(($pending467)>>2)];
      var $401=$beg408;
      var $sub468=(($400-$401)|0);
      var $call469=_crc32($395, $add_ptr466, $sub468);
      var $402=$strm_addr;
      var $adler470=(($402+48)|0);
      HEAP32[(($adler470)>>2)]=$call469;
      __label__ = 104; break;
    case 104: // $if_end471
      var $403=$val410;
      var $cmp472=(($403)|0)==0;
      if ($cmp472) { __label__ = 105; break; } else { __label__ = 106; break; }
    case 105: // $if_then474
      var $404=$s;
      var $status475=(($404+4)|0);
      HEAP32[(($status475)>>2)]=103;
      __label__ = 106; break;
    case 106: // $if_end476
      __label__ = 108; break;
    case 107: // $if_else477
      var $405=$s;
      var $status478=(($405+4)|0);
      HEAP32[(($status478)>>2)]=103;
      __label__ = 108; break;
    case 108: // $if_end479
      __label__ = 109; break;
    case 109: // $if_end480
      var $406=$s;
      var $status481=(($406+4)|0);
      var $407=HEAP32[(($status481)>>2)];
      var $cmp482=(($407)|0)==103;
      if ($cmp482) { __label__ = 110; break; } else { __label__ = 118; break; }
    case 110: // $if_then484
      var $408=$s;
      var $gzhead485=(($408+28)|0);
      var $409=HEAP32[(($gzhead485)>>2)];
      var $hcrc486=(($409+44)|0);
      var $410=HEAP32[(($hcrc486)>>2)];
      var $tobool487=(($410)|0)!=0;
      if ($tobool487) { __label__ = 111; break; } else { __label__ = 116; break; }
    case 111: // $if_then488
      var $411=$s;
      var $pending489=(($411+20)|0);
      var $412=HEAP32[(($pending489)>>2)];
      var $add490=(($412+2)|0);
      var $413=$s;
      var $pending_buf_size491=(($413+12)|0);
      var $414=HEAPU32[(($pending_buf_size491)>>2)];
      var $cmp492=(($add490)>>>0) > (($414)>>>0);
      if ($cmp492) { __label__ = 112; break; } else { __label__ = 113; break; }
    case 112: // $if_then494
      var $415=$strm_addr;
      _flush_pending($415);
      __label__ = 113; break;
    case 113: // $if_end495
      var $416=$s;
      var $pending496=(($416+20)|0);
      var $417=HEAP32[(($pending496)>>2)];
      var $add497=(($417+2)|0);
      var $418=$s;
      var $pending_buf_size498=(($418+12)|0);
      var $419=HEAPU32[(($pending_buf_size498)>>2)];
      var $cmp499=(($add497)>>>0) <= (($419)>>>0);
      if ($cmp499) { __label__ = 114; break; } else { __label__ = 115; break; }
    case 114: // $if_then501
      var $420=$strm_addr;
      var $adler502=(($420+48)|0);
      var $421=HEAP32[(($adler502)>>2)];
      var $and503=$421 & 255;
      var $conv504=(($and503) & 255);
      var $422=$s;
      var $pending505=(($422+20)|0);
      var $423=HEAP32[(($pending505)>>2)];
      var $inc506=(($423+1)|0);
      HEAP32[(($pending505)>>2)]=$inc506;
      var $424=$s;
      var $pending_buf507=(($424+8)|0);
      var $425=HEAP32[(($pending_buf507)>>2)];
      var $arrayidx508=(($425+$423)|0);
      HEAP8[($arrayidx508)]=$conv504;
      var $426=$strm_addr;
      var $adler509=(($426+48)|0);
      var $427=HEAPU32[(($adler509)>>2)];
      var $shr510=$427 >>> 8;
      var $and511=$shr510 & 255;
      var $conv512=(($and511) & 255);
      var $428=$s;
      var $pending513=(($428+20)|0);
      var $429=HEAPU32[(($pending513)>>2)];
      var $inc514=(($429+1)|0);
      HEAP32[(($pending513)>>2)]=$inc514;
      var $430=$s;
      var $pending_buf515=(($430+8)|0);
      var $431=HEAP32[(($pending_buf515)>>2)];
      var $arrayidx516=(($431+$429)|0);
      HEAP8[($arrayidx516)]=$conv512;
      var $call517=_crc32(0, 0, 0);
      var $432=$strm_addr;
      var $adler518=(($432+48)|0);
      HEAP32[(($adler518)>>2)]=$call517;
      var $433=$s;
      var $status519=(($433+4)|0);
      HEAP32[(($status519)>>2)]=113;
      __label__ = 115; break;
    case 115: // $if_end520
      __label__ = 117; break;
    case 116: // $if_else521
      var $434=$s;
      var $status522=(($434+4)|0);
      HEAP32[(($status522)>>2)]=113;
      __label__ = 117; break;
    case 117: // $if_end523
      __label__ = 118; break;
    case 118: // $if_end524
      var $435=$s;
      var $pending525=(($435+20)|0);
      var $436=HEAP32[(($pending525)>>2)];
      var $cmp526=(($436)|0)!=0;
      if ($cmp526) { __label__ = 119; break; } else { __label__ = 122; break; }
    case 119: // $if_then528
      var $437=$strm_addr;
      _flush_pending($437);
      var $438=$strm_addr;
      var $avail_out529=(($438+16)|0);
      var $439=HEAP32[(($avail_out529)>>2)];
      var $cmp530=(($439)|0)==0;
      if ($cmp530) { __label__ = 120; break; } else { __label__ = 121; break; }
    case 120: // $if_then532
      var $440=$s;
      var $last_flush533=(($440+40)|0);
      HEAP32[(($last_flush533)>>2)]=-1;
      $retval=0;
      __label__ = 172; break;
    case 121: // $if_end534
      __label__ = 127; break;
    case 122: // $if_else535
      var $441=$strm_addr;
      var $avail_in536=(($441+4)|0);
      var $442=HEAP32[(($avail_in536)>>2)];
      var $cmp537=(($442)|0)==0;
      if ($cmp537) { __label__ = 123; break; } else { __label__ = 126; break; }
    case 123: // $land_lhs_true539
      var $443=$flush_addr;
      var $444=$old_flush;
      var $cmp540=(($443)|0) <= (($444)|0);
      if ($cmp540) { __label__ = 124; break; } else { __label__ = 126; break; }
    case 124: // $land_lhs_true542
      var $445=$flush_addr;
      var $cmp543=(($445)|0)!=4;
      if ($cmp543) { __label__ = 125; break; } else { __label__ = 126; break; }
    case 125: // $if_then545
      var $446=HEAP32[((((_z_errmsg+28)|0))>>2)];
      var $447=$strm_addr;
      var $msg546=(($447+24)|0);
      HEAP32[(($msg546)>>2)]=$446;
      $retval=-5;
      __label__ = 172; break;
    case 126: // $if_end547
      __label__ = 127; break;
    case 127: // $if_end548
      var $448=$s;
      var $status549=(($448+4)|0);
      var $449=HEAP32[(($status549)>>2)];
      var $cmp550=(($449)|0)==666;
      if ($cmp550) { __label__ = 128; break; } else { __label__ = 130; break; }
    case 128: // $land_lhs_true552
      var $450=$strm_addr;
      var $avail_in553=(($450+4)|0);
      var $451=HEAP32[(($avail_in553)>>2)];
      var $cmp554=(($451)|0)!=0;
      if ($cmp554) { __label__ = 129; break; } else { __label__ = 130; break; }
    case 129: // $if_then556
      var $452=HEAP32[((((_z_errmsg+28)|0))>>2)];
      var $453=$strm_addr;
      var $msg557=(($453+24)|0);
      HEAP32[(($msg557)>>2)]=$452;
      $retval=-5;
      __label__ = 172; break;
    case 130: // $if_end558
      var $454=$strm_addr;
      var $avail_in559=(($454+4)|0);
      var $455=HEAP32[(($avail_in559)>>2)];
      var $cmp560=(($455)|0)!=0;
      if ($cmp560) { __label__ = 134; break; } else { __label__ = 131; break; }
    case 131: // $lor_lhs_false562
      var $456=$s;
      var $lookahead=(($456+116)|0);
      var $457=HEAP32[(($lookahead)>>2)];
      var $cmp563=(($457)|0)!=0;
      if ($cmp563) { __label__ = 134; break; } else { __label__ = 132; break; }
    case 132: // $lor_lhs_false565
      var $458=$flush_addr;
      var $cmp566=(($458)|0)!=0;
      if ($cmp566) { __label__ = 133; break; } else { __label__ = 162; break; }
    case 133: // $land_lhs_true568
      var $459=$s;
      var $status569=(($459+4)|0);
      var $460=HEAP32[(($status569)>>2)];
      var $cmp570=(($460)|0)!=666;
      if ($cmp570) { __label__ = 134; break; } else { __label__ = 162; break; }
    case 134: // $if_then572
      var $461=$s;
      var $strategy573=(($461+136)|0);
      var $462=HEAP32[(($strategy573)>>2)];
      var $cmp574=(($462)|0)==2;
      if ($cmp574) { __label__ = 135; break; } else { __label__ = 136; break; }
    case 135: // $cond_true576
      var $463=$s;
      var $464=$flush_addr;
      var $call577=_deflate_huff($463, $464);
      var $cond591 = $call577;__label__ = 140; break;
    case 136: // $cond_false578
      var $465=$s;
      var $strategy579=(($465+136)|0);
      var $466=HEAP32[(($strategy579)>>2)];
      var $cmp580=(($466)|0)==3;
      if ($cmp580) { __label__ = 137; break; } else { __label__ = 138; break; }
    case 137: // $cond_true582
      var $467=$s;
      var $468=$flush_addr;
      var $call583=_deflate_rle($467, $468);
      var $cond589 = $call583;__label__ = 139; break;
    case 138: // $cond_false584
      var $469=$s;
      var $level585=(($469+132)|0);
      var $470=HEAP32[(($level585)>>2)];
      var $arrayidx586=((_configuration_table+$470*12)|0);
      var $func=(($arrayidx586+8)|0);
      var $471=HEAP32[(($func)>>2)];
      var $472=$s;
      var $473=$flush_addr;
      var $call587=FUNCTION_TABLE[$471]($472, $473);
      var $cond589 = $call587;__label__ = 139; break;
    case 139: // $cond_end588
      var $cond589;
      var $cond591 = $cond589;__label__ = 140; break;
    case 140: // $cond_end590
      var $cond591;
      $bstate=$cond591;
      var $474=$bstate;
      var $cmp592=(($474)|0)==2;
      if ($cmp592) { __label__ = 142; break; } else { __label__ = 141; break; }
    case 141: // $lor_lhs_false594
      var $475=$bstate;
      var $cmp595=(($475)|0)==3;
      if ($cmp595) { __label__ = 142; break; } else { __label__ = 143; break; }
    case 142: // $if_then597
      var $476=$s;
      var $status598=(($476+4)|0);
      HEAP32[(($status598)>>2)]=666;
      __label__ = 143; break;
    case 143: // $if_end599
      var $477=$bstate;
      var $cmp600=(($477)|0)==0;
      if ($cmp600) { __label__ = 145; break; } else { __label__ = 144; break; }
    case 144: // $lor_lhs_false602
      var $478=$bstate;
      var $cmp603=(($478)|0)==2;
      if ($cmp603) { __label__ = 145; break; } else { __label__ = 148; break; }
    case 145: // $if_then605
      var $479=$strm_addr;
      var $avail_out606=(($479+16)|0);
      var $480=HEAP32[(($avail_out606)>>2)];
      var $cmp607=(($480)|0)==0;
      if ($cmp607) { __label__ = 146; break; } else { __label__ = 147; break; }
    case 146: // $if_then609
      var $481=$s;
      var $last_flush610=(($481+40)|0);
      HEAP32[(($last_flush610)>>2)]=-1;
      __label__ = 147; break;
    case 147: // $if_end611
      $retval=0;
      __label__ = 172; break;
    case 148: // $if_end612
      var $482=$bstate;
      var $cmp613=(($482)|0)==1;
      if ($cmp613) { __label__ = 149; break; } else { __label__ = 161; break; }
    case 149: // $if_then615
      var $483=$flush_addr;
      var $cmp616=(($483)|0)==1;
      if ($cmp616) { __label__ = 150; break; } else { __label__ = 151; break; }
    case 150: // $if_then618
      var $484=$s;
      __tr_align($484);
      __label__ = 158; break;
    case 151: // $if_else619
      var $485=$flush_addr;
      var $cmp620=(($485)|0)!=5;
      if ($cmp620) { __label__ = 152; break; } else { __label__ = 157; break; }
    case 152: // $if_then622
      var $486=$s;
      __tr_stored_block($486, 0, 0, 0);
      var $487=$flush_addr;
      var $cmp623=(($487)|0)==3;
      if ($cmp623) { __label__ = 153; break; } else { __label__ = 156; break; }
    case 153: // $if_then625
      var $488=$s;
      var $hash_size=(($488+76)|0);
      var $489=HEAP32[(($hash_size)>>2)];
      var $sub626=(($489-1)|0);
      var $490=$s;
      var $head=(($490+68)|0);
      var $491=HEAP32[(($head)>>2)];
      var $arrayidx627=(($491+($sub626<<1))|0);
      HEAP16[(($arrayidx627)>>1)]=0;
      var $492=$s;
      var $head628=(($492+68)|0);
      var $493=HEAP32[(($head628)>>2)];
      var $494=$493;
      var $495=$s;
      var $hash_size629=(($495+76)|0);
      var $496=HEAP32[(($hash_size629)>>2)];
      var $sub630=(($496-1)|0);
      var $mul=((($sub630<<1))|0);
      _memset($494, 0, $mul, 1);
      var $497=$s;
      var $lookahead631=(($497+116)|0);
      var $498=HEAP32[(($lookahead631)>>2)];
      var $cmp632=(($498)|0)==0;
      if ($cmp632) { __label__ = 154; break; } else { __label__ = 155; break; }
    case 154: // $if_then634
      var $499=$s;
      var $strstart635=(($499+108)|0);
      HEAP32[(($strstart635)>>2)]=0;
      var $500=$s;
      var $block_start=(($500+92)|0);
      HEAP32[(($block_start)>>2)]=0;
      __label__ = 155; break;
    case 155: // $if_end636
      __label__ = 156; break;
    case 156: // $if_end637
      __label__ = 157; break;
    case 157: // $if_end638
      __label__ = 158; break;
    case 158: // $if_end639
      var $501=$strm_addr;
      _flush_pending($501);
      var $502=$strm_addr;
      var $avail_out640=(($502+16)|0);
      var $503=HEAP32[(($avail_out640)>>2)];
      var $cmp641=(($503)|0)==0;
      if ($cmp641) { __label__ = 159; break; } else { __label__ = 160; break; }
    case 159: // $if_then643
      var $504=$s;
      var $last_flush644=(($504+40)|0);
      HEAP32[(($last_flush644)>>2)]=-1;
      $retval=0;
      __label__ = 172; break;
    case 160: // $if_end645
      __label__ = 161; break;
    case 161: // $if_end646
      __label__ = 162; break;
    case 162: // $if_end647
      var $505=$flush_addr;
      var $cmp648=(($505)|0)!=4;
      if ($cmp648) { __label__ = 163; break; } else { __label__ = 164; break; }
    case 163: // $if_then650
      $retval=0;
      __label__ = 172; break;
    case 164: // $if_end651
      var $506=$s;
      var $wrap652=(($506+24)|0);
      var $507=HEAP32[(($wrap652)>>2)];
      var $cmp653=(($507)|0) <= 0;
      if ($cmp653) { __label__ = 165; break; } else { __label__ = 166; break; }
    case 165: // $if_then655
      $retval=1;
      __label__ = 172; break;
    case 166: // $if_end656
      var $508=$s;
      var $wrap657=(($508+24)|0);
      var $509=HEAP32[(($wrap657)>>2)];
      var $cmp658=(($509)|0)==2;
      if ($cmp658) { __label__ = 167; break; } else { __label__ = 168; break; }
    case 167: // $if_then660
      var $510=$strm_addr;
      var $adler661=(($510+48)|0);
      var $511=HEAP32[(($adler661)>>2)];
      var $and662=$511 & 255;
      var $conv663=(($and662) & 255);
      var $512=$s;
      var $pending664=(($512+20)|0);
      var $513=HEAP32[(($pending664)>>2)];
      var $inc665=(($513+1)|0);
      HEAP32[(($pending664)>>2)]=$inc665;
      var $514=$s;
      var $pending_buf666=(($514+8)|0);
      var $515=HEAP32[(($pending_buf666)>>2)];
      var $arrayidx667=(($515+$513)|0);
      HEAP8[($arrayidx667)]=$conv663;
      var $516=$strm_addr;
      var $adler668=(($516+48)|0);
      var $517=HEAPU32[(($adler668)>>2)];
      var $shr669=$517 >>> 8;
      var $and670=$shr669 & 255;
      var $conv671=(($and670) & 255);
      var $518=$s;
      var $pending672=(($518+20)|0);
      var $519=HEAPU32[(($pending672)>>2)];
      var $inc673=(($519+1)|0);
      HEAP32[(($pending672)>>2)]=$inc673;
      var $520=$s;
      var $pending_buf674=(($520+8)|0);
      var $521=HEAP32[(($pending_buf674)>>2)];
      var $arrayidx675=(($521+$519)|0);
      HEAP8[($arrayidx675)]=$conv671;
      var $522=$strm_addr;
      var $adler676=(($522+48)|0);
      var $523=HEAPU32[(($adler676)>>2)];
      var $shr677=$523 >>> 16;
      var $and678=$shr677 & 255;
      var $conv679=(($and678) & 255);
      var $524=$s;
      var $pending680=(($524+20)|0);
      var $525=HEAPU32[(($pending680)>>2)];
      var $inc681=(($525+1)|0);
      HEAP32[(($pending680)>>2)]=$inc681;
      var $526=$s;
      var $pending_buf682=(($526+8)|0);
      var $527=HEAP32[(($pending_buf682)>>2)];
      var $arrayidx683=(($527+$525)|0);
      HEAP8[($arrayidx683)]=$conv679;
      var $528=$strm_addr;
      var $adler684=(($528+48)|0);
      var $529=HEAPU32[(($adler684)>>2)];
      var $shr685=$529 >>> 24;
      var $and686=$shr685 & 255;
      var $conv687=(($and686) & 255);
      var $530=$s;
      var $pending688=(($530+20)|0);
      var $531=HEAPU32[(($pending688)>>2)];
      var $inc689=(($531+1)|0);
      HEAP32[(($pending688)>>2)]=$inc689;
      var $532=$s;
      var $pending_buf690=(($532+8)|0);
      var $533=HEAP32[(($pending_buf690)>>2)];
      var $arrayidx691=(($533+$531)|0);
      HEAP8[($arrayidx691)]=$conv687;
      var $534=$strm_addr;
      var $total_in=(($534+8)|0);
      var $535=HEAP32[(($total_in)>>2)];
      var $and692=$535 & 255;
      var $conv693=(($and692) & 255);
      var $536=$s;
      var $pending694=(($536+20)|0);
      var $537=HEAP32[(($pending694)>>2)];
      var $inc695=(($537+1)|0);
      HEAP32[(($pending694)>>2)]=$inc695;
      var $538=$s;
      var $pending_buf696=(($538+8)|0);
      var $539=HEAP32[(($pending_buf696)>>2)];
      var $arrayidx697=(($539+$537)|0);
      HEAP8[($arrayidx697)]=$conv693;
      var $540=$strm_addr;
      var $total_in698=(($540+8)|0);
      var $541=HEAPU32[(($total_in698)>>2)];
      var $shr699=$541 >>> 8;
      var $and700=$shr699 & 255;
      var $conv701=(($and700) & 255);
      var $542=$s;
      var $pending702=(($542+20)|0);
      var $543=HEAPU32[(($pending702)>>2)];
      var $inc703=(($543+1)|0);
      HEAP32[(($pending702)>>2)]=$inc703;
      var $544=$s;
      var $pending_buf704=(($544+8)|0);
      var $545=HEAP32[(($pending_buf704)>>2)];
      var $arrayidx705=(($545+$543)|0);
      HEAP8[($arrayidx705)]=$conv701;
      var $546=$strm_addr;
      var $total_in706=(($546+8)|0);
      var $547=HEAPU32[(($total_in706)>>2)];
      var $shr707=$547 >>> 16;
      var $and708=$shr707 & 255;
      var $conv709=(($and708) & 255);
      var $548=$s;
      var $pending710=(($548+20)|0);
      var $549=HEAPU32[(($pending710)>>2)];
      var $inc711=(($549+1)|0);
      HEAP32[(($pending710)>>2)]=$inc711;
      var $550=$s;
      var $pending_buf712=(($550+8)|0);
      var $551=HEAP32[(($pending_buf712)>>2)];
      var $arrayidx713=(($551+$549)|0);
      HEAP8[($arrayidx713)]=$conv709;
      var $552=$strm_addr;
      var $total_in714=(($552+8)|0);
      var $553=HEAPU32[(($total_in714)>>2)];
      var $shr715=$553 >>> 24;
      var $and716=$shr715 & 255;
      var $conv717=(($and716) & 255);
      var $554=$s;
      var $pending718=(($554+20)|0);
      var $555=HEAPU32[(($pending718)>>2)];
      var $inc719=(($555+1)|0);
      HEAP32[(($pending718)>>2)]=$inc719;
      var $556=$s;
      var $pending_buf720=(($556+8)|0);
      var $557=HEAP32[(($pending_buf720)>>2)];
      var $arrayidx721=(($557+$555)|0);
      HEAP8[($arrayidx721)]=$conv717;
      __label__ = 169; break;
    case 168: // $if_else722
      var $558=$s;
      var $559=$strm_addr;
      var $adler723=(($559+48)|0);
      var $560=HEAPU32[(($adler723)>>2)];
      var $shr724=$560 >>> 16;
      _putShortMSB($558, $shr724);
      var $561=$s;
      var $562=$strm_addr;
      var $adler725=(($562+48)|0);
      var $563=HEAP32[(($adler725)>>2)];
      var $and726=$563 & 65535;
      _putShortMSB($561, $and726);
      __label__ = 169; break;
    case 169: // $if_end727
      var $564=$strm_addr;
      _flush_pending($564);
      var $565=$s;
      var $wrap728=(($565+24)|0);
      var $566=HEAP32[(($wrap728)>>2)];
      var $cmp729=(($566)|0) > 0;
      if ($cmp729) { __label__ = 170; break; } else { __label__ = 171; break; }
    case 170: // $if_then731
      var $567=$s;
      var $wrap732=(($567+24)|0);
      var $568=HEAP32[(($wrap732)>>2)];
      var $sub733=(((-$568))|0);
      var $569=$s;
      var $wrap734=(($569+24)|0);
      HEAP32[(($wrap734)>>2)]=$sub733;
      __label__ = 171; break;
    case 171: // $if_end735
      var $570=$s;
      var $pending736=(($570+20)|0);
      var $571=HEAP32[(($pending736)>>2)];
      var $cmp737=(($571)|0)!=0;
      var $cond739=$cmp737 ? 0 : 1;
      $retval=$cond739;
      __label__ = 172; break;
    case 172: // $return
      var $572=$retval;
      ;
      return $572;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflate["X"]=1;

function _putShortMSB($s, $b) {
  ;
  var __label__;

  var $s_addr;
  var $b_addr;
  $s_addr=$s;
  $b_addr=$b;
  var $0=$b_addr;
  var $shr=$0 >>> 8;
  var $conv=(($shr) & 255);
  var $1=$s_addr;
  var $pending=(($1+20)|0);
  var $2=HEAPU32[(($pending)>>2)];
  var $inc=(($2+1)|0);
  HEAP32[(($pending)>>2)]=$inc;
  var $3=$s_addr;
  var $pending_buf=(($3+8)|0);
  var $4=HEAP32[(($pending_buf)>>2)];
  var $arrayidx=(($4+$2)|0);
  HEAP8[($arrayidx)]=$conv;
  var $5=$b_addr;
  var $and=$5 & 255;
  var $conv1=(($and) & 255);
  var $6=$s_addr;
  var $pending2=(($6+20)|0);
  var $7=HEAP32[(($pending2)>>2)];
  var $inc3=(($7+1)|0);
  HEAP32[(($pending2)>>2)]=$inc3;
  var $8=$s_addr;
  var $pending_buf4=(($8+8)|0);
  var $9=HEAP32[(($pending_buf4)>>2)];
  var $arrayidx5=(($9+$7)|0);
  HEAP8[($arrayidx5)]=$conv1;
  ;
  return;
}


function _flush_pending($strm) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $strm_addr;
      var $len;
      $strm_addr=$strm;
      var $0=$strm_addr;
      var $state=(($0+28)|0);
      var $1=HEAP32[(($state)>>2)];
      var $pending=(($1+20)|0);
      var $2=HEAP32[(($pending)>>2)];
      $len=$2;
      var $3=$len;
      var $4=$strm_addr;
      var $avail_out=(($4+16)|0);
      var $5=HEAPU32[(($avail_out)>>2)];
      var $cmp=(($3)>>>0) > (($5)>>>0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $6=$strm_addr;
      var $avail_out1=(($6+16)|0);
      var $7=HEAP32[(($avail_out1)>>2)];
      $len=$7;
      __label__ = 2; break;
    case 2: // $if_end
      var $8=$len;
      var $cmp2=(($8)|0)==0;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then3
      __label__ = 6; break;
    case 4: // $if_end4
      var $9=$strm_addr;
      var $next_out=(($9+12)|0);
      var $10=HEAP32[(($next_out)>>2)];
      var $11=$strm_addr;
      var $state5=(($11+28)|0);
      var $12=HEAP32[(($state5)>>2)];
      var $pending_out=(($12+16)|0);
      var $13=HEAP32[(($pending_out)>>2)];
      var $14=$len;
      assert($14 % 1 === 0, 'memcpy given ' + $14 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($10, $13, $14, 1);
      var $15=$len;
      var $16=$strm_addr;
      var $next_out6=(($16+12)|0);
      var $17=HEAP32[(($next_out6)>>2)];
      var $add_ptr=(($17+$15)|0);
      HEAP32[(($next_out6)>>2)]=$add_ptr;
      var $18=$len;
      var $19=$strm_addr;
      var $state7=(($19+28)|0);
      var $20=HEAP32[(($state7)>>2)];
      var $pending_out8=(($20+16)|0);
      var $21=HEAP32[(($pending_out8)>>2)];
      var $add_ptr9=(($21+$18)|0);
      HEAP32[(($pending_out8)>>2)]=$add_ptr9;
      var $22=$len;
      var $23=$strm_addr;
      var $total_out=(($23+20)|0);
      var $24=HEAP32[(($total_out)>>2)];
      var $add=(($24+$22)|0);
      HEAP32[(($total_out)>>2)]=$add;
      var $25=$len;
      var $26=$strm_addr;
      var $avail_out10=(($26+16)|0);
      var $27=HEAP32[(($avail_out10)>>2)];
      var $sub=(($27-$25)|0);
      HEAP32[(($avail_out10)>>2)]=$sub;
      var $28=$len;
      var $29=$strm_addr;
      var $state11=(($29+28)|0);
      var $30=HEAP32[(($state11)>>2)];
      var $pending12=(($30+20)|0);
      var $31=HEAP32[(($pending12)>>2)];
      var $sub13=(($31-$28)|0);
      HEAP32[(($pending12)>>2)]=$sub13;
      var $32=$strm_addr;
      var $state14=(($32+28)|0);
      var $33=HEAP32[(($state14)>>2)];
      var $pending15=(($33+20)|0);
      var $34=HEAP32[(($pending15)>>2)];
      var $cmp16=(($34)|0)==0;
      if ($cmp16) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then17
      var $35=$strm_addr;
      var $state18=(($35+28)|0);
      var $36=HEAP32[(($state18)>>2)];
      var $pending_buf=(($36+8)|0);
      var $37=HEAP32[(($pending_buf)>>2)];
      var $38=$strm_addr;
      var $state19=(($38+28)|0);
      var $39=HEAP32[(($state19)>>2)];
      var $pending_out20=(($39+16)|0);
      HEAP32[(($pending_out20)>>2)]=$37;
      __label__ = 6; break;
    case 6: // $if_end21
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_flush_pending["X"]=1;

function _deflate_huff($s, $flush) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $flush_addr;
      var $bflush;
      var $cc;
      $s_addr=$s;
      $flush_addr=$flush;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$s_addr;
      var $lookahead=(($0+116)|0);
      var $1=HEAP32[(($lookahead)>>2)];
      var $cmp=(($1)|0)==0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 7; break; }
    case 2: // $if_then
      var $2=$s_addr;
      _fill_window($2);
      var $3=$s_addr;
      var $lookahead1=(($3+116)|0);
      var $4=HEAP32[(($lookahead1)>>2)];
      var $cmp2=(($4)|0)==0;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 6; break; }
    case 3: // $if_then3
      var $5=$flush_addr;
      var $cmp4=(($5)|0)==0;
      if ($cmp4) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then5
      $retval=0;
      __label__ = 21; break;
    case 5: // $if_end
      __label__ = 15; break;
    case 6: // $if_end6
      __label__ = 7; break;
    case 7: // $if_end7
      var $6=$s_addr;
      var $match_length=(($6+96)|0);
      HEAP32[(($match_length)>>2)]=0;
      var $7=$s_addr;
      var $strstart=(($7+108)|0);
      var $8=HEAP32[(($strstart)>>2)];
      var $9=$s_addr;
      var $window=(($9+56)|0);
      var $10=HEAP32[(($window)>>2)];
      var $arrayidx=(($10+$8)|0);
      var $11=HEAP8[($arrayidx)];
      $cc=$11;
      var $12=$s_addr;
      var $last_lit=(($12+5792)|0);
      var $13=HEAP32[(($last_lit)>>2)];
      var $14=$s_addr;
      var $d_buf=(($14+5796)|0);
      var $15=HEAP32[(($d_buf)>>2)];
      var $arrayidx8=(($15+($13<<1))|0);
      HEAP16[(($arrayidx8)>>1)]=0;
      var $16=$cc;
      var $17=$s_addr;
      var $last_lit9=(($17+5792)|0);
      var $18=HEAP32[(($last_lit9)>>2)];
      var $inc=(($18+1)|0);
      HEAP32[(($last_lit9)>>2)]=$inc;
      var $19=$s_addr;
      var $l_buf=(($19+5784)|0);
      var $20=HEAP32[(($l_buf)>>2)];
      var $arrayidx10=(($20+$18)|0);
      HEAP8[($arrayidx10)]=$16;
      var $21=$cc;
      var $idxprom=(($21)&255);
      var $22=$s_addr;
      var $dyn_ltree=(($22+148)|0);
      var $arrayidx11=(($dyn_ltree+($idxprom<<2))|0);
      var $fc=(($arrayidx11)|0);
      var $freq=$fc;
      var $23=HEAP16[(($freq)>>1)];
      var $inc12=(($23+1)&65535);
      HEAP16[(($freq)>>1)]=$inc12;
      var $24=$s_addr;
      var $last_lit13=(($24+5792)|0);
      var $25=HEAP32[(($last_lit13)>>2)];
      var $26=$s_addr;
      var $lit_bufsize=(($26+5788)|0);
      var $27=HEAP32[(($lit_bufsize)>>2)];
      var $sub=(($27-1)|0);
      var $cmp14=(($25)|0)==(($sub)|0);
      var $conv=(($cmp14)&1);
      $bflush=$conv;
      var $28=$s_addr;
      var $lookahead15=(($28+116)|0);
      var $29=HEAP32[(($lookahead15)>>2)];
      var $dec=(($29-1)|0);
      HEAP32[(($lookahead15)>>2)]=$dec;
      var $30=$s_addr;
      var $strstart16=(($30+108)|0);
      var $31=HEAP32[(($strstart16)>>2)];
      var $inc17=(($31+1)|0);
      HEAP32[(($strstart16)>>2)]=$inc17;
      var $32=$bflush;
      var $tobool=(($32)|0)!=0;
      if ($tobool) { __label__ = 8; break; } else { __label__ = 14; break; }
    case 8: // $if_then18
      var $33=$s_addr;
      var $34=$s_addr;
      var $block_start=(($34+92)|0);
      var $35=HEAP32[(($block_start)>>2)];
      var $cmp19=(($35)|0) >= 0;
      if ($cmp19) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $cond_true
      var $36=$s_addr;
      var $block_start21=(($36+92)|0);
      var $37=HEAP32[(($block_start21)>>2)];
      var $38=$s_addr;
      var $window22=(($38+56)|0);
      var $39=HEAP32[(($window22)>>2)];
      var $arrayidx23=(($39+$37)|0);
      var $cond = $arrayidx23;__label__ = 11; break;
    case 10: // $cond_false
      var $cond = 0;__label__ = 11; break;
    case 11: // $cond_end
      var $cond;
      var $40=$s_addr;
      var $strstart24=(($40+108)|0);
      var $41=HEAP32[(($strstart24)>>2)];
      var $42=$s_addr;
      var $block_start25=(($42+92)|0);
      var $43=HEAP32[(($block_start25)>>2)];
      var $sub26=(($41-$43)|0);
      __tr_flush_block($33, $cond, $sub26, 0);
      var $44=$s_addr;
      var $strstart27=(($44+108)|0);
      var $45=HEAP32[(($strstart27)>>2)];
      var $46=$s_addr;
      var $block_start28=(($46+92)|0);
      HEAP32[(($block_start28)>>2)]=$45;
      var $47=$s_addr;
      var $strm=(($47)|0);
      var $48=HEAP32[(($strm)>>2)];
      _flush_pending($48);
      var $49=$s_addr;
      var $strm29=(($49)|0);
      var $50=HEAP32[(($strm29)>>2)];
      var $avail_out=(($50+16)|0);
      var $51=HEAP32[(($avail_out)>>2)];
      var $cmp30=(($51)|0)==0;
      if ($cmp30) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then32
      $retval=0;
      __label__ = 21; break;
    case 13: // $if_end33
      __label__ = 14; break;
    case 14: // $if_end34
      __label__ = 1; break;
    case 15: // $for_end
      var $52=$s_addr;
      var $53=$s_addr;
      var $block_start35=(($53+92)|0);
      var $54=HEAP32[(($block_start35)>>2)];
      var $cmp36=(($54)|0) >= 0;
      if ($cmp36) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $cond_true38
      var $55=$s_addr;
      var $block_start39=(($55+92)|0);
      var $56=HEAP32[(($block_start39)>>2)];
      var $57=$s_addr;
      var $window40=(($57+56)|0);
      var $58=HEAP32[(($window40)>>2)];
      var $arrayidx41=(($58+$56)|0);
      var $cond44 = $arrayidx41;__label__ = 18; break;
    case 17: // $cond_false42
      var $cond44 = 0;__label__ = 18; break;
    case 18: // $cond_end43
      var $cond44;
      var $59=$s_addr;
      var $strstart45=(($59+108)|0);
      var $60=HEAP32[(($strstart45)>>2)];
      var $61=$s_addr;
      var $block_start46=(($61+92)|0);
      var $62=HEAP32[(($block_start46)>>2)];
      var $sub47=(($60-$62)|0);
      var $63=$flush_addr;
      var $cmp48=(($63)|0)==4;
      var $conv49=(($cmp48)&1);
      __tr_flush_block($52, $cond44, $sub47, $conv49);
      var $64=$s_addr;
      var $strstart50=(($64+108)|0);
      var $65=HEAP32[(($strstart50)>>2)];
      var $66=$s_addr;
      var $block_start51=(($66+92)|0);
      HEAP32[(($block_start51)>>2)]=$65;
      var $67=$s_addr;
      var $strm52=(($67)|0);
      var $68=HEAP32[(($strm52)>>2)];
      _flush_pending($68);
      var $69=$s_addr;
      var $strm53=(($69)|0);
      var $70=HEAP32[(($strm53)>>2)];
      var $avail_out54=(($70+16)|0);
      var $71=HEAP32[(($avail_out54)>>2)];
      var $cmp55=(($71)|0)==0;
      if ($cmp55) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $if_then57
      var $72=$flush_addr;
      var $cmp58=(($72)|0)==4;
      var $cond60=$cmp58 ? 2 : 0;
      $retval=$cond60;
      __label__ = 21; break;
    case 20: // $if_end61
      var $73=$flush_addr;
      var $cmp62=(($73)|0)==4;
      var $cond64=$cmp62 ? 3 : 1;
      $retval=$cond64;
      __label__ = 21; break;
    case 21: // $return
      var $74=$retval;
      ;
      return $74;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflate_huff["X"]=1;

function _deflate_rle($s, $flush) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $flush_addr;
      var $bflush;
      var $prev;
      var $scan;
      var $strend;
      var $len;
      var $dist;
      var $cc;
      $s_addr=$s;
      $flush_addr=$flush;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$s_addr;
      var $lookahead=(($0+116)|0);
      var $1=HEAPU32[(($lookahead)>>2)];
      var $cmp=(($1)>>>0) < 258;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 8; break; }
    case 2: // $if_then
      var $2=$s_addr;
      _fill_window($2);
      var $3=$s_addr;
      var $lookahead1=(($3+116)|0);
      var $4=HEAPU32[(($lookahead1)>>2)];
      var $cmp2=(($4)>>>0) < 258;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: // $land_lhs_true
      var $5=$flush_addr;
      var $cmp3=(($5)|0)==0;
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then4
      $retval=0;
      __label__ = 49; break;
    case 5: // $if_end
      var $6=$s_addr;
      var $lookahead5=(($6+116)|0);
      var $7=HEAP32[(($lookahead5)>>2)];
      var $cmp6=(($7)|0)==0;
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then7
      __label__ = 43; break;
    case 7: // $if_end8
      __label__ = 8; break;
    case 8: // $if_end9
      var $8=$s_addr;
      var $match_length=(($8+96)|0);
      HEAP32[(($match_length)>>2)]=0;
      var $9=$s_addr;
      var $lookahead10=(($9+116)|0);
      var $10=HEAPU32[(($lookahead10)>>2)];
      var $cmp11=(($10)>>>0) >= 3;
      if ($cmp11) { __label__ = 9; break; } else { __label__ = 29; break; }
    case 9: // $land_lhs_true12
      var $11=$s_addr;
      var $strstart=(($11+108)|0);
      var $12=HEAPU32[(($strstart)>>2)];
      var $cmp13=(($12)>>>0) > 0;
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 29; break; }
    case 10: // $if_then14
      var $13=$s_addr;
      var $window=(($13+56)|0);
      var $14=HEAP32[(($window)>>2)];
      var $15=$s_addr;
      var $strstart15=(($15+108)|0);
      var $16=HEAP32[(($strstart15)>>2)];
      var $add_ptr=(($14+$16)|0);
      var $add_ptr16=(($add_ptr-1)|0);
      $scan=$add_ptr16;
      var $17=$scan;
      var $18=HEAPU8[($17)];
      var $conv=(($18)&255);
      $prev=$conv;
      var $19=$prev;
      var $20=$scan;
      var $incdec_ptr=(($20+1)|0);
      $scan=$incdec_ptr;
      var $21=HEAPU8[($incdec_ptr)];
      var $conv17=(($21)&255);
      var $cmp18=(($19)|0)==(($conv17)|0);
      if ($cmp18) { __label__ = 11; break; } else { __label__ = 28; break; }
    case 11: // $land_lhs_true20
      var $22=$prev;
      var $23=$scan;
      var $incdec_ptr21=(($23+1)|0);
      $scan=$incdec_ptr21;
      var $24=HEAPU8[($incdec_ptr21)];
      var $conv22=(($24)&255);
      var $cmp23=(($22)|0)==(($conv22)|0);
      if ($cmp23) { __label__ = 12; break; } else { __label__ = 28; break; }
    case 12: // $land_lhs_true25
      var $25=$prev;
      var $26=$scan;
      var $incdec_ptr26=(($26+1)|0);
      $scan=$incdec_ptr26;
      var $27=HEAPU8[($incdec_ptr26)];
      var $conv27=(($27)&255);
      var $cmp28=(($25)|0)==(($conv27)|0);
      if ($cmp28) { __label__ = 13; break; } else { __label__ = 28; break; }
    case 13: // $if_then30
      var $28=$s_addr;
      var $window31=(($28+56)|0);
      var $29=HEAP32[(($window31)>>2)];
      var $30=$s_addr;
      var $strstart32=(($30+108)|0);
      var $31=HEAP32[(($strstart32)>>2)];
      var $add_ptr33=(($29+$31)|0);
      var $add_ptr34=(($add_ptr33+258)|0);
      $strend=$add_ptr34;
      __label__ = 14; break;
    case 14: // $do_body
      __label__ = 15; break;
    case 15: // $do_cond
      var $32=$prev;
      var $33=$scan;
      var $incdec_ptr35=(($33+1)|0);
      $scan=$incdec_ptr35;
      var $34=HEAPU8[($incdec_ptr35)];
      var $conv36=(($34)&255);
      var $cmp37=(($32)|0)==(($conv36)|0);
      if ($cmp37) { __label__ = 16; break; } else { var $58 = 0;__label__ = 24; break; }
    case 16: // $land_lhs_true39
      var $35=$prev;
      var $36=$scan;
      var $incdec_ptr40=(($36+1)|0);
      $scan=$incdec_ptr40;
      var $37=HEAPU8[($incdec_ptr40)];
      var $conv41=(($37)&255);
      var $cmp42=(($35)|0)==(($conv41)|0);
      if ($cmp42) { __label__ = 17; break; } else { var $58 = 0;__label__ = 24; break; }
    case 17: // $land_lhs_true44
      var $38=$prev;
      var $39=$scan;
      var $incdec_ptr45=(($39+1)|0);
      $scan=$incdec_ptr45;
      var $40=HEAPU8[($incdec_ptr45)];
      var $conv46=(($40)&255);
      var $cmp47=(($38)|0)==(($conv46)|0);
      if ($cmp47) { __label__ = 18; break; } else { var $58 = 0;__label__ = 24; break; }
    case 18: // $land_lhs_true49
      var $41=$prev;
      var $42=$scan;
      var $incdec_ptr50=(($42+1)|0);
      $scan=$incdec_ptr50;
      var $43=HEAPU8[($incdec_ptr50)];
      var $conv51=(($43)&255);
      var $cmp52=(($41)|0)==(($conv51)|0);
      if ($cmp52) { __label__ = 19; break; } else { var $58 = 0;__label__ = 24; break; }
    case 19: // $land_lhs_true54
      var $44=$prev;
      var $45=$scan;
      var $incdec_ptr55=(($45+1)|0);
      $scan=$incdec_ptr55;
      var $46=HEAPU8[($incdec_ptr55)];
      var $conv56=(($46)&255);
      var $cmp57=(($44)|0)==(($conv56)|0);
      if ($cmp57) { __label__ = 20; break; } else { var $58 = 0;__label__ = 24; break; }
    case 20: // $land_lhs_true59
      var $47=$prev;
      var $48=$scan;
      var $incdec_ptr60=(($48+1)|0);
      $scan=$incdec_ptr60;
      var $49=HEAPU8[($incdec_ptr60)];
      var $conv61=(($49)&255);
      var $cmp62=(($47)|0)==(($conv61)|0);
      if ($cmp62) { __label__ = 21; break; } else { var $58 = 0;__label__ = 24; break; }
    case 21: // $land_lhs_true64
      var $50=$prev;
      var $51=$scan;
      var $incdec_ptr65=(($51+1)|0);
      $scan=$incdec_ptr65;
      var $52=HEAPU8[($incdec_ptr65)];
      var $conv66=(($52)&255);
      var $cmp67=(($50)|0)==(($conv66)|0);
      if ($cmp67) { __label__ = 22; break; } else { var $58 = 0;__label__ = 24; break; }
    case 22: // $land_lhs_true69
      var $53=$prev;
      var $54=$scan;
      var $incdec_ptr70=(($54+1)|0);
      $scan=$incdec_ptr70;
      var $55=HEAPU8[($incdec_ptr70)];
      var $conv71=(($55)&255);
      var $cmp72=(($53)|0)==(($conv71)|0);
      if ($cmp72) { __label__ = 23; break; } else { var $58 = 0;__label__ = 24; break; }
    case 23: // $land_rhs
      var $56=$scan;
      var $57=$strend;
      var $cmp74=(($56)>>>0) < (($57)>>>0);
      var $58 = $cmp74;__label__ = 24; break;
    case 24: // $land_end
      var $58;
      if ($58) { __label__ = 14; break; } else { __label__ = 25; break; }
    case 25: // $do_end
      var $59=$strend;
      var $60=$scan;
      var $sub_ptr_lhs_cast=$59;
      var $sub_ptr_rhs_cast=$60;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub=((258-$sub_ptr_sub)|0);
      var $61=$s_addr;
      var $match_length76=(($61+96)|0);
      HEAP32[(($match_length76)>>2)]=$sub;
      var $62=$s_addr;
      var $match_length77=(($62+96)|0);
      var $63=HEAPU32[(($match_length77)>>2)];
      var $64=$s_addr;
      var $lookahead78=(($64+116)|0);
      var $65=HEAPU32[(($lookahead78)>>2)];
      var $cmp79=(($63)>>>0) > (($65)>>>0);
      if ($cmp79) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: // $if_then81
      var $66=$s_addr;
      var $lookahead82=(($66+116)|0);
      var $67=HEAP32[(($lookahead82)>>2)];
      var $68=$s_addr;
      var $match_length83=(($68+96)|0);
      HEAP32[(($match_length83)>>2)]=$67;
      __label__ = 27; break;
    case 27: // $if_end84
      __label__ = 28; break;
    case 28: // $if_end85
      __label__ = 29; break;
    case 29: // $if_end86
      var $69=$s_addr;
      var $match_length87=(($69+96)|0);
      var $70=HEAPU32[(($match_length87)>>2)];
      var $cmp88=(($70)>>>0) >= 3;
      if ($cmp88) { __label__ = 30; break; } else { __label__ = 34; break; }
    case 30: // $if_then90
      var $71=$s_addr;
      var $match_length91=(($71+96)|0);
      var $72=HEAP32[(($match_length91)>>2)];
      var $sub92=(($72-3)|0);
      var $conv93=(($sub92) & 255);
      $len=$conv93;
      $dist=1;
      var $73=$dist;
      var $74=$s_addr;
      var $last_lit=(($74+5792)|0);
      var $75=HEAP32[(($last_lit)>>2)];
      var $76=$s_addr;
      var $d_buf=(($76+5796)|0);
      var $77=HEAP32[(($d_buf)>>2)];
      var $arrayidx=(($77+($75<<1))|0);
      HEAP16[(($arrayidx)>>1)]=$73;
      var $78=$len;
      var $79=$s_addr;
      var $last_lit94=(($79+5792)|0);
      var $80=HEAP32[(($last_lit94)>>2)];
      var $inc=(($80+1)|0);
      HEAP32[(($last_lit94)>>2)]=$inc;
      var $81=$s_addr;
      var $l_buf=(($81+5784)|0);
      var $82=HEAP32[(($l_buf)>>2)];
      var $arrayidx95=(($82+$80)|0);
      HEAP8[($arrayidx95)]=$78;
      var $83=$dist;
      var $dec=(($83-1)&65535);
      $dist=$dec;
      var $84=$len;
      var $idxprom=(($84)&255);
      var $arrayidx96=(((STRING_TABLE.__length_code)+$idxprom)|0);
      var $85=HEAPU8[($arrayidx96)];
      var $conv97=(($85)&255);
      var $add=(($conv97+256)|0);
      var $add98=(($add+1)|0);
      var $86=$s_addr;
      var $dyn_ltree=(($86+148)|0);
      var $arrayidx99=(($dyn_ltree+($add98<<2))|0);
      var $fc=(($arrayidx99)|0);
      var $freq=$fc;
      var $87=HEAP16[(($freq)>>1)];
      var $inc100=(($87+1)&65535);
      HEAP16[(($freq)>>1)]=$inc100;
      var $88=$dist;
      var $conv101=(($88)&65535);
      var $cmp102=(($conv101)|0) < 256;
      if ($cmp102) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $cond_true
      var $89=$dist;
      var $idxprom104=(($89)&65535);
      var $arrayidx105=(((STRING_TABLE.__dist_code)+$idxprom104)|0);
      var $90=HEAPU8[($arrayidx105)];
      var $conv106=(($90)&255);
      var $cond = $conv106;__label__ = 33; break;
    case 32: // $cond_false
      var $91=$dist;
      var $conv107=(($91)&65535);
      var $shr=$conv107 >> 7;
      var $add108=(($shr+256)|0);
      var $arrayidx109=(((STRING_TABLE.__dist_code)+$add108)|0);
      var $92=HEAPU8[($arrayidx109)];
      var $conv110=(($92)&255);
      var $cond = $conv110;__label__ = 33; break;
    case 33: // $cond_end
      var $cond;
      var $93=$s_addr;
      var $dyn_dtree=(($93+2440)|0);
      var $arrayidx111=(($dyn_dtree+($cond<<2))|0);
      var $fc112=(($arrayidx111)|0);
      var $freq113=$fc112;
      var $94=HEAP16[(($freq113)>>1)];
      var $inc114=(($94+1)&65535);
      HEAP16[(($freq113)>>1)]=$inc114;
      var $95=$s_addr;
      var $last_lit115=(($95+5792)|0);
      var $96=HEAP32[(($last_lit115)>>2)];
      var $97=$s_addr;
      var $lit_bufsize=(($97+5788)|0);
      var $98=HEAP32[(($lit_bufsize)>>2)];
      var $sub116=(($98-1)|0);
      var $cmp117=(($96)|0)==(($sub116)|0);
      var $conv118=(($cmp117)&1);
      $bflush=$conv118;
      var $99=$s_addr;
      var $match_length119=(($99+96)|0);
      var $100=HEAP32[(($match_length119)>>2)];
      var $101=$s_addr;
      var $lookahead120=(($101+116)|0);
      var $102=HEAP32[(($lookahead120)>>2)];
      var $sub121=(($102-$100)|0);
      HEAP32[(($lookahead120)>>2)]=$sub121;
      var $103=$s_addr;
      var $match_length122=(($103+96)|0);
      var $104=HEAP32[(($match_length122)>>2)];
      var $105=$s_addr;
      var $strstart123=(($105+108)|0);
      var $106=HEAP32[(($strstart123)>>2)];
      var $add124=(($106+$104)|0);
      HEAP32[(($strstart123)>>2)]=$add124;
      var $107=$s_addr;
      var $match_length125=(($107+96)|0);
      HEAP32[(($match_length125)>>2)]=0;
      __label__ = 35; break;
    case 34: // $if_else
      var $108=$s_addr;
      var $strstart126=(($108+108)|0);
      var $109=HEAP32[(($strstart126)>>2)];
      var $110=$s_addr;
      var $window127=(($110+56)|0);
      var $111=HEAP32[(($window127)>>2)];
      var $arrayidx128=(($111+$109)|0);
      var $112=HEAP8[($arrayidx128)];
      $cc=$112;
      var $113=$s_addr;
      var $last_lit129=(($113+5792)|0);
      var $114=HEAP32[(($last_lit129)>>2)];
      var $115=$s_addr;
      var $d_buf130=(($115+5796)|0);
      var $116=HEAP32[(($d_buf130)>>2)];
      var $arrayidx131=(($116+($114<<1))|0);
      HEAP16[(($arrayidx131)>>1)]=0;
      var $117=$cc;
      var $118=$s_addr;
      var $last_lit132=(($118+5792)|0);
      var $119=HEAP32[(($last_lit132)>>2)];
      var $inc133=(($119+1)|0);
      HEAP32[(($last_lit132)>>2)]=$inc133;
      var $120=$s_addr;
      var $l_buf134=(($120+5784)|0);
      var $121=HEAP32[(($l_buf134)>>2)];
      var $arrayidx135=(($121+$119)|0);
      HEAP8[($arrayidx135)]=$117;
      var $122=$cc;
      var $idxprom136=(($122)&255);
      var $123=$s_addr;
      var $dyn_ltree137=(($123+148)|0);
      var $arrayidx138=(($dyn_ltree137+($idxprom136<<2))|0);
      var $fc139=(($arrayidx138)|0);
      var $freq140=$fc139;
      var $124=HEAP16[(($freq140)>>1)];
      var $inc141=(($124+1)&65535);
      HEAP16[(($freq140)>>1)]=$inc141;
      var $125=$s_addr;
      var $last_lit142=(($125+5792)|0);
      var $126=HEAP32[(($last_lit142)>>2)];
      var $127=$s_addr;
      var $lit_bufsize143=(($127+5788)|0);
      var $128=HEAP32[(($lit_bufsize143)>>2)];
      var $sub144=(($128-1)|0);
      var $cmp145=(($126)|0)==(($sub144)|0);
      var $conv146=(($cmp145)&1);
      $bflush=$conv146;
      var $129=$s_addr;
      var $lookahead147=(($129+116)|0);
      var $130=HEAP32[(($lookahead147)>>2)];
      var $dec148=(($130-1)|0);
      HEAP32[(($lookahead147)>>2)]=$dec148;
      var $131=$s_addr;
      var $strstart149=(($131+108)|0);
      var $132=HEAP32[(($strstart149)>>2)];
      var $inc150=(($132+1)|0);
      HEAP32[(($strstart149)>>2)]=$inc150;
      __label__ = 35; break;
    case 35: // $if_end151
      var $133=$bflush;
      var $tobool=(($133)|0)!=0;
      if ($tobool) { __label__ = 36; break; } else { __label__ = 42; break; }
    case 36: // $if_then152
      var $134=$s_addr;
      var $135=$s_addr;
      var $block_start=(($135+92)|0);
      var $136=HEAP32[(($block_start)>>2)];
      var $cmp153=(($136)|0) >= 0;
      if ($cmp153) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: // $cond_true155
      var $137=$s_addr;
      var $block_start156=(($137+92)|0);
      var $138=HEAP32[(($block_start156)>>2)];
      var $139=$s_addr;
      var $window157=(($139+56)|0);
      var $140=HEAP32[(($window157)>>2)];
      var $arrayidx158=(($140+$138)|0);
      var $cond161 = $arrayidx158;__label__ = 39; break;
    case 38: // $cond_false159
      var $cond161 = 0;__label__ = 39; break;
    case 39: // $cond_end160
      var $cond161;
      var $141=$s_addr;
      var $strstart162=(($141+108)|0);
      var $142=HEAP32[(($strstart162)>>2)];
      var $143=$s_addr;
      var $block_start163=(($143+92)|0);
      var $144=HEAP32[(($block_start163)>>2)];
      var $sub164=(($142-$144)|0);
      __tr_flush_block($134, $cond161, $sub164, 0);
      var $145=$s_addr;
      var $strstart165=(($145+108)|0);
      var $146=HEAP32[(($strstart165)>>2)];
      var $147=$s_addr;
      var $block_start166=(($147+92)|0);
      HEAP32[(($block_start166)>>2)]=$146;
      var $148=$s_addr;
      var $strm=(($148)|0);
      var $149=HEAP32[(($strm)>>2)];
      _flush_pending($149);
      var $150=$s_addr;
      var $strm167=(($150)|0);
      var $151=HEAP32[(($strm167)>>2)];
      var $avail_out=(($151+16)|0);
      var $152=HEAP32[(($avail_out)>>2)];
      var $cmp168=(($152)|0)==0;
      if ($cmp168) { __label__ = 40; break; } else { __label__ = 41; break; }
    case 40: // $if_then170
      $retval=0;
      __label__ = 49; break;
    case 41: // $if_end171
      __label__ = 42; break;
    case 42: // $if_end172
      __label__ = 1; break;
    case 43: // $for_end
      var $153=$s_addr;
      var $154=$s_addr;
      var $block_start173=(($154+92)|0);
      var $155=HEAP32[(($block_start173)>>2)];
      var $cmp174=(($155)|0) >= 0;
      if ($cmp174) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: // $cond_true176
      var $156=$s_addr;
      var $block_start177=(($156+92)|0);
      var $157=HEAP32[(($block_start177)>>2)];
      var $158=$s_addr;
      var $window178=(($158+56)|0);
      var $159=HEAP32[(($window178)>>2)];
      var $arrayidx179=(($159+$157)|0);
      var $cond182 = $arrayidx179;__label__ = 46; break;
    case 45: // $cond_false180
      var $cond182 = 0;__label__ = 46; break;
    case 46: // $cond_end181
      var $cond182;
      var $160=$s_addr;
      var $strstart183=(($160+108)|0);
      var $161=HEAP32[(($strstart183)>>2)];
      var $162=$s_addr;
      var $block_start184=(($162+92)|0);
      var $163=HEAP32[(($block_start184)>>2)];
      var $sub185=(($161-$163)|0);
      var $164=$flush_addr;
      var $cmp186=(($164)|0)==4;
      var $conv187=(($cmp186)&1);
      __tr_flush_block($153, $cond182, $sub185, $conv187);
      var $165=$s_addr;
      var $strstart188=(($165+108)|0);
      var $166=HEAP32[(($strstart188)>>2)];
      var $167=$s_addr;
      var $block_start189=(($167+92)|0);
      HEAP32[(($block_start189)>>2)]=$166;
      var $168=$s_addr;
      var $strm190=(($168)|0);
      var $169=HEAP32[(($strm190)>>2)];
      _flush_pending($169);
      var $170=$s_addr;
      var $strm191=(($170)|0);
      var $171=HEAP32[(($strm191)>>2)];
      var $avail_out192=(($171+16)|0);
      var $172=HEAP32[(($avail_out192)>>2)];
      var $cmp193=(($172)|0)==0;
      if ($cmp193) { __label__ = 47; break; } else { __label__ = 48; break; }
    case 47: // $if_then195
      var $173=$flush_addr;
      var $cmp196=(($173)|0)==4;
      var $cond198=$cmp196 ? 2 : 0;
      $retval=$cond198;
      __label__ = 49; break;
    case 48: // $if_end199
      var $174=$flush_addr;
      var $cmp200=(($174)|0)==4;
      var $cond202=$cmp200 ? 3 : 1;
      $retval=$cond202;
      __label__ = 49; break;
    case 49: // $return
      var $175=$retval;
      ;
      return $175;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflate_rle["X"]=1;

function _fill_window($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $n;
      var $m;
      var $p;
      var $more;
      var $wsize;
      var $curr;
      var $init;
      $s_addr=$s;
      var $0=$s_addr;
      var $w_size=(($0+44)|0);
      var $1=HEAP32[(($w_size)>>2)];
      $wsize=$1;
      __label__ = 1; break;
    case 1: // $do_body
      var $2=$s_addr;
      var $window_size=(($2+60)|0);
      var $3=HEAP32[(($window_size)>>2)];
      var $4=$s_addr;
      var $lookahead=(($4+116)|0);
      var $5=HEAP32[(($lookahead)>>2)];
      var $sub=(($3-$5)|0);
      var $6=$s_addr;
      var $strstart=(($6+108)|0);
      var $7=HEAP32[(($strstart)>>2)];
      var $sub1=(($sub-$7)|0);
      $more=$sub1;
      var $8=$s_addr;
      var $strstart2=(($8+108)|0);
      var $9=HEAPU32[(($strstart2)>>2)];
      var $10=$wsize;
      var $11=$s_addr;
      var $w_size3=(($11+44)|0);
      var $12=HEAP32[(($w_size3)>>2)];
      var $sub4=(($12-262)|0);
      var $add=(($10+$sub4)|0);
      var $cmp=(($9)>>>0) >= (($add)>>>0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 15; break; }
    case 2: // $if_then
      var $13=$s_addr;
      var $window=(($13+56)|0);
      var $14=HEAP32[(($window)>>2)];
      var $15=$s_addr;
      var $window5=(($15+56)|0);
      var $16=HEAP32[(($window5)>>2)];
      var $17=$wsize;
      var $add_ptr=(($16+$17)|0);
      var $18=$wsize;
      assert($18 % 1 === 0, 'memcpy given ' + $18 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($14, $add_ptr, $18, 1);
      var $19=$wsize;
      var $20=$s_addr;
      var $match_start=(($20+112)|0);
      var $21=HEAP32[(($match_start)>>2)];
      var $sub6=(($21-$19)|0);
      HEAP32[(($match_start)>>2)]=$sub6;
      var $22=$wsize;
      var $23=$s_addr;
      var $strstart7=(($23+108)|0);
      var $24=HEAP32[(($strstart7)>>2)];
      var $sub8=(($24-$22)|0);
      HEAP32[(($strstart7)>>2)]=$sub8;
      var $25=$wsize;
      var $26=$s_addr;
      var $block_start=(($26+92)|0);
      var $27=HEAP32[(($block_start)>>2)];
      var $sub9=(($27-$25)|0);
      HEAP32[(($block_start)>>2)]=$sub9;
      var $28=$s_addr;
      var $hash_size=(($28+76)|0);
      var $29=HEAP32[(($hash_size)>>2)];
      $n=$29;
      var $30=$n;
      var $31=$s_addr;
      var $head=(($31+68)|0);
      var $32=HEAP32[(($head)>>2)];
      var $arrayidx=(($32+($30<<1))|0);
      $p=$arrayidx;
      __label__ = 3; break;
    case 3: // $do_body10
      var $33=$p;
      var $incdec_ptr=(($33-2)|0);
      $p=$incdec_ptr;
      var $34=HEAPU16[(($incdec_ptr)>>1)];
      var $conv=(($34)&65535);
      $m=$conv;
      var $35=$m;
      var $36=$wsize;
      var $cmp11=(($35)>>>0) >= (($36)>>>0);
      if ($cmp11) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $cond_true
      var $37=$m;
      var $38=$wsize;
      var $sub13=(($37-$38)|0);
      var $cond = $sub13;__label__ = 6; break;
    case 5: // $cond_false
      var $cond = 0;__label__ = 6; break;
    case 6: // $cond_end
      var $cond;
      var $conv14=(($cond) & 65535);
      var $39=$p;
      HEAP16[(($39)>>1)]=$conv14;
      __label__ = 7; break;
    case 7: // $do_cond
      var $40=$n;
      var $dec=(($40-1)|0);
      $n=$dec;
      var $tobool=(($dec)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 8; break; }
    case 8: // $do_end
      var $41=$wsize;
      $n=$41;
      var $42=$n;
      var $43=$s_addr;
      var $prev=(($43+64)|0);
      var $44=HEAP32[(($prev)>>2)];
      var $arrayidx15=(($44+($42<<1))|0);
      $p=$arrayidx15;
      __label__ = 9; break;
    case 9: // $do_body16
      var $45=$p;
      var $incdec_ptr17=(($45-2)|0);
      $p=$incdec_ptr17;
      var $46=HEAPU16[(($incdec_ptr17)>>1)];
      var $conv18=(($46)&65535);
      $m=$conv18;
      var $47=$m;
      var $48=$wsize;
      var $cmp19=(($47)>>>0) >= (($48)>>>0);
      if ($cmp19) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $cond_true21
      var $49=$m;
      var $50=$wsize;
      var $sub22=(($49-$50)|0);
      var $cond25 = $sub22;__label__ = 12; break;
    case 11: // $cond_false23
      var $cond25 = 0;__label__ = 12; break;
    case 12: // $cond_end24
      var $cond25;
      var $conv26=(($cond25) & 65535);
      var $51=$p;
      HEAP16[(($51)>>1)]=$conv26;
      __label__ = 13; break;
    case 13: // $do_cond27
      var $52=$n;
      var $dec28=(($52-1)|0);
      $n=$dec28;
      var $tobool29=(($dec28)|0)!=0;
      if ($tobool29) { __label__ = 9; break; } else { __label__ = 14; break; }
    case 14: // $do_end30
      var $53=$wsize;
      var $54=$more;
      var $add31=(($54+$53)|0);
      $more=$add31;
      __label__ = 15; break;
    case 15: // $if_end
      var $55=$s_addr;
      var $strm=(($55)|0);
      var $56=HEAP32[(($strm)>>2)];
      var $avail_in=(($56+4)|0);
      var $57=HEAP32[(($avail_in)>>2)];
      var $cmp32=(($57)|0)==0;
      if ($cmp32) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $if_then34
      __label__ = 34; break;
    case 17: // $if_end35
      var $58=$s_addr;
      var $strm36=(($58)|0);
      var $59=HEAP32[(($strm36)>>2)];
      var $60=$s_addr;
      var $window37=(($60+56)|0);
      var $61=HEAP32[(($window37)>>2)];
      var $62=$s_addr;
      var $strstart38=(($62+108)|0);
      var $63=HEAP32[(($strstart38)>>2)];
      var $add_ptr39=(($61+$63)|0);
      var $64=$s_addr;
      var $lookahead40=(($64+116)|0);
      var $65=HEAP32[(($lookahead40)>>2)];
      var $add_ptr41=(($add_ptr39+$65)|0);
      var $66=$more;
      var $call=_read_buf($59, $add_ptr41, $66);
      $n=$call;
      var $67=$n;
      var $68=$s_addr;
      var $lookahead42=(($68+116)|0);
      var $69=HEAP32[(($lookahead42)>>2)];
      var $add43=(($69+$67)|0);
      HEAP32[(($lookahead42)>>2)]=$add43;
      var $70=$s_addr;
      var $lookahead44=(($70+116)|0);
      var $71=HEAPU32[(($lookahead44)>>2)];
      var $cmp45=(($71)>>>0) >= 3;
      if ($cmp45) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: // $if_then47
      var $72=$s_addr;
      var $strstart48=(($72+108)|0);
      var $73=HEAP32[(($strstart48)>>2)];
      var $74=$s_addr;
      var $window49=(($74+56)|0);
      var $75=HEAP32[(($window49)>>2)];
      var $arrayidx50=(($75+$73)|0);
      var $76=HEAPU8[($arrayidx50)];
      var $conv51=(($76)&255);
      var $77=$s_addr;
      var $ins_h=(($77+72)|0);
      HEAP32[(($ins_h)>>2)]=$conv51;
      var $78=$s_addr;
      var $ins_h52=(($78+72)|0);
      var $79=HEAP32[(($ins_h52)>>2)];
      var $80=$s_addr;
      var $hash_shift=(($80+88)|0);
      var $81=HEAP32[(($hash_shift)>>2)];
      var $shl=$79 << $81;
      var $82=$s_addr;
      var $strstart53=(($82+108)|0);
      var $83=HEAP32[(($strstart53)>>2)];
      var $add54=(($83+1)|0);
      var $84=$s_addr;
      var $window55=(($84+56)|0);
      var $85=HEAP32[(($window55)>>2)];
      var $arrayidx56=(($85+$add54)|0);
      var $86=HEAPU8[($arrayidx56)];
      var $conv57=(($86)&255);
      var $xor=$shl ^ $conv57;
      var $87=$s_addr;
      var $hash_mask=(($87+84)|0);
      var $88=HEAP32[(($hash_mask)>>2)];
      var $and=$xor & $88;
      var $89=$s_addr;
      var $ins_h58=(($89+72)|0);
      HEAP32[(($ins_h58)>>2)]=$and;
      __label__ = 19; break;
    case 19: // $if_end59
      __label__ = 20; break;
    case 20: // $do_cond60
      var $90=$s_addr;
      var $lookahead61=(($90+116)|0);
      var $91=HEAPU32[(($lookahead61)>>2)];
      var $cmp62=(($91)>>>0) < 262;
      if ($cmp62) { __label__ = 21; break; } else { var $95 = 0;__label__ = 22; break; }
    case 21: // $land_rhs
      var $92=$s_addr;
      var $strm64=(($92)|0);
      var $93=HEAP32[(($strm64)>>2)];
      var $avail_in65=(($93+4)|0);
      var $94=HEAP32[(($avail_in65)>>2)];
      var $cmp66=(($94)|0)!=0;
      var $95 = $cmp66;__label__ = 22; break;
    case 22: // $land_end
      var $95;
      if ($95) { __label__ = 1; break; } else { __label__ = 23; break; }
    case 23: // $do_end68
      var $96=$s_addr;
      var $high_water=(($96+5824)|0);
      var $97=HEAPU32[(($high_water)>>2)];
      var $98=$s_addr;
      var $window_size69=(($98+60)|0);
      var $99=HEAPU32[(($window_size69)>>2)];
      var $cmp70=(($97)>>>0) < (($99)>>>0);
      if ($cmp70) { __label__ = 24; break; } else { __label__ = 34; break; }
    case 24: // $if_then72
      var $100=$s_addr;
      var $strstart73=(($100+108)|0);
      var $101=HEAP32[(($strstart73)>>2)];
      var $102=$s_addr;
      var $lookahead74=(($102+116)|0);
      var $103=HEAP32[(($lookahead74)>>2)];
      var $add75=(($101+$103)|0);
      $curr=$add75;
      var $104=$s_addr;
      var $high_water76=(($104+5824)|0);
      var $105=HEAPU32[(($high_water76)>>2)];
      var $106=$curr;
      var $cmp77=(($105)>>>0) < (($106)>>>0);
      if ($cmp77) { __label__ = 25; break; } else { __label__ = 28; break; }
    case 25: // $if_then79
      var $107=$s_addr;
      var $window_size80=(($107+60)|0);
      var $108=HEAP32[(($window_size80)>>2)];
      var $109=$curr;
      var $sub81=(($108-$109)|0);
      $init=$sub81;
      var $110=$init;
      var $cmp82=(($110)>>>0) > 258;
      if ($cmp82) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: // $if_then84
      $init=258;
      __label__ = 27; break;
    case 27: // $if_end85
      var $111=$s_addr;
      var $window86=(($111+56)|0);
      var $112=HEAP32[(($window86)>>2)];
      var $113=$curr;
      var $add_ptr87=(($112+$113)|0);
      var $114=$init;
      _memset($add_ptr87, 0, $114, 1);
      var $115=$curr;
      var $116=$init;
      var $add88=(($115+$116)|0);
      var $117=$s_addr;
      var $high_water89=(($117+5824)|0);
      HEAP32[(($high_water89)>>2)]=$add88;
      __label__ = 33; break;
    case 28: // $if_else
      var $118=$s_addr;
      var $high_water90=(($118+5824)|0);
      var $119=HEAPU32[(($high_water90)>>2)];
      var $120=$curr;
      var $add91=(($120+258)|0);
      var $cmp92=(($119)>>>0) < (($add91)>>>0);
      if ($cmp92) { __label__ = 29; break; } else { __label__ = 32; break; }
    case 29: // $if_then94
      var $121=$curr;
      var $add95=(($121+258)|0);
      var $122=$s_addr;
      var $high_water96=(($122+5824)|0);
      var $123=HEAP32[(($high_water96)>>2)];
      var $sub97=(($add95-$123)|0);
      $init=$sub97;
      var $124=$init;
      var $125=$s_addr;
      var $window_size98=(($125+60)|0);
      var $126=HEAP32[(($window_size98)>>2)];
      var $127=$s_addr;
      var $high_water99=(($127+5824)|0);
      var $128=HEAP32[(($high_water99)>>2)];
      var $sub100=(($126-$128)|0);
      var $cmp101=(($124)>>>0) > (($sub100)>>>0);
      if ($cmp101) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then103
      var $129=$s_addr;
      var $window_size104=(($129+60)|0);
      var $130=HEAP32[(($window_size104)>>2)];
      var $131=$s_addr;
      var $high_water105=(($131+5824)|0);
      var $132=HEAP32[(($high_water105)>>2)];
      var $sub106=(($130-$132)|0);
      $init=$sub106;
      __label__ = 31; break;
    case 31: // $if_end107
      var $133=$s_addr;
      var $window108=(($133+56)|0);
      var $134=HEAP32[(($window108)>>2)];
      var $135=$s_addr;
      var $high_water109=(($135+5824)|0);
      var $136=HEAP32[(($high_water109)>>2)];
      var $add_ptr110=(($134+$136)|0);
      var $137=$init;
      _memset($add_ptr110, 0, $137, 1);
      var $138=$init;
      var $139=$s_addr;
      var $high_water111=(($139+5824)|0);
      var $140=HEAP32[(($high_water111)>>2)];
      var $add112=(($140+$138)|0);
      HEAP32[(($high_water111)>>2)]=$add112;
      __label__ = 32; break;
    case 32: // $if_end113
      __label__ = 33; break;
    case 33: // $if_end114
      __label__ = 34; break;
    case 34: // $if_end115
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_fill_window["X"]=1;

function _read_buf($strm, $buf, $size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $buf_addr;
      var $size_addr;
      var $len;
      $strm_addr=$strm;
      $buf_addr=$buf;
      $size_addr=$size;
      var $0=$strm_addr;
      var $avail_in=(($0+4)|0);
      var $1=HEAP32[(($avail_in)>>2)];
      $len=$1;
      var $2=$len;
      var $3=$size_addr;
      var $cmp=(($2)>>>0) > (($3)>>>0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $4=$size_addr;
      $len=$4;
      __label__ = 2; break;
    case 2: // $if_end
      var $5=$len;
      var $cmp1=(($5)|0)==0;
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then2
      $retval=0;
      __label__ = 10; break;
    case 4: // $if_end3
      var $6=$len;
      var $7=$strm_addr;
      var $avail_in4=(($7+4)|0);
      var $8=HEAP32[(($avail_in4)>>2)];
      var $sub=(($8-$6)|0);
      HEAP32[(($avail_in4)>>2)]=$sub;
      var $9=$strm_addr;
      var $state=(($9+28)|0);
      var $10=HEAP32[(($state)>>2)];
      var $wrap=(($10+24)|0);
      var $11=HEAP32[(($wrap)>>2)];
      var $cmp5=(($11)|0)==1;
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then6
      var $12=$strm_addr;
      var $adler=(($12+48)|0);
      var $13=HEAP32[(($adler)>>2)];
      var $14=$strm_addr;
      var $next_in=(($14)|0);
      var $15=HEAP32[(($next_in)>>2)];
      var $16=$len;
      var $call=_adler32($13, $15, $16);
      var $17=$strm_addr;
      var $adler7=(($17+48)|0);
      HEAP32[(($adler7)>>2)]=$call;
      __label__ = 9; break;
    case 6: // $if_else
      var $18=$strm_addr;
      var $state8=(($18+28)|0);
      var $19=HEAP32[(($state8)>>2)];
      var $wrap9=(($19+24)|0);
      var $20=HEAP32[(($wrap9)>>2)];
      var $cmp10=(($20)|0)==2;
      if ($cmp10) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then11
      var $21=$strm_addr;
      var $adler12=(($21+48)|0);
      var $22=HEAP32[(($adler12)>>2)];
      var $23=$strm_addr;
      var $next_in13=(($23)|0);
      var $24=HEAP32[(($next_in13)>>2)];
      var $25=$len;
      var $call14=_crc32($22, $24, $25);
      var $26=$strm_addr;
      var $adler15=(($26+48)|0);
      HEAP32[(($adler15)>>2)]=$call14;
      __label__ = 8; break;
    case 8: // $if_end16
      __label__ = 9; break;
    case 9: // $if_end17
      var $27=$buf_addr;
      var $28=$strm_addr;
      var $next_in18=(($28)|0);
      var $29=HEAP32[(($next_in18)>>2)];
      var $30=$len;
      assert($30 % 1 === 0, 'memcpy given ' + $30 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($27, $29, $30, 1);
      var $31=$len;
      var $32=$strm_addr;
      var $next_in19=(($32)|0);
      var $33=HEAP32[(($next_in19)>>2)];
      var $add_ptr=(($33+$31)|0);
      HEAP32[(($next_in19)>>2)]=$add_ptr;
      var $34=$len;
      var $35=$strm_addr;
      var $total_in=(($35+8)|0);
      var $36=HEAP32[(($total_in)>>2)];
      var $add=(($36+$34)|0);
      HEAP32[(($total_in)>>2)]=$add;
      var $37=$len;
      $retval=$37;
      __label__ = 10; break;
    case 10: // $return
      var $38=$retval;
      ;
      return $38;
    default: assert(0, "bad label: " + __label__);
  }
}
_read_buf["X"]=1;

function _deflate_stored($s, $flush) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $flush_addr;
      var $max_block_size;
      var $max_start;
      $s_addr=$s;
      $flush_addr=$flush;
      $max_block_size=65535;
      var $0=$max_block_size;
      var $1=$s_addr;
      var $pending_buf_size=(($1+12)|0);
      var $2=HEAP32[(($pending_buf_size)>>2)];
      var $sub=(($2-5)|0);
      var $cmp=(($0)>>>0) > (($sub)>>>0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $3=$s_addr;
      var $pending_buf_size1=(($3+12)|0);
      var $4=HEAP32[(($pending_buf_size1)>>2)];
      var $sub2=(($4-5)|0);
      $max_block_size=$sub2;
      __label__ = 2; break;
    case 2: // $if_end
      __label__ = 3; break;
    case 3: // $for_cond
      var $5=$s_addr;
      var $lookahead=(($5+116)|0);
      var $6=HEAPU32[(($lookahead)>>2)];
      var $cmp3=(($6)>>>0) <= 1;
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 10; break; }
    case 4: // $if_then4
      var $7=$s_addr;
      _fill_window($7);
      var $8=$s_addr;
      var $lookahead5=(($8+116)|0);
      var $9=HEAP32[(($lookahead5)>>2)];
      var $cmp6=(($9)|0)==0;
      if ($cmp6) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: // $land_lhs_true
      var $10=$flush_addr;
      var $cmp7=(($10)|0)==0;
      if ($cmp7) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then8
      $retval=0;
      __label__ = 32; break;
    case 7: // $if_end9
      var $11=$s_addr;
      var $lookahead10=(($11+116)|0);
      var $12=HEAP32[(($lookahead10)>>2)];
      var $cmp11=(($12)|0)==0;
      if ($cmp11) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then12
      __label__ = 26; break;
    case 9: // $if_end13
      __label__ = 10; break;
    case 10: // $if_end14
      var $13=$s_addr;
      var $lookahead15=(($13+116)|0);
      var $14=HEAP32[(($lookahead15)>>2)];
      var $15=$s_addr;
      var $strstart=(($15+108)|0);
      var $16=HEAP32[(($strstart)>>2)];
      var $add=(($16+$14)|0);
      HEAP32[(($strstart)>>2)]=$add;
      var $17=$s_addr;
      var $lookahead16=(($17+116)|0);
      HEAP32[(($lookahead16)>>2)]=0;
      var $18=$s_addr;
      var $block_start=(($18+92)|0);
      var $19=HEAP32[(($block_start)>>2)];
      var $20=$max_block_size;
      var $add17=(($19+$20)|0);
      $max_start=$add17;
      var $21=$s_addr;
      var $strstart18=(($21+108)|0);
      var $22=HEAP32[(($strstart18)>>2)];
      var $cmp19=(($22)|0)==0;
      if ($cmp19) { __label__ = 12; break; } else { __label__ = 11; break; }
    case 11: // $lor_lhs_false
      var $23=$s_addr;
      var $strstart20=(($23+108)|0);
      var $24=HEAPU32[(($strstart20)>>2)];
      var $25=$max_start;
      var $cmp21=(($24)>>>0) >= (($25)>>>0);
      if ($cmp21) { __label__ = 12; break; } else { __label__ = 18; break; }
    case 12: // $if_then22
      var $26=$s_addr;
      var $strstart23=(($26+108)|0);
      var $27=HEAP32[(($strstart23)>>2)];
      var $28=$max_start;
      var $sub24=(($27-$28)|0);
      var $29=$s_addr;
      var $lookahead25=(($29+116)|0);
      HEAP32[(($lookahead25)>>2)]=$sub24;
      var $30=$max_start;
      var $31=$s_addr;
      var $strstart26=(($31+108)|0);
      HEAP32[(($strstart26)>>2)]=$30;
      var $32=$s_addr;
      var $33=$s_addr;
      var $block_start27=(($33+92)|0);
      var $34=HEAP32[(($block_start27)>>2)];
      var $cmp28=(($34)|0) >= 0;
      if ($cmp28) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $cond_true
      var $35=$s_addr;
      var $block_start29=(($35+92)|0);
      var $36=HEAP32[(($block_start29)>>2)];
      var $37=$s_addr;
      var $window=(($37+56)|0);
      var $38=HEAP32[(($window)>>2)];
      var $arrayidx=(($38+$36)|0);
      var $cond = $arrayidx;__label__ = 15; break;
    case 14: // $cond_false
      var $cond = 0;__label__ = 15; break;
    case 15: // $cond_end
      var $cond;
      var $39=$s_addr;
      var $strstart30=(($39+108)|0);
      var $40=HEAP32[(($strstart30)>>2)];
      var $41=$s_addr;
      var $block_start31=(($41+92)|0);
      var $42=HEAP32[(($block_start31)>>2)];
      var $sub32=(($40-$42)|0);
      __tr_flush_block($32, $cond, $sub32, 0);
      var $43=$s_addr;
      var $strstart33=(($43+108)|0);
      var $44=HEAP32[(($strstart33)>>2)];
      var $45=$s_addr;
      var $block_start34=(($45+92)|0);
      HEAP32[(($block_start34)>>2)]=$44;
      var $46=$s_addr;
      var $strm=(($46)|0);
      var $47=HEAP32[(($strm)>>2)];
      _flush_pending($47);
      var $48=$s_addr;
      var $strm35=(($48)|0);
      var $49=HEAP32[(($strm35)>>2)];
      var $avail_out=(($49+16)|0);
      var $50=HEAP32[(($avail_out)>>2)];
      var $cmp36=(($50)|0)==0;
      if ($cmp36) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $if_then37
      $retval=0;
      __label__ = 32; break;
    case 17: // $if_end38
      __label__ = 18; break;
    case 18: // $if_end39
      var $51=$s_addr;
      var $strstart40=(($51+108)|0);
      var $52=HEAP32[(($strstart40)>>2)];
      var $53=$s_addr;
      var $block_start41=(($53+92)|0);
      var $54=HEAP32[(($block_start41)>>2)];
      var $sub42=(($52-$54)|0);
      var $55=$s_addr;
      var $w_size=(($55+44)|0);
      var $56=HEAP32[(($w_size)>>2)];
      var $sub43=(($56-262)|0);
      var $cmp44=(($sub42)>>>0) >= (($sub43)>>>0);
      if ($cmp44) { __label__ = 19; break; } else { __label__ = 25; break; }
    case 19: // $if_then45
      var $57=$s_addr;
      var $58=$s_addr;
      var $block_start46=(($58+92)|0);
      var $59=HEAP32[(($block_start46)>>2)];
      var $cmp47=(($59)|0) >= 0;
      if ($cmp47) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: // $cond_true48
      var $60=$s_addr;
      var $block_start49=(($60+92)|0);
      var $61=HEAP32[(($block_start49)>>2)];
      var $62=$s_addr;
      var $window50=(($62+56)|0);
      var $63=HEAP32[(($window50)>>2)];
      var $arrayidx51=(($63+$61)|0);
      var $cond54 = $arrayidx51;__label__ = 22; break;
    case 21: // $cond_false52
      var $cond54 = 0;__label__ = 22; break;
    case 22: // $cond_end53
      var $cond54;
      var $64=$s_addr;
      var $strstart55=(($64+108)|0);
      var $65=HEAP32[(($strstart55)>>2)];
      var $66=$s_addr;
      var $block_start56=(($66+92)|0);
      var $67=HEAP32[(($block_start56)>>2)];
      var $sub57=(($65-$67)|0);
      __tr_flush_block($57, $cond54, $sub57, 0);
      var $68=$s_addr;
      var $strstart58=(($68+108)|0);
      var $69=HEAP32[(($strstart58)>>2)];
      var $70=$s_addr;
      var $block_start59=(($70+92)|0);
      HEAP32[(($block_start59)>>2)]=$69;
      var $71=$s_addr;
      var $strm60=(($71)|0);
      var $72=HEAP32[(($strm60)>>2)];
      _flush_pending($72);
      var $73=$s_addr;
      var $strm61=(($73)|0);
      var $74=HEAP32[(($strm61)>>2)];
      var $avail_out62=(($74+16)|0);
      var $75=HEAP32[(($avail_out62)>>2)];
      var $cmp63=(($75)|0)==0;
      if ($cmp63) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: // $if_then64
      $retval=0;
      __label__ = 32; break;
    case 24: // $if_end65
      __label__ = 25; break;
    case 25: // $if_end66
      __label__ = 3; break;
    case 26: // $for_end
      var $76=$s_addr;
      var $77=$s_addr;
      var $block_start67=(($77+92)|0);
      var $78=HEAP32[(($block_start67)>>2)];
      var $cmp68=(($78)|0) >= 0;
      if ($cmp68) { __label__ = 27; break; } else { __label__ = 28; break; }
    case 27: // $cond_true69
      var $79=$s_addr;
      var $block_start70=(($79+92)|0);
      var $80=HEAP32[(($block_start70)>>2)];
      var $81=$s_addr;
      var $window71=(($81+56)|0);
      var $82=HEAP32[(($window71)>>2)];
      var $arrayidx72=(($82+$80)|0);
      var $cond75 = $arrayidx72;__label__ = 29; break;
    case 28: // $cond_false73
      var $cond75 = 0;__label__ = 29; break;
    case 29: // $cond_end74
      var $cond75;
      var $83=$s_addr;
      var $strstart76=(($83+108)|0);
      var $84=HEAP32[(($strstart76)>>2)];
      var $85=$s_addr;
      var $block_start77=(($85+92)|0);
      var $86=HEAP32[(($block_start77)>>2)];
      var $sub78=(($84-$86)|0);
      var $87=$flush_addr;
      var $cmp79=(($87)|0)==4;
      var $conv=(($cmp79)&1);
      __tr_flush_block($76, $cond75, $sub78, $conv);
      var $88=$s_addr;
      var $strstart80=(($88+108)|0);
      var $89=HEAP32[(($strstart80)>>2)];
      var $90=$s_addr;
      var $block_start81=(($90+92)|0);
      HEAP32[(($block_start81)>>2)]=$89;
      var $91=$s_addr;
      var $strm82=(($91)|0);
      var $92=HEAP32[(($strm82)>>2)];
      _flush_pending($92);
      var $93=$s_addr;
      var $strm83=(($93)|0);
      var $94=HEAP32[(($strm83)>>2)];
      var $avail_out84=(($94+16)|0);
      var $95=HEAP32[(($avail_out84)>>2)];
      var $cmp85=(($95)|0)==0;
      if ($cmp85) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then87
      var $96=$flush_addr;
      var $cmp88=(($96)|0)==4;
      var $cond90=$cmp88 ? 2 : 0;
      $retval=$cond90;
      __label__ = 32; break;
    case 31: // $if_end91
      var $97=$flush_addr;
      var $cmp92=(($97)|0)==4;
      var $cond94=$cmp92 ? 3 : 1;
      $retval=$cond94;
      __label__ = 32; break;
    case 32: // $return
      var $98=$retval;
      ;
      return $98;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflate_stored["X"]=1;

function _deflate_fast($s, $flush) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $flush_addr;
      var $hash_head;
      var $bflush;
      var $len;
      var $dist;
      var $cc;
      $s_addr=$s;
      $flush_addr=$flush;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$s_addr;
      var $lookahead=(($0+116)|0);
      var $1=HEAPU32[(($lookahead)>>2)];
      var $cmp=(($1)>>>0) < 262;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 8; break; }
    case 2: // $if_then
      var $2=$s_addr;
      _fill_window($2);
      var $3=$s_addr;
      var $lookahead1=(($3+116)|0);
      var $4=HEAPU32[(($lookahead1)>>2)];
      var $cmp2=(($4)>>>0) < 262;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: // $land_lhs_true
      var $5=$flush_addr;
      var $cmp3=(($5)|0)==0;
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then4
      $retval=0;
      __label__ = 40; break;
    case 5: // $if_end
      var $6=$s_addr;
      var $lookahead5=(($6+116)|0);
      var $7=HEAP32[(($lookahead5)>>2)];
      var $cmp6=(($7)|0)==0;
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then7
      __label__ = 34; break;
    case 7: // $if_end8
      __label__ = 8; break;
    case 8: // $if_end9
      $hash_head=0;
      var $8=$s_addr;
      var $lookahead10=(($8+116)|0);
      var $9=HEAPU32[(($lookahead10)>>2)];
      var $cmp11=(($9)>>>0) >= 3;
      if ($cmp11) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then12
      var $10=$s_addr;
      var $ins_h=(($10+72)|0);
      var $11=HEAP32[(($ins_h)>>2)];
      var $12=$s_addr;
      var $hash_shift=(($12+88)|0);
      var $13=HEAP32[(($hash_shift)>>2)];
      var $shl=$11 << $13;
      var $14=$s_addr;
      var $strstart=(($14+108)|0);
      var $15=HEAP32[(($strstart)>>2)];
      var $add=(($15+2)|0);
      var $16=$s_addr;
      var $window=(($16+56)|0);
      var $17=HEAP32[(($window)>>2)];
      var $arrayidx=(($17+$add)|0);
      var $18=HEAPU8[($arrayidx)];
      var $conv=(($18)&255);
      var $xor=$shl ^ $conv;
      var $19=$s_addr;
      var $hash_mask=(($19+84)|0);
      var $20=HEAP32[(($hash_mask)>>2)];
      var $and=$xor & $20;
      var $21=$s_addr;
      var $ins_h13=(($21+72)|0);
      HEAP32[(($ins_h13)>>2)]=$and;
      var $22=$s_addr;
      var $ins_h14=(($22+72)|0);
      var $23=HEAP32[(($ins_h14)>>2)];
      var $24=$s_addr;
      var $head=(($24+68)|0);
      var $25=HEAP32[(($head)>>2)];
      var $arrayidx15=(($25+($23<<1))|0);
      var $26=HEAPU16[(($arrayidx15)>>1)];
      var $27=$s_addr;
      var $strstart16=(($27+108)|0);
      var $28=HEAP32[(($strstart16)>>2)];
      var $29=$s_addr;
      var $w_mask=(($29+52)|0);
      var $30=HEAP32[(($w_mask)>>2)];
      var $and17=$28 & $30;
      var $31=$s_addr;
      var $prev=(($31+64)|0);
      var $32=HEAP32[(($prev)>>2)];
      var $arrayidx18=(($32+($and17<<1))|0);
      HEAP16[(($arrayidx18)>>1)]=$26;
      var $conv19=(($26)&65535);
      $hash_head=$conv19;
      var $33=$s_addr;
      var $strstart20=(($33+108)|0);
      var $34=HEAP32[(($strstart20)>>2)];
      var $conv21=(($34) & 65535);
      var $35=$s_addr;
      var $ins_h22=(($35+72)|0);
      var $36=HEAP32[(($ins_h22)>>2)];
      var $37=$s_addr;
      var $head23=(($37+68)|0);
      var $38=HEAP32[(($head23)>>2)];
      var $arrayidx24=(($38+($36<<1))|0);
      HEAP16[(($arrayidx24)>>1)]=$conv21;
      __label__ = 10; break;
    case 10: // $if_end25
      var $39=$hash_head;
      var $cmp26=(($39)|0)!=0;
      if ($cmp26) { __label__ = 11; break; } else { __label__ = 13; break; }
    case 11: // $land_lhs_true28
      var $40=$s_addr;
      var $strstart29=(($40+108)|0);
      var $41=HEAP32[(($strstart29)>>2)];
      var $42=$hash_head;
      var $sub=(($41-$42)|0);
      var $43=$s_addr;
      var $w_size=(($43+44)|0);
      var $44=HEAP32[(($w_size)>>2)];
      var $sub30=(($44-262)|0);
      var $cmp31=(($sub)>>>0) <= (($sub30)>>>0);
      if ($cmp31) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then33
      var $45=$s_addr;
      var $46=$hash_head;
      var $call=_longest_match($45, $46);
      var $47=$s_addr;
      var $match_length=(($47+96)|0);
      HEAP32[(($match_length)>>2)]=$call;
      __label__ = 13; break;
    case 13: // $if_end34
      var $48=$s_addr;
      var $match_length35=(($48+96)|0);
      var $49=HEAPU32[(($match_length35)>>2)];
      var $cmp36=(($49)>>>0) >= 3;
      if ($cmp36) { __label__ = 14; break; } else { __label__ = 25; break; }
    case 14: // $if_then38
      var $50=$s_addr;
      var $match_length39=(($50+96)|0);
      var $51=HEAP32[(($match_length39)>>2)];
      var $sub40=(($51-3)|0);
      var $conv41=(($sub40) & 255);
      $len=$conv41;
      var $52=$s_addr;
      var $strstart42=(($52+108)|0);
      var $53=HEAP32[(($strstart42)>>2)];
      var $54=$s_addr;
      var $match_start=(($54+112)|0);
      var $55=HEAP32[(($match_start)>>2)];
      var $sub43=(($53-$55)|0);
      var $conv44=(($sub43) & 65535);
      $dist=$conv44;
      var $56=$dist;
      var $57=$s_addr;
      var $last_lit=(($57+5792)|0);
      var $58=HEAP32[(($last_lit)>>2)];
      var $59=$s_addr;
      var $d_buf=(($59+5796)|0);
      var $60=HEAP32[(($d_buf)>>2)];
      var $arrayidx45=(($60+($58<<1))|0);
      HEAP16[(($arrayidx45)>>1)]=$56;
      var $61=$len;
      var $62=$s_addr;
      var $last_lit46=(($62+5792)|0);
      var $63=HEAP32[(($last_lit46)>>2)];
      var $inc=(($63+1)|0);
      HEAP32[(($last_lit46)>>2)]=$inc;
      var $64=$s_addr;
      var $l_buf=(($64+5784)|0);
      var $65=HEAP32[(($l_buf)>>2)];
      var $arrayidx47=(($65+$63)|0);
      HEAP8[($arrayidx47)]=$61;
      var $66=$dist;
      var $dec=(($66-1)&65535);
      $dist=$dec;
      var $67=$len;
      var $idxprom=(($67)&255);
      var $arrayidx48=(((STRING_TABLE.__length_code)+$idxprom)|0);
      var $68=HEAPU8[($arrayidx48)];
      var $conv49=(($68)&255);
      var $add50=(($conv49+256)|0);
      var $add51=(($add50+1)|0);
      var $69=$s_addr;
      var $dyn_ltree=(($69+148)|0);
      var $arrayidx52=(($dyn_ltree+($add51<<2))|0);
      var $fc=(($arrayidx52)|0);
      var $freq=$fc;
      var $70=HEAP16[(($freq)>>1)];
      var $inc53=(($70+1)&65535);
      HEAP16[(($freq)>>1)]=$inc53;
      var $71=$dist;
      var $conv54=(($71)&65535);
      var $cmp55=(($conv54)|0) < 256;
      if ($cmp55) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $cond_true
      var $72=$dist;
      var $idxprom57=(($72)&65535);
      var $arrayidx58=(((STRING_TABLE.__dist_code)+$idxprom57)|0);
      var $73=HEAPU8[($arrayidx58)];
      var $conv59=(($73)&255);
      var $cond = $conv59;__label__ = 17; break;
    case 16: // $cond_false
      var $74=$dist;
      var $conv60=(($74)&65535);
      var $shr=$conv60 >> 7;
      var $add61=(($shr+256)|0);
      var $arrayidx62=(((STRING_TABLE.__dist_code)+$add61)|0);
      var $75=HEAPU8[($arrayidx62)];
      var $conv63=(($75)&255);
      var $cond = $conv63;__label__ = 17; break;
    case 17: // $cond_end
      var $cond;
      var $76=$s_addr;
      var $dyn_dtree=(($76+2440)|0);
      var $arrayidx64=(($dyn_dtree+($cond<<2))|0);
      var $fc65=(($arrayidx64)|0);
      var $freq66=$fc65;
      var $77=HEAP16[(($freq66)>>1)];
      var $inc67=(($77+1)&65535);
      HEAP16[(($freq66)>>1)]=$inc67;
      var $78=$s_addr;
      var $last_lit68=(($78+5792)|0);
      var $79=HEAP32[(($last_lit68)>>2)];
      var $80=$s_addr;
      var $lit_bufsize=(($80+5788)|0);
      var $81=HEAP32[(($lit_bufsize)>>2)];
      var $sub69=(($81-1)|0);
      var $cmp70=(($79)|0)==(($sub69)|0);
      var $conv71=(($cmp70)&1);
      $bflush=$conv71;
      var $82=$s_addr;
      var $match_length72=(($82+96)|0);
      var $83=HEAP32[(($match_length72)>>2)];
      var $84=$s_addr;
      var $lookahead73=(($84+116)|0);
      var $85=HEAP32[(($lookahead73)>>2)];
      var $sub74=(($85-$83)|0);
      HEAP32[(($lookahead73)>>2)]=$sub74;
      var $86=$s_addr;
      var $match_length75=(($86+96)|0);
      var $87=HEAPU32[(($match_length75)>>2)];
      var $88=$s_addr;
      var $max_lazy_match=(($88+128)|0);
      var $89=HEAPU32[(($max_lazy_match)>>2)];
      var $cmp76=(($87)>>>0) <= (($89)>>>0);
      if ($cmp76) { __label__ = 18; break; } else { __label__ = 23; break; }
    case 18: // $land_lhs_true78
      var $90=$s_addr;
      var $lookahead79=(($90+116)|0);
      var $91=HEAPU32[(($lookahead79)>>2)];
      var $cmp80=(($91)>>>0) >= 3;
      if ($cmp80) { __label__ = 19; break; } else { __label__ = 23; break; }
    case 19: // $if_then82
      var $92=$s_addr;
      var $match_length83=(($92+96)|0);
      var $93=HEAP32[(($match_length83)>>2)];
      var $dec84=(($93-1)|0);
      HEAP32[(($match_length83)>>2)]=$dec84;
      __label__ = 20; break;
    case 20: // $do_body
      var $94=$s_addr;
      var $strstart85=(($94+108)|0);
      var $95=HEAP32[(($strstart85)>>2)];
      var $inc86=(($95+1)|0);
      HEAP32[(($strstart85)>>2)]=$inc86;
      var $96=$s_addr;
      var $ins_h87=(($96+72)|0);
      var $97=HEAP32[(($ins_h87)>>2)];
      var $98=$s_addr;
      var $hash_shift88=(($98+88)|0);
      var $99=HEAP32[(($hash_shift88)>>2)];
      var $shl89=$97 << $99;
      var $100=$s_addr;
      var $strstart90=(($100+108)|0);
      var $101=HEAP32[(($strstart90)>>2)];
      var $add91=(($101+2)|0);
      var $102=$s_addr;
      var $window92=(($102+56)|0);
      var $103=HEAP32[(($window92)>>2)];
      var $arrayidx93=(($103+$add91)|0);
      var $104=HEAPU8[($arrayidx93)];
      var $conv94=(($104)&255);
      var $xor95=$shl89 ^ $conv94;
      var $105=$s_addr;
      var $hash_mask96=(($105+84)|0);
      var $106=HEAP32[(($hash_mask96)>>2)];
      var $and97=$xor95 & $106;
      var $107=$s_addr;
      var $ins_h98=(($107+72)|0);
      HEAP32[(($ins_h98)>>2)]=$and97;
      var $108=$s_addr;
      var $ins_h99=(($108+72)|0);
      var $109=HEAP32[(($ins_h99)>>2)];
      var $110=$s_addr;
      var $head100=(($110+68)|0);
      var $111=HEAP32[(($head100)>>2)];
      var $arrayidx101=(($111+($109<<1))|0);
      var $112=HEAPU16[(($arrayidx101)>>1)];
      var $113=$s_addr;
      var $strstart102=(($113+108)|0);
      var $114=HEAP32[(($strstart102)>>2)];
      var $115=$s_addr;
      var $w_mask103=(($115+52)|0);
      var $116=HEAP32[(($w_mask103)>>2)];
      var $and104=$114 & $116;
      var $117=$s_addr;
      var $prev105=(($117+64)|0);
      var $118=HEAP32[(($prev105)>>2)];
      var $arrayidx106=(($118+($and104<<1))|0);
      HEAP16[(($arrayidx106)>>1)]=$112;
      var $conv107=(($112)&65535);
      $hash_head=$conv107;
      var $119=$s_addr;
      var $strstart108=(($119+108)|0);
      var $120=HEAP32[(($strstart108)>>2)];
      var $conv109=(($120) & 65535);
      var $121=$s_addr;
      var $ins_h110=(($121+72)|0);
      var $122=HEAP32[(($ins_h110)>>2)];
      var $123=$s_addr;
      var $head111=(($123+68)|0);
      var $124=HEAP32[(($head111)>>2)];
      var $arrayidx112=(($124+($122<<1))|0);
      HEAP16[(($arrayidx112)>>1)]=$conv109;
      __label__ = 21; break;
    case 21: // $do_cond
      var $125=$s_addr;
      var $match_length113=(($125+96)|0);
      var $126=HEAP32[(($match_length113)>>2)];
      var $dec114=(($126-1)|0);
      HEAP32[(($match_length113)>>2)]=$dec114;
      var $cmp115=(($dec114)|0)!=0;
      if ($cmp115) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 22: // $do_end
      var $127=$s_addr;
      var $strstart117=(($127+108)|0);
      var $128=HEAP32[(($strstart117)>>2)];
      var $inc118=(($128+1)|0);
      HEAP32[(($strstart117)>>2)]=$inc118;
      __label__ = 24; break;
    case 23: // $if_else
      var $129=$s_addr;
      var $match_length119=(($129+96)|0);
      var $130=HEAP32[(($match_length119)>>2)];
      var $131=$s_addr;
      var $strstart120=(($131+108)|0);
      var $132=HEAP32[(($strstart120)>>2)];
      var $add121=(($132+$130)|0);
      HEAP32[(($strstart120)>>2)]=$add121;
      var $133=$s_addr;
      var $match_length122=(($133+96)|0);
      HEAP32[(($match_length122)>>2)]=0;
      var $134=$s_addr;
      var $strstart123=(($134+108)|0);
      var $135=HEAP32[(($strstart123)>>2)];
      var $136=$s_addr;
      var $window124=(($136+56)|0);
      var $137=HEAP32[(($window124)>>2)];
      var $arrayidx125=(($137+$135)|0);
      var $138=HEAPU8[($arrayidx125)];
      var $conv126=(($138)&255);
      var $139=$s_addr;
      var $ins_h127=(($139+72)|0);
      HEAP32[(($ins_h127)>>2)]=$conv126;
      var $140=$s_addr;
      var $ins_h128=(($140+72)|0);
      var $141=HEAP32[(($ins_h128)>>2)];
      var $142=$s_addr;
      var $hash_shift129=(($142+88)|0);
      var $143=HEAP32[(($hash_shift129)>>2)];
      var $shl130=$141 << $143;
      var $144=$s_addr;
      var $strstart131=(($144+108)|0);
      var $145=HEAP32[(($strstart131)>>2)];
      var $add132=(($145+1)|0);
      var $146=$s_addr;
      var $window133=(($146+56)|0);
      var $147=HEAP32[(($window133)>>2)];
      var $arrayidx134=(($147+$add132)|0);
      var $148=HEAPU8[($arrayidx134)];
      var $conv135=(($148)&255);
      var $xor136=$shl130 ^ $conv135;
      var $149=$s_addr;
      var $hash_mask137=(($149+84)|0);
      var $150=HEAP32[(($hash_mask137)>>2)];
      var $and138=$xor136 & $150;
      var $151=$s_addr;
      var $ins_h139=(($151+72)|0);
      HEAP32[(($ins_h139)>>2)]=$and138;
      __label__ = 24; break;
    case 24: // $if_end140
      __label__ = 26; break;
    case 25: // $if_else141
      var $152=$s_addr;
      var $strstart142=(($152+108)|0);
      var $153=HEAP32[(($strstart142)>>2)];
      var $154=$s_addr;
      var $window143=(($154+56)|0);
      var $155=HEAP32[(($window143)>>2)];
      var $arrayidx144=(($155+$153)|0);
      var $156=HEAP8[($arrayidx144)];
      $cc=$156;
      var $157=$s_addr;
      var $last_lit145=(($157+5792)|0);
      var $158=HEAP32[(($last_lit145)>>2)];
      var $159=$s_addr;
      var $d_buf146=(($159+5796)|0);
      var $160=HEAP32[(($d_buf146)>>2)];
      var $arrayidx147=(($160+($158<<1))|0);
      HEAP16[(($arrayidx147)>>1)]=0;
      var $161=$cc;
      var $162=$s_addr;
      var $last_lit148=(($162+5792)|0);
      var $163=HEAP32[(($last_lit148)>>2)];
      var $inc149=(($163+1)|0);
      HEAP32[(($last_lit148)>>2)]=$inc149;
      var $164=$s_addr;
      var $l_buf150=(($164+5784)|0);
      var $165=HEAP32[(($l_buf150)>>2)];
      var $arrayidx151=(($165+$163)|0);
      HEAP8[($arrayidx151)]=$161;
      var $166=$cc;
      var $idxprom152=(($166)&255);
      var $167=$s_addr;
      var $dyn_ltree153=(($167+148)|0);
      var $arrayidx154=(($dyn_ltree153+($idxprom152<<2))|0);
      var $fc155=(($arrayidx154)|0);
      var $freq156=$fc155;
      var $168=HEAP16[(($freq156)>>1)];
      var $inc157=(($168+1)&65535);
      HEAP16[(($freq156)>>1)]=$inc157;
      var $169=$s_addr;
      var $last_lit158=(($169+5792)|0);
      var $170=HEAP32[(($last_lit158)>>2)];
      var $171=$s_addr;
      var $lit_bufsize159=(($171+5788)|0);
      var $172=HEAP32[(($lit_bufsize159)>>2)];
      var $sub160=(($172-1)|0);
      var $cmp161=(($170)|0)==(($sub160)|0);
      var $conv162=(($cmp161)&1);
      $bflush=$conv162;
      var $173=$s_addr;
      var $lookahead163=(($173+116)|0);
      var $174=HEAP32[(($lookahead163)>>2)];
      var $dec164=(($174-1)|0);
      HEAP32[(($lookahead163)>>2)]=$dec164;
      var $175=$s_addr;
      var $strstart165=(($175+108)|0);
      var $176=HEAP32[(($strstart165)>>2)];
      var $inc166=(($176+1)|0);
      HEAP32[(($strstart165)>>2)]=$inc166;
      __label__ = 26; break;
    case 26: // $if_end167
      var $177=$bflush;
      var $tobool=(($177)|0)!=0;
      if ($tobool) { __label__ = 27; break; } else { __label__ = 33; break; }
    case 27: // $if_then168
      var $178=$s_addr;
      var $179=$s_addr;
      var $block_start=(($179+92)|0);
      var $180=HEAP32[(($block_start)>>2)];
      var $cmp169=(($180)|0) >= 0;
      if ($cmp169) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: // $cond_true171
      var $181=$s_addr;
      var $block_start172=(($181+92)|0);
      var $182=HEAP32[(($block_start172)>>2)];
      var $183=$s_addr;
      var $window173=(($183+56)|0);
      var $184=HEAP32[(($window173)>>2)];
      var $arrayidx174=(($184+$182)|0);
      var $cond177 = $arrayidx174;__label__ = 30; break;
    case 29: // $cond_false175
      var $cond177 = 0;__label__ = 30; break;
    case 30: // $cond_end176
      var $cond177;
      var $185=$s_addr;
      var $strstart178=(($185+108)|0);
      var $186=HEAP32[(($strstart178)>>2)];
      var $187=$s_addr;
      var $block_start179=(($187+92)|0);
      var $188=HEAP32[(($block_start179)>>2)];
      var $sub180=(($186-$188)|0);
      __tr_flush_block($178, $cond177, $sub180, 0);
      var $189=$s_addr;
      var $strstart181=(($189+108)|0);
      var $190=HEAP32[(($strstart181)>>2)];
      var $191=$s_addr;
      var $block_start182=(($191+92)|0);
      HEAP32[(($block_start182)>>2)]=$190;
      var $192=$s_addr;
      var $strm=(($192)|0);
      var $193=HEAP32[(($strm)>>2)];
      _flush_pending($193);
      var $194=$s_addr;
      var $strm183=(($194)|0);
      var $195=HEAP32[(($strm183)>>2)];
      var $avail_out=(($195+16)|0);
      var $196=HEAP32[(($avail_out)>>2)];
      var $cmp184=(($196)|0)==0;
      if ($cmp184) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $if_then186
      $retval=0;
      __label__ = 40; break;
    case 32: // $if_end187
      __label__ = 33; break;
    case 33: // $if_end188
      __label__ = 1; break;
    case 34: // $for_end
      var $197=$s_addr;
      var $198=$s_addr;
      var $block_start189=(($198+92)|0);
      var $199=HEAP32[(($block_start189)>>2)];
      var $cmp190=(($199)|0) >= 0;
      if ($cmp190) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $cond_true192
      var $200=$s_addr;
      var $block_start193=(($200+92)|0);
      var $201=HEAP32[(($block_start193)>>2)];
      var $202=$s_addr;
      var $window194=(($202+56)|0);
      var $203=HEAP32[(($window194)>>2)];
      var $arrayidx195=(($203+$201)|0);
      var $cond198 = $arrayidx195;__label__ = 37; break;
    case 36: // $cond_false196
      var $cond198 = 0;__label__ = 37; break;
    case 37: // $cond_end197
      var $cond198;
      var $204=$s_addr;
      var $strstart199=(($204+108)|0);
      var $205=HEAP32[(($strstart199)>>2)];
      var $206=$s_addr;
      var $block_start200=(($206+92)|0);
      var $207=HEAP32[(($block_start200)>>2)];
      var $sub201=(($205-$207)|0);
      var $208=$flush_addr;
      var $cmp202=(($208)|0)==4;
      var $conv203=(($cmp202)&1);
      __tr_flush_block($197, $cond198, $sub201, $conv203);
      var $209=$s_addr;
      var $strstart204=(($209+108)|0);
      var $210=HEAP32[(($strstart204)>>2)];
      var $211=$s_addr;
      var $block_start205=(($211+92)|0);
      HEAP32[(($block_start205)>>2)]=$210;
      var $212=$s_addr;
      var $strm206=(($212)|0);
      var $213=HEAP32[(($strm206)>>2)];
      _flush_pending($213);
      var $214=$s_addr;
      var $strm207=(($214)|0);
      var $215=HEAP32[(($strm207)>>2)];
      var $avail_out208=(($215+16)|0);
      var $216=HEAP32[(($avail_out208)>>2)];
      var $cmp209=(($216)|0)==0;
      if ($cmp209) { __label__ = 38; break; } else { __label__ = 39; break; }
    case 38: // $if_then211
      var $217=$flush_addr;
      var $cmp212=(($217)|0)==4;
      var $cond214=$cmp212 ? 2 : 0;
      $retval=$cond214;
      __label__ = 40; break;
    case 39: // $if_end215
      var $218=$flush_addr;
      var $cmp216=(($218)|0)==4;
      var $cond218=$cmp216 ? 3 : 1;
      $retval=$cond218;
      __label__ = 40; break;
    case 40: // $return
      var $219=$retval;
      ;
      return $219;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflate_fast["X"]=1;

function _deflate_slow($s, $flush) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $flush_addr;
      var $hash_head;
      var $bflush;
      var $max_insert;
      var $len;
      var $dist;
      var $cc;
      var $cc238;
      $s_addr=$s;
      $flush_addr=$flush;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$s_addr;
      var $lookahead=(($0+116)|0);
      var $1=HEAPU32[(($lookahead)>>2)];
      var $cmp=(($1)>>>0) < 262;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 8; break; }
    case 2: // $if_then
      var $2=$s_addr;
      _fill_window($2);
      var $3=$s_addr;
      var $lookahead1=(($3+116)|0);
      var $4=HEAPU32[(($lookahead1)>>2)];
      var $cmp2=(($4)>>>0) < 262;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: // $land_lhs_true
      var $5=$flush_addr;
      var $cmp3=(($5)|0)==0;
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then4
      $retval=0;
      __label__ = 57; break;
    case 5: // $if_end
      var $6=$s_addr;
      var $lookahead5=(($6+116)|0);
      var $7=HEAP32[(($lookahead5)>>2)];
      var $cmp6=(($7)|0)==0;
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then7
      __label__ = 49; break;
    case 7: // $if_end8
      __label__ = 8; break;
    case 8: // $if_end9
      $hash_head=0;
      var $8=$s_addr;
      var $lookahead10=(($8+116)|0);
      var $9=HEAPU32[(($lookahead10)>>2)];
      var $cmp11=(($9)>>>0) >= 3;
      if ($cmp11) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then12
      var $10=$s_addr;
      var $ins_h=(($10+72)|0);
      var $11=HEAP32[(($ins_h)>>2)];
      var $12=$s_addr;
      var $hash_shift=(($12+88)|0);
      var $13=HEAP32[(($hash_shift)>>2)];
      var $shl=$11 << $13;
      var $14=$s_addr;
      var $strstart=(($14+108)|0);
      var $15=HEAP32[(($strstart)>>2)];
      var $add=(($15+2)|0);
      var $16=$s_addr;
      var $window=(($16+56)|0);
      var $17=HEAP32[(($window)>>2)];
      var $arrayidx=(($17+$add)|0);
      var $18=HEAPU8[($arrayidx)];
      var $conv=(($18)&255);
      var $xor=$shl ^ $conv;
      var $19=$s_addr;
      var $hash_mask=(($19+84)|0);
      var $20=HEAP32[(($hash_mask)>>2)];
      var $and=$xor & $20;
      var $21=$s_addr;
      var $ins_h13=(($21+72)|0);
      HEAP32[(($ins_h13)>>2)]=$and;
      var $22=$s_addr;
      var $ins_h14=(($22+72)|0);
      var $23=HEAP32[(($ins_h14)>>2)];
      var $24=$s_addr;
      var $head=(($24+68)|0);
      var $25=HEAP32[(($head)>>2)];
      var $arrayidx15=(($25+($23<<1))|0);
      var $26=HEAPU16[(($arrayidx15)>>1)];
      var $27=$s_addr;
      var $strstart16=(($27+108)|0);
      var $28=HEAP32[(($strstart16)>>2)];
      var $29=$s_addr;
      var $w_mask=(($29+52)|0);
      var $30=HEAP32[(($w_mask)>>2)];
      var $and17=$28 & $30;
      var $31=$s_addr;
      var $prev=(($31+64)|0);
      var $32=HEAP32[(($prev)>>2)];
      var $arrayidx18=(($32+($and17<<1))|0);
      HEAP16[(($arrayidx18)>>1)]=$26;
      var $conv19=(($26)&65535);
      $hash_head=$conv19;
      var $33=$s_addr;
      var $strstart20=(($33+108)|0);
      var $34=HEAP32[(($strstart20)>>2)];
      var $conv21=(($34) & 65535);
      var $35=$s_addr;
      var $ins_h22=(($35+72)|0);
      var $36=HEAP32[(($ins_h22)>>2)];
      var $37=$s_addr;
      var $head23=(($37+68)|0);
      var $38=HEAP32[(($head23)>>2)];
      var $arrayidx24=(($38+($36<<1))|0);
      HEAP16[(($arrayidx24)>>1)]=$conv21;
      __label__ = 10; break;
    case 10: // $if_end25
      var $39=$s_addr;
      var $match_length=(($39+96)|0);
      var $40=HEAP32[(($match_length)>>2)];
      var $41=$s_addr;
      var $prev_length=(($41+120)|0);
      HEAP32[(($prev_length)>>2)]=$40;
      var $42=$s_addr;
      var $match_start=(($42+112)|0);
      var $43=HEAP32[(($match_start)>>2)];
      var $44=$s_addr;
      var $prev_match=(($44+100)|0);
      HEAP32[(($prev_match)>>2)]=$43;
      var $45=$s_addr;
      var $match_length26=(($45+96)|0);
      HEAP32[(($match_length26)>>2)]=2;
      var $46=$hash_head;
      var $cmp27=(($46)|0)!=0;
      if ($cmp27) { __label__ = 11; break; } else { __label__ = 19; break; }
    case 11: // $land_lhs_true29
      var $47=$s_addr;
      var $prev_length30=(($47+120)|0);
      var $48=HEAPU32[(($prev_length30)>>2)];
      var $49=$s_addr;
      var $max_lazy_match=(($49+128)|0);
      var $50=HEAPU32[(($max_lazy_match)>>2)];
      var $cmp31=(($48)>>>0) < (($50)>>>0);
      if ($cmp31) { __label__ = 12; break; } else { __label__ = 19; break; }
    case 12: // $land_lhs_true33
      var $51=$s_addr;
      var $strstart34=(($51+108)|0);
      var $52=HEAP32[(($strstart34)>>2)];
      var $53=$hash_head;
      var $sub=(($52-$53)|0);
      var $54=$s_addr;
      var $w_size=(($54+44)|0);
      var $55=HEAP32[(($w_size)>>2)];
      var $sub35=(($55-262)|0);
      var $cmp36=(($sub)>>>0) <= (($sub35)>>>0);
      if ($cmp36) { __label__ = 13; break; } else { __label__ = 19; break; }
    case 13: // $if_then38
      var $56=$s_addr;
      var $57=$hash_head;
      var $call=_longest_match($56, $57);
      var $58=$s_addr;
      var $match_length39=(($58+96)|0);
      HEAP32[(($match_length39)>>2)]=$call;
      var $59=$s_addr;
      var $match_length40=(($59+96)|0);
      var $60=HEAPU32[(($match_length40)>>2)];
      var $cmp41=(($60)>>>0) <= 5;
      if ($cmp41) { __label__ = 14; break; } else { __label__ = 18; break; }
    case 14: // $land_lhs_true43
      var $61=$s_addr;
      var $strategy=(($61+136)|0);
      var $62=HEAP32[(($strategy)>>2)];
      var $cmp44=(($62)|0)==1;
      if ($cmp44) { __label__ = 17; break; } else { __label__ = 15; break; }
    case 15: // $lor_lhs_false
      var $63=$s_addr;
      var $match_length46=(($63+96)|0);
      var $64=HEAP32[(($match_length46)>>2)];
      var $cmp47=(($64)|0)==3;
      if ($cmp47) { __label__ = 16; break; } else { __label__ = 18; break; }
    case 16: // $land_lhs_true49
      var $65=$s_addr;
      var $strstart50=(($65+108)|0);
      var $66=HEAP32[(($strstart50)>>2)];
      var $67=$s_addr;
      var $match_start51=(($67+112)|0);
      var $68=HEAP32[(($match_start51)>>2)];
      var $sub52=(($66-$68)|0);
      var $cmp53=(($sub52)>>>0) > 4096;
      if ($cmp53) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then55
      var $69=$s_addr;
      var $match_length56=(($69+96)|0);
      HEAP32[(($match_length56)>>2)]=2;
      __label__ = 18; break;
    case 18: // $if_end57
      __label__ = 19; break;
    case 19: // $if_end58
      var $70=$s_addr;
      var $prev_length59=(($70+120)|0);
      var $71=HEAPU32[(($prev_length59)>>2)];
      var $cmp60=(($71)>>>0) >= 3;
      if ($cmp60) { __label__ = 20; break; } else { __label__ = 37; break; }
    case 20: // $land_lhs_true62
      var $72=$s_addr;
      var $match_length63=(($72+96)|0);
      var $73=HEAPU32[(($match_length63)>>2)];
      var $74=$s_addr;
      var $prev_length64=(($74+120)|0);
      var $75=HEAPU32[(($prev_length64)>>2)];
      var $cmp65=(($73)>>>0) <= (($75)>>>0);
      if ($cmp65) { __label__ = 21; break; } else { __label__ = 37; break; }
    case 21: // $if_then67
      var $76=$s_addr;
      var $strstart68=(($76+108)|0);
      var $77=HEAP32[(($strstart68)>>2)];
      var $78=$s_addr;
      var $lookahead69=(($78+116)|0);
      var $79=HEAP32[(($lookahead69)>>2)];
      var $add70=(($77+$79)|0);
      var $sub71=(($add70-3)|0);
      $max_insert=$sub71;
      var $80=$s_addr;
      var $prev_length72=(($80+120)|0);
      var $81=HEAP32[(($prev_length72)>>2)];
      var $sub73=(($81-3)|0);
      var $conv74=(($sub73) & 255);
      $len=$conv74;
      var $82=$s_addr;
      var $strstart75=(($82+108)|0);
      var $83=HEAP32[(($strstart75)>>2)];
      var $sub76=(($83-1)|0);
      var $84=$s_addr;
      var $prev_match77=(($84+100)|0);
      var $85=HEAP32[(($prev_match77)>>2)];
      var $sub78=(($sub76-$85)|0);
      var $conv79=(($sub78) & 65535);
      $dist=$conv79;
      var $86=$dist;
      var $87=$s_addr;
      var $last_lit=(($87+5792)|0);
      var $88=HEAP32[(($last_lit)>>2)];
      var $89=$s_addr;
      var $d_buf=(($89+5796)|0);
      var $90=HEAP32[(($d_buf)>>2)];
      var $arrayidx80=(($90+($88<<1))|0);
      HEAP16[(($arrayidx80)>>1)]=$86;
      var $91=$len;
      var $92=$s_addr;
      var $last_lit81=(($92+5792)|0);
      var $93=HEAP32[(($last_lit81)>>2)];
      var $inc=(($93+1)|0);
      HEAP32[(($last_lit81)>>2)]=$inc;
      var $94=$s_addr;
      var $l_buf=(($94+5784)|0);
      var $95=HEAP32[(($l_buf)>>2)];
      var $arrayidx82=(($95+$93)|0);
      HEAP8[($arrayidx82)]=$91;
      var $96=$dist;
      var $dec=(($96-1)&65535);
      $dist=$dec;
      var $97=$len;
      var $idxprom=(($97)&255);
      var $arrayidx83=(((STRING_TABLE.__length_code)+$idxprom)|0);
      var $98=HEAPU8[($arrayidx83)];
      var $conv84=(($98)&255);
      var $add85=(($conv84+256)|0);
      var $add86=(($add85+1)|0);
      var $99=$s_addr;
      var $dyn_ltree=(($99+148)|0);
      var $arrayidx87=(($dyn_ltree+($add86<<2))|0);
      var $fc=(($arrayidx87)|0);
      var $freq=$fc;
      var $100=HEAP16[(($freq)>>1)];
      var $inc88=(($100+1)&65535);
      HEAP16[(($freq)>>1)]=$inc88;
      var $101=$dist;
      var $conv89=(($101)&65535);
      var $cmp90=(($conv89)|0) < 256;
      if ($cmp90) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $cond_true
      var $102=$dist;
      var $idxprom92=(($102)&65535);
      var $arrayidx93=(((STRING_TABLE.__dist_code)+$idxprom92)|0);
      var $103=HEAPU8[($arrayidx93)];
      var $conv94=(($103)&255);
      var $cond = $conv94;__label__ = 24; break;
    case 23: // $cond_false
      var $104=$dist;
      var $conv95=(($104)&65535);
      var $shr=$conv95 >> 7;
      var $add96=(($shr+256)|0);
      var $arrayidx97=(((STRING_TABLE.__dist_code)+$add96)|0);
      var $105=HEAPU8[($arrayidx97)];
      var $conv98=(($105)&255);
      var $cond = $conv98;__label__ = 24; break;
    case 24: // $cond_end
      var $cond;
      var $106=$s_addr;
      var $dyn_dtree=(($106+2440)|0);
      var $arrayidx99=(($dyn_dtree+($cond<<2))|0);
      var $fc100=(($arrayidx99)|0);
      var $freq101=$fc100;
      var $107=HEAP16[(($freq101)>>1)];
      var $inc102=(($107+1)&65535);
      HEAP16[(($freq101)>>1)]=$inc102;
      var $108=$s_addr;
      var $last_lit103=(($108+5792)|0);
      var $109=HEAP32[(($last_lit103)>>2)];
      var $110=$s_addr;
      var $lit_bufsize=(($110+5788)|0);
      var $111=HEAP32[(($lit_bufsize)>>2)];
      var $sub104=(($111-1)|0);
      var $cmp105=(($109)|0)==(($sub104)|0);
      var $conv106=(($cmp105)&1);
      $bflush=$conv106;
      var $112=$s_addr;
      var $prev_length107=(($112+120)|0);
      var $113=HEAP32[(($prev_length107)>>2)];
      var $sub108=(($113-1)|0);
      var $114=$s_addr;
      var $lookahead109=(($114+116)|0);
      var $115=HEAP32[(($lookahead109)>>2)];
      var $sub110=(($115-$sub108)|0);
      HEAP32[(($lookahead109)>>2)]=$sub110;
      var $116=$s_addr;
      var $prev_length111=(($116+120)|0);
      var $117=HEAP32[(($prev_length111)>>2)];
      var $sub112=(($117-2)|0);
      HEAP32[(($prev_length111)>>2)]=$sub112;
      __label__ = 25; break;
    case 25: // $do_body
      var $118=$s_addr;
      var $strstart113=(($118+108)|0);
      var $119=HEAP32[(($strstart113)>>2)];
      var $inc114=(($119+1)|0);
      HEAP32[(($strstart113)>>2)]=$inc114;
      var $120=$max_insert;
      var $cmp115=(($inc114)>>>0) <= (($120)>>>0);
      if ($cmp115) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: // $if_then117
      var $121=$s_addr;
      var $ins_h118=(($121+72)|0);
      var $122=HEAP32[(($ins_h118)>>2)];
      var $123=$s_addr;
      var $hash_shift119=(($123+88)|0);
      var $124=HEAP32[(($hash_shift119)>>2)];
      var $shl120=$122 << $124;
      var $125=$s_addr;
      var $strstart121=(($125+108)|0);
      var $126=HEAP32[(($strstart121)>>2)];
      var $add122=(($126+2)|0);
      var $127=$s_addr;
      var $window123=(($127+56)|0);
      var $128=HEAP32[(($window123)>>2)];
      var $arrayidx124=(($128+$add122)|0);
      var $129=HEAPU8[($arrayidx124)];
      var $conv125=(($129)&255);
      var $xor126=$shl120 ^ $conv125;
      var $130=$s_addr;
      var $hash_mask127=(($130+84)|0);
      var $131=HEAP32[(($hash_mask127)>>2)];
      var $and128=$xor126 & $131;
      var $132=$s_addr;
      var $ins_h129=(($132+72)|0);
      HEAP32[(($ins_h129)>>2)]=$and128;
      var $133=$s_addr;
      var $ins_h130=(($133+72)|0);
      var $134=HEAP32[(($ins_h130)>>2)];
      var $135=$s_addr;
      var $head131=(($135+68)|0);
      var $136=HEAP32[(($head131)>>2)];
      var $arrayidx132=(($136+($134<<1))|0);
      var $137=HEAPU16[(($arrayidx132)>>1)];
      var $138=$s_addr;
      var $strstart133=(($138+108)|0);
      var $139=HEAP32[(($strstart133)>>2)];
      var $140=$s_addr;
      var $w_mask134=(($140+52)|0);
      var $141=HEAP32[(($w_mask134)>>2)];
      var $and135=$139 & $141;
      var $142=$s_addr;
      var $prev136=(($142+64)|0);
      var $143=HEAP32[(($prev136)>>2)];
      var $arrayidx137=(($143+($and135<<1))|0);
      HEAP16[(($arrayidx137)>>1)]=$137;
      var $conv138=(($137)&65535);
      $hash_head=$conv138;
      var $144=$s_addr;
      var $strstart139=(($144+108)|0);
      var $145=HEAP32[(($strstart139)>>2)];
      var $conv140=(($145) & 65535);
      var $146=$s_addr;
      var $ins_h141=(($146+72)|0);
      var $147=HEAP32[(($ins_h141)>>2)];
      var $148=$s_addr;
      var $head142=(($148+68)|0);
      var $149=HEAP32[(($head142)>>2)];
      var $arrayidx143=(($149+($147<<1))|0);
      HEAP16[(($arrayidx143)>>1)]=$conv140;
      __label__ = 27; break;
    case 27: // $if_end144
      __label__ = 28; break;
    case 28: // $do_cond
      var $150=$s_addr;
      var $prev_length145=(($150+120)|0);
      var $151=HEAP32[(($prev_length145)>>2)];
      var $dec146=(($151-1)|0);
      HEAP32[(($prev_length145)>>2)]=$dec146;
      var $cmp147=(($dec146)|0)!=0;
      if ($cmp147) { __label__ = 25; break; } else { __label__ = 29; break; }
    case 29: // $do_end
      var $152=$s_addr;
      var $match_available=(($152+104)|0);
      HEAP32[(($match_available)>>2)]=0;
      var $153=$s_addr;
      var $match_length149=(($153+96)|0);
      HEAP32[(($match_length149)>>2)]=2;
      var $154=$s_addr;
      var $strstart150=(($154+108)|0);
      var $155=HEAP32[(($strstart150)>>2)];
      var $inc151=(($155+1)|0);
      HEAP32[(($strstart150)>>2)]=$inc151;
      var $156=$bflush;
      var $tobool=(($156)|0)!=0;
      if ($tobool) { __label__ = 30; break; } else { __label__ = 36; break; }
    case 30: // $if_then152
      var $157=$s_addr;
      var $158=$s_addr;
      var $block_start=(($158+92)|0);
      var $159=HEAP32[(($block_start)>>2)];
      var $cmp153=(($159)|0) >= 0;
      if ($cmp153) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $cond_true155
      var $160=$s_addr;
      var $block_start156=(($160+92)|0);
      var $161=HEAP32[(($block_start156)>>2)];
      var $162=$s_addr;
      var $window157=(($162+56)|0);
      var $163=HEAP32[(($window157)>>2)];
      var $arrayidx158=(($163+$161)|0);
      var $cond161 = $arrayidx158;__label__ = 33; break;
    case 32: // $cond_false159
      var $cond161 = 0;__label__ = 33; break;
    case 33: // $cond_end160
      var $cond161;
      var $164=$s_addr;
      var $strstart162=(($164+108)|0);
      var $165=HEAP32[(($strstart162)>>2)];
      var $166=$s_addr;
      var $block_start163=(($166+92)|0);
      var $167=HEAP32[(($block_start163)>>2)];
      var $sub164=(($165-$167)|0);
      __tr_flush_block($157, $cond161, $sub164, 0);
      var $168=$s_addr;
      var $strstart165=(($168+108)|0);
      var $169=HEAP32[(($strstart165)>>2)];
      var $170=$s_addr;
      var $block_start166=(($170+92)|0);
      HEAP32[(($block_start166)>>2)]=$169;
      var $171=$s_addr;
      var $strm=(($171)|0);
      var $172=HEAP32[(($strm)>>2)];
      _flush_pending($172);
      var $173=$s_addr;
      var $strm167=(($173)|0);
      var $174=HEAP32[(($strm167)>>2)];
      var $avail_out=(($174+16)|0);
      var $175=HEAP32[(($avail_out)>>2)];
      var $cmp168=(($175)|0)==0;
      if ($cmp168) { __label__ = 34; break; } else { __label__ = 35; break; }
    case 34: // $if_then170
      $retval=0;
      __label__ = 57; break;
    case 35: // $if_end171
      __label__ = 36; break;
    case 36: // $if_end172
      __label__ = 48; break;
    case 37: // $if_else
      var $176=$s_addr;
      var $match_available173=(($176+104)|0);
      var $177=HEAP32[(($match_available173)>>2)];
      var $tobool174=(($177)|0)!=0;
      if ($tobool174) { __label__ = 38; break; } else { __label__ = 46; break; }
    case 38: // $if_then175
      var $178=$s_addr;
      var $strstart176=(($178+108)|0);
      var $179=HEAP32[(($strstart176)>>2)];
      var $sub177=(($179-1)|0);
      var $180=$s_addr;
      var $window178=(($180+56)|0);
      var $181=HEAP32[(($window178)>>2)];
      var $arrayidx179=(($181+$sub177)|0);
      var $182=HEAP8[($arrayidx179)];
      $cc=$182;
      var $183=$s_addr;
      var $last_lit180=(($183+5792)|0);
      var $184=HEAP32[(($last_lit180)>>2)];
      var $185=$s_addr;
      var $d_buf181=(($185+5796)|0);
      var $186=HEAP32[(($d_buf181)>>2)];
      var $arrayidx182=(($186+($184<<1))|0);
      HEAP16[(($arrayidx182)>>1)]=0;
      var $187=$cc;
      var $188=$s_addr;
      var $last_lit183=(($188+5792)|0);
      var $189=HEAP32[(($last_lit183)>>2)];
      var $inc184=(($189+1)|0);
      HEAP32[(($last_lit183)>>2)]=$inc184;
      var $190=$s_addr;
      var $l_buf185=(($190+5784)|0);
      var $191=HEAP32[(($l_buf185)>>2)];
      var $arrayidx186=(($191+$189)|0);
      HEAP8[($arrayidx186)]=$187;
      var $192=$cc;
      var $idxprom187=(($192)&255);
      var $193=$s_addr;
      var $dyn_ltree188=(($193+148)|0);
      var $arrayidx189=(($dyn_ltree188+($idxprom187<<2))|0);
      var $fc190=(($arrayidx189)|0);
      var $freq191=$fc190;
      var $194=HEAP16[(($freq191)>>1)];
      var $inc192=(($194+1)&65535);
      HEAP16[(($freq191)>>1)]=$inc192;
      var $195=$s_addr;
      var $last_lit193=(($195+5792)|0);
      var $196=HEAP32[(($last_lit193)>>2)];
      var $197=$s_addr;
      var $lit_bufsize194=(($197+5788)|0);
      var $198=HEAP32[(($lit_bufsize194)>>2)];
      var $sub195=(($198-1)|0);
      var $cmp196=(($196)|0)==(($sub195)|0);
      var $conv197=(($cmp196)&1);
      $bflush=$conv197;
      var $199=$bflush;
      var $tobool198=(($199)|0)!=0;
      if ($tobool198) { __label__ = 39; break; } else { __label__ = 43; break; }
    case 39: // $if_then199
      var $200=$s_addr;
      var $201=$s_addr;
      var $block_start200=(($201+92)|0);
      var $202=HEAP32[(($block_start200)>>2)];
      var $cmp201=(($202)|0) >= 0;
      if ($cmp201) { __label__ = 40; break; } else { __label__ = 41; break; }
    case 40: // $cond_true203
      var $203=$s_addr;
      var $block_start204=(($203+92)|0);
      var $204=HEAP32[(($block_start204)>>2)];
      var $205=$s_addr;
      var $window205=(($205+56)|0);
      var $206=HEAP32[(($window205)>>2)];
      var $arrayidx206=(($206+$204)|0);
      var $cond209 = $arrayidx206;__label__ = 42; break;
    case 41: // $cond_false207
      var $cond209 = 0;__label__ = 42; break;
    case 42: // $cond_end208
      var $cond209;
      var $207=$s_addr;
      var $strstart210=(($207+108)|0);
      var $208=HEAP32[(($strstart210)>>2)];
      var $209=$s_addr;
      var $block_start211=(($209+92)|0);
      var $210=HEAP32[(($block_start211)>>2)];
      var $sub212=(($208-$210)|0);
      __tr_flush_block($200, $cond209, $sub212, 0);
      var $211=$s_addr;
      var $strstart213=(($211+108)|0);
      var $212=HEAP32[(($strstart213)>>2)];
      var $213=$s_addr;
      var $block_start214=(($213+92)|0);
      HEAP32[(($block_start214)>>2)]=$212;
      var $214=$s_addr;
      var $strm215=(($214)|0);
      var $215=HEAP32[(($strm215)>>2)];
      _flush_pending($215);
      __label__ = 43; break;
    case 43: // $if_end216
      var $216=$s_addr;
      var $strstart217=(($216+108)|0);
      var $217=HEAP32[(($strstart217)>>2)];
      var $inc218=(($217+1)|0);
      HEAP32[(($strstart217)>>2)]=$inc218;
      var $218=$s_addr;
      var $lookahead219=(($218+116)|0);
      var $219=HEAP32[(($lookahead219)>>2)];
      var $dec220=(($219-1)|0);
      HEAP32[(($lookahead219)>>2)]=$dec220;
      var $220=$s_addr;
      var $strm221=(($220)|0);
      var $221=HEAP32[(($strm221)>>2)];
      var $avail_out222=(($221+16)|0);
      var $222=HEAP32[(($avail_out222)>>2)];
      var $cmp223=(($222)|0)==0;
      if ($cmp223) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: // $if_then225
      $retval=0;
      __label__ = 57; break;
    case 45: // $if_end226
      __label__ = 47; break;
    case 46: // $if_else227
      var $223=$s_addr;
      var $match_available228=(($223+104)|0);
      HEAP32[(($match_available228)>>2)]=1;
      var $224=$s_addr;
      var $strstart229=(($224+108)|0);
      var $225=HEAP32[(($strstart229)>>2)];
      var $inc230=(($225+1)|0);
      HEAP32[(($strstart229)>>2)]=$inc230;
      var $226=$s_addr;
      var $lookahead231=(($226+116)|0);
      var $227=HEAP32[(($lookahead231)>>2)];
      var $dec232=(($227-1)|0);
      HEAP32[(($lookahead231)>>2)]=$dec232;
      __label__ = 47; break;
    case 47: // $if_end233
      __label__ = 48; break;
    case 48: // $if_end234
      __label__ = 1; break;
    case 49: // $for_end
      var $228=$s_addr;
      var $match_available235=(($228+104)|0);
      var $229=HEAP32[(($match_available235)>>2)];
      var $tobool236=(($229)|0)!=0;
      if ($tobool236) { __label__ = 50; break; } else { __label__ = 51; break; }
    case 50: // $if_then237
      var $230=$s_addr;
      var $strstart239=(($230+108)|0);
      var $231=HEAP32[(($strstart239)>>2)];
      var $sub240=(($231-1)|0);
      var $232=$s_addr;
      var $window241=(($232+56)|0);
      var $233=HEAP32[(($window241)>>2)];
      var $arrayidx242=(($233+$sub240)|0);
      var $234=HEAP8[($arrayidx242)];
      $cc238=$234;
      var $235=$s_addr;
      var $last_lit243=(($235+5792)|0);
      var $236=HEAP32[(($last_lit243)>>2)];
      var $237=$s_addr;
      var $d_buf244=(($237+5796)|0);
      var $238=HEAP32[(($d_buf244)>>2)];
      var $arrayidx245=(($238+($236<<1))|0);
      HEAP16[(($arrayidx245)>>1)]=0;
      var $239=$cc238;
      var $240=$s_addr;
      var $last_lit246=(($240+5792)|0);
      var $241=HEAP32[(($last_lit246)>>2)];
      var $inc247=(($241+1)|0);
      HEAP32[(($last_lit246)>>2)]=$inc247;
      var $242=$s_addr;
      var $l_buf248=(($242+5784)|0);
      var $243=HEAP32[(($l_buf248)>>2)];
      var $arrayidx249=(($243+$241)|0);
      HEAP8[($arrayidx249)]=$239;
      var $244=$cc238;
      var $idxprom250=(($244)&255);
      var $245=$s_addr;
      var $dyn_ltree251=(($245+148)|0);
      var $arrayidx252=(($dyn_ltree251+($idxprom250<<2))|0);
      var $fc253=(($arrayidx252)|0);
      var $freq254=$fc253;
      var $246=HEAP16[(($freq254)>>1)];
      var $inc255=(($246+1)&65535);
      HEAP16[(($freq254)>>1)]=$inc255;
      var $247=$s_addr;
      var $last_lit256=(($247+5792)|0);
      var $248=HEAP32[(($last_lit256)>>2)];
      var $249=$s_addr;
      var $lit_bufsize257=(($249+5788)|0);
      var $250=HEAP32[(($lit_bufsize257)>>2)];
      var $sub258=(($250-1)|0);
      var $cmp259=(($248)|0)==(($sub258)|0);
      var $conv260=(($cmp259)&1);
      $bflush=$conv260;
      var $251=$s_addr;
      var $match_available261=(($251+104)|0);
      HEAP32[(($match_available261)>>2)]=0;
      __label__ = 51; break;
    case 51: // $if_end262
      var $252=$s_addr;
      var $253=$s_addr;
      var $block_start263=(($253+92)|0);
      var $254=HEAP32[(($block_start263)>>2)];
      var $cmp264=(($254)|0) >= 0;
      if ($cmp264) { __label__ = 52; break; } else { __label__ = 53; break; }
    case 52: // $cond_true266
      var $255=$s_addr;
      var $block_start267=(($255+92)|0);
      var $256=HEAP32[(($block_start267)>>2)];
      var $257=$s_addr;
      var $window268=(($257+56)|0);
      var $258=HEAP32[(($window268)>>2)];
      var $arrayidx269=(($258+$256)|0);
      var $cond272 = $arrayidx269;__label__ = 54; break;
    case 53: // $cond_false270
      var $cond272 = 0;__label__ = 54; break;
    case 54: // $cond_end271
      var $cond272;
      var $259=$s_addr;
      var $strstart273=(($259+108)|0);
      var $260=HEAP32[(($strstart273)>>2)];
      var $261=$s_addr;
      var $block_start274=(($261+92)|0);
      var $262=HEAP32[(($block_start274)>>2)];
      var $sub275=(($260-$262)|0);
      var $263=$flush_addr;
      var $cmp276=(($263)|0)==4;
      var $conv277=(($cmp276)&1);
      __tr_flush_block($252, $cond272, $sub275, $conv277);
      var $264=$s_addr;
      var $strstart278=(($264+108)|0);
      var $265=HEAP32[(($strstart278)>>2)];
      var $266=$s_addr;
      var $block_start279=(($266+92)|0);
      HEAP32[(($block_start279)>>2)]=$265;
      var $267=$s_addr;
      var $strm280=(($267)|0);
      var $268=HEAP32[(($strm280)>>2)];
      _flush_pending($268);
      var $269=$s_addr;
      var $strm281=(($269)|0);
      var $270=HEAP32[(($strm281)>>2)];
      var $avail_out282=(($270+16)|0);
      var $271=HEAP32[(($avail_out282)>>2)];
      var $cmp283=(($271)|0)==0;
      if ($cmp283) { __label__ = 55; break; } else { __label__ = 56; break; }
    case 55: // $if_then285
      var $272=$flush_addr;
      var $cmp286=(($272)|0)==4;
      var $cond288=$cmp286 ? 2 : 0;
      $retval=$cond288;
      __label__ = 57; break;
    case 56: // $if_end289
      var $273=$flush_addr;
      var $cmp290=(($273)|0)==4;
      var $cond292=$cmp290 ? 3 : 1;
      $retval=$cond292;
      __label__ = 57; break;
    case 57: // $return
      var $274=$retval;
      ;
      return $274;
    default: assert(0, "bad label: " + __label__);
  }
}
_deflate_slow["X"]=1;

function _longest_match($s, $cur_match) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $cur_match_addr;
      var $chain_length;
      var $scan;
      var $match;
      var $len;
      var $best_len;
      var $nice_match;
      var $limit;
      var $prev;
      var $wmask;
      var $strend;
      var $scan_end1;
      var $scan_end;
      $s_addr=$s;
      $cur_match_addr=$cur_match;
      var $0=$s_addr;
      var $max_chain_length=(($0+124)|0);
      var $1=HEAP32[(($max_chain_length)>>2)];
      $chain_length=$1;
      var $2=$s_addr;
      var $window=(($2+56)|0);
      var $3=HEAP32[(($window)>>2)];
      var $4=$s_addr;
      var $strstart=(($4+108)|0);
      var $5=HEAP32[(($strstart)>>2)];
      var $add_ptr=(($3+$5)|0);
      $scan=$add_ptr;
      var $6=$s_addr;
      var $prev_length=(($6+120)|0);
      var $7=HEAP32[(($prev_length)>>2)];
      $best_len=$7;
      var $8=$s_addr;
      var $nice_match1=(($8+144)|0);
      var $9=HEAP32[(($nice_match1)>>2)];
      $nice_match=$9;
      var $10=$s_addr;
      var $strstart2=(($10+108)|0);
      var $11=HEAPU32[(($strstart2)>>2)];
      var $12=$s_addr;
      var $w_size=(($12+44)|0);
      var $13=HEAP32[(($w_size)>>2)];
      var $sub=(($13-262)|0);
      var $cmp=(($11)>>>0) > (($sub)>>>0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $cond_true
      var $14=$s_addr;
      var $strstart3=(($14+108)|0);
      var $15=HEAP32[(($strstart3)>>2)];
      var $16=$s_addr;
      var $w_size4=(($16+44)|0);
      var $17=HEAP32[(($w_size4)>>2)];
      var $sub5=(($17-262)|0);
      var $sub6=(($15-$sub5)|0);
      var $cond = $sub6;__label__ = 3; break;
    case 2: // $cond_false
      var $cond = 0;__label__ = 3; break;
    case 3: // $cond_end
      var $cond;
      $limit=$cond;
      var $18=$s_addr;
      var $prev7=(($18+64)|0);
      var $19=HEAP32[(($prev7)>>2)];
      $prev=$19;
      var $20=$s_addr;
      var $w_mask=(($20+52)|0);
      var $21=HEAP32[(($w_mask)>>2)];
      $wmask=$21;
      var $22=$s_addr;
      var $window8=(($22+56)|0);
      var $23=HEAP32[(($window8)>>2)];
      var $24=$s_addr;
      var $strstart9=(($24+108)|0);
      var $25=HEAP32[(($strstart9)>>2)];
      var $add_ptr10=(($23+$25)|0);
      var $add_ptr11=(($add_ptr10+258)|0);
      $strend=$add_ptr11;
      var $26=$best_len;
      var $sub12=(($26-1)|0);
      var $27=$scan;
      var $arrayidx=(($27+$sub12)|0);
      var $28=HEAP8[($arrayidx)];
      $scan_end1=$28;
      var $29=$best_len;
      var $30=$scan;
      var $arrayidx13=(($30+$29)|0);
      var $31=HEAP8[($arrayidx13)];
      $scan_end=$31;
      var $32=$s_addr;
      var $prev_length14=(($32+120)|0);
      var $33=HEAPU32[(($prev_length14)>>2)];
      var $34=$s_addr;
      var $good_match=(($34+140)|0);
      var $35=HEAPU32[(($good_match)>>2)];
      var $cmp15=(($33)>>>0) >= (($35)>>>0);
      if ($cmp15) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then
      var $36=$chain_length;
      var $shr=$36 >>> 2;
      $chain_length=$shr;
      __label__ = 5; break;
    case 5: // $if_end
      var $37=$nice_match;
      var $38=$s_addr;
      var $lookahead=(($38+116)|0);
      var $39=HEAPU32[(($lookahead)>>2)];
      var $cmp16=(($37)>>>0) > (($39)>>>0);
      if ($cmp16) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then17
      var $40=$s_addr;
      var $lookahead18=(($40+116)|0);
      var $41=HEAP32[(($lookahead18)>>2)];
      $nice_match=$41;
      __label__ = 7; break;
    case 7: // $if_end19
      __label__ = 8; break;
    case 8: // $do_body
      var $42=$s_addr;
      var $window20=(($42+56)|0);
      var $43=HEAP32[(($window20)>>2)];
      var $44=$cur_match_addr;
      var $add_ptr21=(($43+$44)|0);
      $match=$add_ptr21;
      var $45=$best_len;
      var $46=$match;
      var $arrayidx22=(($46+$45)|0);
      var $47=HEAPU8[($arrayidx22)];
      var $conv=(($47)&255);
      var $48=$scan_end;
      var $conv23=(($48)&255);
      var $cmp24=(($conv)|0)!=(($conv23)|0);
      if ($cmp24) { __label__ = 12; break; } else { __label__ = 9; break; }
    case 9: // $lor_lhs_false
      var $49=$best_len;
      var $sub26=(($49-1)|0);
      var $50=$match;
      var $arrayidx27=(($50+$sub26)|0);
      var $51=HEAPU8[($arrayidx27)];
      var $conv28=(($51)&255);
      var $52=$scan_end1;
      var $conv29=(($52)&255);
      var $cmp30=(($conv28)|0)!=(($conv29)|0);
      if ($cmp30) { __label__ = 12; break; } else { __label__ = 10; break; }
    case 10: // $lor_lhs_false32
      var $53=$match;
      var $54=HEAPU8[($53)];
      var $conv33=(($54)&255);
      var $55=$scan;
      var $56=HEAPU8[($55)];
      var $conv34=(($56)&255);
      var $cmp35=(($conv33)|0)!=(($conv34)|0);
      if ($cmp35) { __label__ = 12; break; } else { __label__ = 11; break; }
    case 11: // $lor_lhs_false37
      var $57=$match;
      var $incdec_ptr=(($57+1)|0);
      $match=$incdec_ptr;
      var $58=HEAPU8[($incdec_ptr)];
      var $conv38=(($58)&255);
      var $59=$scan;
      var $arrayidx39=(($59+1)|0);
      var $60=HEAPU8[($arrayidx39)];
      var $conv40=(($60)&255);
      var $cmp41=(($conv38)|0)!=(($conv40)|0);
      if ($cmp41) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then43
      __label__ = 30; break;
    case 13: // $if_end44
      var $61=$scan;
      var $add_ptr45=(($61+2)|0);
      $scan=$add_ptr45;
      var $62=$match;
      var $incdec_ptr46=(($62+1)|0);
      $match=$incdec_ptr46;
      __label__ = 14; break;
    case 14: // $do_body47
      __label__ = 15; break;
    case 15: // $do_cond
      var $63=$scan;
      var $incdec_ptr48=(($63+1)|0);
      $scan=$incdec_ptr48;
      var $64=HEAPU8[($incdec_ptr48)];
      var $conv49=(($64)&255);
      var $65=$match;
      var $incdec_ptr50=(($65+1)|0);
      $match=$incdec_ptr50;
      var $66=HEAPU8[($incdec_ptr50)];
      var $conv51=(($66)&255);
      var $cmp52=(($conv49)|0)==(($conv51)|0);
      if ($cmp52) { __label__ = 16; break; } else { var $97 = 0;__label__ = 24; break; }
    case 16: // $land_lhs_true
      var $67=$scan;
      var $incdec_ptr54=(($67+1)|0);
      $scan=$incdec_ptr54;
      var $68=HEAPU8[($incdec_ptr54)];
      var $conv55=(($68)&255);
      var $69=$match;
      var $incdec_ptr56=(($69+1)|0);
      $match=$incdec_ptr56;
      var $70=HEAPU8[($incdec_ptr56)];
      var $conv57=(($70)&255);
      var $cmp58=(($conv55)|0)==(($conv57)|0);
      if ($cmp58) { __label__ = 17; break; } else { var $97 = 0;__label__ = 24; break; }
    case 17: // $land_lhs_true60
      var $71=$scan;
      var $incdec_ptr61=(($71+1)|0);
      $scan=$incdec_ptr61;
      var $72=HEAPU8[($incdec_ptr61)];
      var $conv62=(($72)&255);
      var $73=$match;
      var $incdec_ptr63=(($73+1)|0);
      $match=$incdec_ptr63;
      var $74=HEAPU8[($incdec_ptr63)];
      var $conv64=(($74)&255);
      var $cmp65=(($conv62)|0)==(($conv64)|0);
      if ($cmp65) { __label__ = 18; break; } else { var $97 = 0;__label__ = 24; break; }
    case 18: // $land_lhs_true67
      var $75=$scan;
      var $incdec_ptr68=(($75+1)|0);
      $scan=$incdec_ptr68;
      var $76=HEAPU8[($incdec_ptr68)];
      var $conv69=(($76)&255);
      var $77=$match;
      var $incdec_ptr70=(($77+1)|0);
      $match=$incdec_ptr70;
      var $78=HEAPU8[($incdec_ptr70)];
      var $conv71=(($78)&255);
      var $cmp72=(($conv69)|0)==(($conv71)|0);
      if ($cmp72) { __label__ = 19; break; } else { var $97 = 0;__label__ = 24; break; }
    case 19: // $land_lhs_true74
      var $79=$scan;
      var $incdec_ptr75=(($79+1)|0);
      $scan=$incdec_ptr75;
      var $80=HEAPU8[($incdec_ptr75)];
      var $conv76=(($80)&255);
      var $81=$match;
      var $incdec_ptr77=(($81+1)|0);
      $match=$incdec_ptr77;
      var $82=HEAPU8[($incdec_ptr77)];
      var $conv78=(($82)&255);
      var $cmp79=(($conv76)|0)==(($conv78)|0);
      if ($cmp79) { __label__ = 20; break; } else { var $97 = 0;__label__ = 24; break; }
    case 20: // $land_lhs_true81
      var $83=$scan;
      var $incdec_ptr82=(($83+1)|0);
      $scan=$incdec_ptr82;
      var $84=HEAPU8[($incdec_ptr82)];
      var $conv83=(($84)&255);
      var $85=$match;
      var $incdec_ptr84=(($85+1)|0);
      $match=$incdec_ptr84;
      var $86=HEAPU8[($incdec_ptr84)];
      var $conv85=(($86)&255);
      var $cmp86=(($conv83)|0)==(($conv85)|0);
      if ($cmp86) { __label__ = 21; break; } else { var $97 = 0;__label__ = 24; break; }
    case 21: // $land_lhs_true88
      var $87=$scan;
      var $incdec_ptr89=(($87+1)|0);
      $scan=$incdec_ptr89;
      var $88=HEAPU8[($incdec_ptr89)];
      var $conv90=(($88)&255);
      var $89=$match;
      var $incdec_ptr91=(($89+1)|0);
      $match=$incdec_ptr91;
      var $90=HEAPU8[($incdec_ptr91)];
      var $conv92=(($90)&255);
      var $cmp93=(($conv90)|0)==(($conv92)|0);
      if ($cmp93) { __label__ = 22; break; } else { var $97 = 0;__label__ = 24; break; }
    case 22: // $land_lhs_true95
      var $91=$scan;
      var $incdec_ptr96=(($91+1)|0);
      $scan=$incdec_ptr96;
      var $92=HEAPU8[($incdec_ptr96)];
      var $conv97=(($92)&255);
      var $93=$match;
      var $incdec_ptr98=(($93+1)|0);
      $match=$incdec_ptr98;
      var $94=HEAPU8[($incdec_ptr98)];
      var $conv99=(($94)&255);
      var $cmp100=(($conv97)|0)==(($conv99)|0);
      if ($cmp100) { __label__ = 23; break; } else { var $97 = 0;__label__ = 24; break; }
    case 23: // $land_rhs
      var $95=$scan;
      var $96=$strend;
      var $cmp102=(($95)>>>0) < (($96)>>>0);
      var $97 = $cmp102;__label__ = 24; break;
    case 24: // $land_end
      var $97;
      if ($97) { __label__ = 14; break; } else { __label__ = 25; break; }
    case 25: // $do_end
      var $98=$strend;
      var $99=$scan;
      var $sub_ptr_lhs_cast=$98;
      var $sub_ptr_rhs_cast=$99;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub104=((258-$sub_ptr_sub)|0);
      $len=$sub104;
      var $100=$strend;
      var $add_ptr105=(($100-258)|0);
      $scan=$add_ptr105;
      var $101=$len;
      var $102=$best_len;
      var $cmp106=(($101)|0) > (($102)|0);
      if ($cmp106) { __label__ = 26; break; } else { __label__ = 29; break; }
    case 26: // $if_then108
      var $103=$cur_match_addr;
      var $104=$s_addr;
      var $match_start=(($104+112)|0);
      HEAP32[(($match_start)>>2)]=$103;
      var $105=$len;
      $best_len=$105;
      var $106=$len;
      var $107=$nice_match;
      var $cmp109=(($106)|0) >= (($107)|0);
      if ($cmp109) { __label__ = 27; break; } else { __label__ = 28; break; }
    case 27: // $if_then111
      __label__ = 33; break;
    case 28: // $if_end112
      var $108=$best_len;
      var $sub113=(($108-1)|0);
      var $109=$scan;
      var $arrayidx114=(($109+$sub113)|0);
      var $110=HEAP8[($arrayidx114)];
      $scan_end1=$110;
      var $111=$best_len;
      var $112=$scan;
      var $arrayidx115=(($112+$111)|0);
      var $113=HEAP8[($arrayidx115)];
      $scan_end=$113;
      __label__ = 29; break;
    case 29: // $if_end116
      __label__ = 30; break;
    case 30: // $do_cond117
      var $114=$cur_match_addr;
      var $115=$wmask;
      var $and=$114 & $115;
      var $116=$prev;
      var $arrayidx118=(($116+($and<<1))|0);
      var $117=HEAPU16[(($arrayidx118)>>1)];
      var $conv119=(($117)&65535);
      $cur_match_addr=$conv119;
      var $118=$limit;
      var $cmp120=(($conv119)>>>0) > (($118)>>>0);
      if ($cmp120) { __label__ = 31; break; } else { var $120 = 0;__label__ = 32; break; }
    case 31: // $land_rhs122
      var $119=$chain_length;
      var $dec=(($119-1)|0);
      $chain_length=$dec;
      var $cmp123=(($dec)|0)!=0;
      var $120 = $cmp123;__label__ = 32; break;
    case 32: // $land_end125
      var $120;
      if ($120) { __label__ = 8; break; } else { __label__ = 33; break; }
    case 33: // $do_end126
      var $121=$best_len;
      var $122=$s_addr;
      var $lookahead127=(($122+116)|0);
      var $123=HEAPU32[(($lookahead127)>>2)];
      var $cmp128=(($121)>>>0) <= (($123)>>>0);
      if ($cmp128) { __label__ = 34; break; } else { __label__ = 35; break; }
    case 34: // $if_then130
      var $124=$best_len;
      $retval=$124;
      __label__ = 36; break;
    case 35: // $if_end131
      var $125=$s_addr;
      var $lookahead132=(($125+116)|0);
      var $126=HEAP32[(($lookahead132)>>2)];
      $retval=$126;
      __label__ = 36; break;
    case 36: // $return
      var $127=$retval;
      ;
      return $127;
    default: assert(0, "bad label: " + __label__);
  }
}
_longest_match["X"]=1;

function _inflateReset($strm) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $state;
      $strm_addr=$strm;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state1=(($1+28)|0);
      var $2=HEAP32[(($state1)>>2)];
      var $cmp2=(($2)|0)==0;
      if ($cmp2) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      $retval=-2;
      __label__ = 4; break;
    case 3: // $if_end
      var $3=$strm_addr;
      var $state3=(($3+28)|0);
      var $4=HEAP32[(($state3)>>2)];
      var $5=$4;
      $state=$5;
      var $6=$state;
      var $total=(($6+28)|0);
      HEAP32[(($total)>>2)]=0;
      var $7=$strm_addr;
      var $total_out=(($7+20)|0);
      HEAP32[(($total_out)>>2)]=0;
      var $8=$strm_addr;
      var $total_in=(($8+8)|0);
      HEAP32[(($total_in)>>2)]=0;
      var $9=$strm_addr;
      var $msg=(($9+24)|0);
      HEAP32[(($msg)>>2)]=0;
      var $10=$strm_addr;
      var $adler=(($10+48)|0);
      HEAP32[(($adler)>>2)]=1;
      var $11=$state;
      var $mode=(($11)|0);
      HEAP32[(($mode)>>2)]=0;
      var $12=$state;
      var $last=(($12+4)|0);
      HEAP32[(($last)>>2)]=0;
      var $13=$state;
      var $havedict=(($13+12)|0);
      HEAP32[(($havedict)>>2)]=0;
      var $14=$state;
      var $dmax=(($14+20)|0);
      HEAP32[(($dmax)>>2)]=32768;
      var $15=$state;
      var $head=(($15+32)|0);
      HEAP32[(($head)>>2)]=0;
      var $16=$state;
      var $wsize=(($16+40)|0);
      HEAP32[(($wsize)>>2)]=0;
      var $17=$state;
      var $whave=(($17+44)|0);
      HEAP32[(($whave)>>2)]=0;
      var $18=$state;
      var $wnext=(($18+48)|0);
      HEAP32[(($wnext)>>2)]=0;
      var $19=$state;
      var $hold=(($19+56)|0);
      HEAP32[(($hold)>>2)]=0;
      var $20=$state;
      var $bits=(($20+60)|0);
      HEAP32[(($bits)>>2)]=0;
      var $21=$state;
      var $codes=(($21+1328)|0);
      var $arraydecay=(($codes)|0);
      var $22=$state;
      var $next=(($22+108)|0);
      HEAP32[(($next)>>2)]=$arraydecay;
      var $23=$state;
      var $distcode=(($23+80)|0);
      HEAP32[(($distcode)>>2)]=$arraydecay;
      var $24=$state;
      var $lencode=(($24+76)|0);
      HEAP32[(($lencode)>>2)]=$arraydecay;
      var $25=$state;
      var $sane=(($25+7104)|0);
      HEAP32[(($sane)>>2)]=1;
      var $26=$state;
      var $back=(($26+7108)|0);
      HEAP32[(($back)>>2)]=-1;
      $retval=0;
      __label__ = 4; break;
    case 4: // $return
      var $27=$retval;
      ;
      return $27;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflateReset["X"]=1;

function _inflateReset2($strm, $windowBits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $windowBits_addr;
      var $wrap;
      var $state;
      $strm_addr=$strm;
      $windowBits_addr=$windowBits;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state1=(($1+28)|0);
      var $2=HEAP32[(($state1)>>2)];
      var $cmp2=(($2)|0)==0;
      if ($cmp2) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      $retval=-2;
      __label__ = 16; break;
    case 3: // $if_end
      var $3=$strm_addr;
      var $state3=(($3+28)|0);
      var $4=HEAP32[(($state3)>>2)];
      var $5=$4;
      $state=$5;
      var $6=$windowBits_addr;
      var $cmp4=(($6)|0) < 0;
      if ($cmp4) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then5
      $wrap=0;
      var $7=$windowBits_addr;
      var $sub=(((-$7))|0);
      $windowBits_addr=$sub;
      __label__ = 8; break;
    case 5: // $if_else
      var $8=$windowBits_addr;
      var $shr=$8 >> 4;
      var $add=(($shr+1)|0);
      $wrap=$add;
      var $9=$windowBits_addr;
      var $cmp6=(($9)|0) < 48;
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then7
      var $10=$windowBits_addr;
      var $and=$10 & 15;
      $windowBits_addr=$and;
      __label__ = 7; break;
    case 7: // $if_end8
      __label__ = 8; break;
    case 8: // $if_end9
      var $11=$windowBits_addr;
      var $tobool=(($11)|0)!=0;
      if ($tobool) { __label__ = 9; break; } else { __label__ = 12; break; }
    case 9: // $land_lhs_true
      var $12=$windowBits_addr;
      var $cmp10=(($12)|0) < 8;
      if ($cmp10) { __label__ = 11; break; } else { __label__ = 10; break; }
    case 10: // $lor_lhs_false11
      var $13=$windowBits_addr;
      var $cmp12=(($13)|0) > 15;
      if ($cmp12) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then13
      $retval=-2;
      __label__ = 16; break;
    case 12: // $if_end14
      var $14=$state;
      var $window=(($14+52)|0);
      var $15=HEAP32[(($window)>>2)];
      var $cmp15=(($15)|0)!=0;
      if ($cmp15) { __label__ = 13; break; } else { __label__ = 15; break; }
    case 13: // $land_lhs_true16
      var $16=$state;
      var $wbits=(($16+36)|0);
      var $17=HEAP32[(($wbits)>>2)];
      var $18=$windowBits_addr;
      var $cmp17=(($17)|0)!=(($18)|0);
      if ($cmp17) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then18
      var $19=$strm_addr;
      var $zfree=(($19+36)|0);
      var $20=HEAP32[(($zfree)>>2)];
      var $21=$strm_addr;
      var $opaque=(($21+40)|0);
      var $22=HEAP32[(($opaque)>>2)];
      var $23=$state;
      var $window19=(($23+52)|0);
      var $24=HEAP32[(($window19)>>2)];
      FUNCTION_TABLE[$20]($22, $24);
      var $25=$state;
      var $window20=(($25+52)|0);
      HEAP32[(($window20)>>2)]=0;
      __label__ = 15; break;
    case 15: // $if_end21
      var $26=$wrap;
      var $27=$state;
      var $wrap22=(($27+8)|0);
      HEAP32[(($wrap22)>>2)]=$26;
      var $28=$windowBits_addr;
      var $29=$state;
      var $wbits23=(($29+36)|0);
      HEAP32[(($wbits23)>>2)]=$28;
      var $30=$strm_addr;
      var $call=_inflateReset($30);
      $retval=$call;
      __label__ = 16; break;
    case 16: // $return
      var $31=$retval;
      ;
      return $31;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflateReset2["X"]=1;

function _inflateInit2_($strm, $windowBits, $version, $stream_size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $windowBits_addr;
      var $version_addr;
      var $stream_size_addr;
      var $ret;
      var $state;
      $strm_addr=$strm;
      $windowBits_addr=$windowBits;
      $version_addr=$version;
      $stream_size_addr=$stream_size;
      var $0=$version_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 3; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$version_addr;
      var $arrayidx=(($1)|0);
      var $2=HEAP8[($arrayidx)];
      var $conv=(($2 << 24) >> 24);
      var $3=HEAP8[(((STRING_TABLE.__str14)|0))];
      var $conv1=(($3 << 24) >> 24);
      var $cmp2=(($conv)|0)!=(($conv1)|0);
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 2; break; }
    case 2: // $lor_lhs_false4
      var $4=$stream_size_addr;
      var $cmp5=(($4)|0)!=56;
      if ($cmp5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      $retval=-6;
      __label__ = 15; break;
    case 4: // $if_end
      var $5=$strm_addr;
      var $cmp7=(($5)|0)==0;
      if ($cmp7) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then9
      $retval=-2;
      __label__ = 15; break;
    case 6: // $if_end10
      var $6=$strm_addr;
      var $msg=(($6+24)|0);
      HEAP32[(($msg)>>2)]=0;
      var $7=$strm_addr;
      var $zalloc=(($7+32)|0);
      var $8=HEAP32[(($zalloc)>>2)];
      var $cmp11=(($8)|0)==0;
      if ($cmp11) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then13
      var $9=$strm_addr;
      var $zalloc14=(($9+32)|0);
      HEAP32[(($zalloc14)>>2)]=2;
      var $10=$strm_addr;
      var $opaque=(($10+40)|0);
      HEAP32[(($opaque)>>2)]=0;
      __label__ = 8; break;
    case 8: // $if_end15
      var $11=$strm_addr;
      var $zfree=(($11+36)|0);
      var $12=HEAP32[(($zfree)>>2)];
      var $cmp16=(($12)|0)==0;
      if ($cmp16) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then18
      var $13=$strm_addr;
      var $zfree19=(($13+36)|0);
      HEAP32[(($zfree19)>>2)]=4;
      __label__ = 10; break;
    case 10: // $if_end20
      var $14=$strm_addr;
      var $zalloc21=(($14+32)|0);
      var $15=HEAP32[(($zalloc21)>>2)];
      var $16=$strm_addr;
      var $opaque22=(($16+40)|0);
      var $17=HEAP32[(($opaque22)>>2)];
      var $call=FUNCTION_TABLE[$15]($17, 1, 7116);
      var $18=$call;
      $state=$18;
      var $19=$state;
      var $cmp23=(($19)|0)==0;
      if ($cmp23) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then25
      $retval=-4;
      __label__ = 15; break;
    case 12: // $if_end26
      var $20=$state;
      var $21=$20;
      var $22=$strm_addr;
      var $state27=(($22+28)|0);
      HEAP32[(($state27)>>2)]=$21;
      var $23=$state;
      var $window=(($23+52)|0);
      HEAP32[(($window)>>2)]=0;
      var $24=$strm_addr;
      var $25=$windowBits_addr;
      var $call28=_inflateReset2($24, $25);
      $ret=$call28;
      var $26=$ret;
      var $cmp29=(($26)|0)!=0;
      if ($cmp29) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then31
      var $27=$strm_addr;
      var $zfree32=(($27+36)|0);
      var $28=HEAP32[(($zfree32)>>2)];
      var $29=$strm_addr;
      var $opaque33=(($29+40)|0);
      var $30=HEAP32[(($opaque33)>>2)];
      var $31=$state;
      var $32=$31;
      FUNCTION_TABLE[$28]($30, $32);
      var $33=$strm_addr;
      var $state34=(($33+28)|0);
      HEAP32[(($state34)>>2)]=0;
      __label__ = 14; break;
    case 14: // $if_end35
      var $34=$ret;
      $retval=$34;
      __label__ = 15; break;
    case 15: // $return
      var $35=$retval;
      ;
      return $35;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflateInit2_["X"]=1;

function _inflateInit_($strm, $version, $stream_size) {
  ;
  var __label__;

  var $strm_addr;
  var $version_addr;
  var $stream_size_addr;
  $strm_addr=$strm;
  $version_addr=$version;
  $stream_size_addr=$stream_size;
  var $0=$strm_addr;
  var $1=$version_addr;
  var $2=$stream_size_addr;
  var $call=_inflateInit2_($0, 15, $1, $2);
  ;
  return $call;
}


function _inflate($strm, $flush) {
  var __stackBase__  = STACKTOP; STACKTOP += 12; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $flush_addr;
      var $state;
      var $next;
      var $put;
      var $have;
      var $left;
      var $hold;
      var $bits;
      var $in;
      var $out;
      var $copy;
      var $from;
      var $here=__stackBase__;
      var $last=__stackBase__+4;
      var $len;
      var $ret;
      var $hbuf=__stackBase__+8;
      $strm_addr=$strm;
      $flush_addr=$flush;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 5; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state1=(($1+28)|0);
      var $2=HEAP32[(($state1)>>2)];
      var $cmp2=(($2)|0)==0;
      if ($cmp2) { __label__ = 5; break; } else { __label__ = 2; break; }
    case 2: // $lor_lhs_false3
      var $3=$strm_addr;
      var $next_out=(($3+12)|0);
      var $4=HEAP32[(($next_out)>>2)];
      var $cmp4=(($4)|0)==0;
      if ($cmp4) { __label__ = 5; break; } else { __label__ = 3; break; }
    case 3: // $lor_lhs_false5
      var $5=$strm_addr;
      var $next_in=(($5)|0);
      var $6=HEAP32[(($next_in)>>2)];
      var $cmp6=(($6)|0)==0;
      if ($cmp6) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $land_lhs_true
      var $7=$strm_addr;
      var $avail_in=(($7+4)|0);
      var $8=HEAP32[(($avail_in)>>2)];
      var $cmp7=(($8)|0)!=0;
      if ($cmp7) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then
      $retval=-2;
      __label__ = 595; break;
    case 6: // $if_end
      var $9=$strm_addr;
      var $state8=(($9+28)|0);
      var $10=HEAP32[(($state8)>>2)];
      var $11=$10;
      $state=$11;
      var $12=$state;
      var $mode=(($12)|0);
      var $13=HEAP32[(($mode)>>2)];
      var $cmp9=(($13)|0)==11;
      if ($cmp9) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then10
      var $14=$state;
      var $mode11=(($14)|0);
      HEAP32[(($mode11)>>2)]=12;
      __label__ = 8; break;
    case 8: // $if_end12
      __label__ = 9; break;
    case 9: // $do_body
      var $15=$strm_addr;
      var $next_out13=(($15+12)|0);
      var $16=HEAP32[(($next_out13)>>2)];
      $put=$16;
      var $17=$strm_addr;
      var $avail_out=(($17+16)|0);
      var $18=HEAP32[(($avail_out)>>2)];
      $left=$18;
      var $19=$strm_addr;
      var $next_in14=(($19)|0);
      var $20=HEAP32[(($next_in14)>>2)];
      $next=$20;
      var $21=$strm_addr;
      var $avail_in15=(($21+4)|0);
      var $22=HEAP32[(($avail_in15)>>2)];
      $have=$22;
      var $23=$state;
      var $hold16=(($23+56)|0);
      var $24=HEAP32[(($hold16)>>2)];
      $hold=$24;
      var $25=$state;
      var $bits17=(($25+60)|0);
      var $26=HEAP32[(($bits17)>>2)];
      $bits=$26;
      __label__ = 10; break;
    case 10: // $do_end
      var $27=$have;
      $in=$27;
      var $28=$left;
      $out=$28;
      $ret=0;
      __label__ = 11; break;
    case 11: // $for_cond
      var $29=$state;
      var $mode18=(($29)|0);
      var $30=HEAP32[(($mode18)>>2)];
      if ($30 == 0) {
        __label__ = 12; break;
      }
      else if ($30 == 1) {
        __label__ = 47; break;
      }
      else if ($30 == 2) {
        __label__ = 69; break;
      }
      else if ($30 == 3) {
        __label__ = 87; break;
      }
      else if ($30 == 4) {
        __label__ = 105; break;
      }
      else if ($30 == 5) {
        __label__ = 128; break;
      }
      else if ($30 == 6) {
        __label__ = 145; break;
      }
      else if ($30 == 7) {
        __label__ = 166; break;
      }
      else if ($30 == 8) {
        __label__ = 187; break;
      }
      else if ($30 == 9) {
        __label__ = 205; break;
      }
      else if ($30 == 10) {
        __label__ = 217; break;
      }
      else if ($30 == 11) {
        __label__ = 222; break;
      }
      else if ($30 == 12) {
        __label__ = 226; break;
      }
      else if ($30 == 13) {
        __label__ = 253; break;
      }
      else if ($30 == 14) {
        __label__ = 271; break;
      }
      else if ($30 == 15) {
        __label__ = 272; break;
      }
      else if ($30 == 16) {
        __label__ = 281; break;
      }
      else if ($30 == 17) {
        __label__ = 300; break;
      }
      else if ($30 == 18) {
        __label__ = 320; break;
      }
      else if ($30 == 19) {
        __label__ = 408; break;
      }
      else if ($30 == 20) {
        __label__ = 409; break;
      }
      else if ($30 == 21) {
        __label__ = 448; break;
      }
      else if ($30 == 22) {
        __label__ = 462; break;
      }
      else if ($30 == 23) {
        __label__ = 487; break;
      }
      else if ($30 == 24) {
        __label__ = 501; break;
      }
      else if ($30 == 25) {
        __label__ = 523; break;
      }
      else if ($30 == 26) {
        __label__ = 526; break;
      }
      else if ($30 == 27) {
        __label__ = 550; break;
      }
      else if ($30 == 28) {
        __label__ = 567; break;
      }
      else if ($30 == 29) {
        __label__ = 568; break;
      }
      else if ($30 == 30) {
        __label__ = 569; break;
      }
      else if ($30 == 31) {
        __label__ = 570; break;
      }
      else {
      __label__ = 571; break;
      }
      
    case 12: // $sw_bb
      var $31=$state;
      var $wrap=(($31+8)|0);
      var $32=HEAP32[(($wrap)>>2)];
      var $cmp19=(($32)|0)==0;
      if ($cmp19) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then20
      var $33=$state;
      var $mode21=(($33)|0);
      HEAP32[(($mode21)>>2)]=12;
      __label__ = 572; break;
    case 14: // $if_end22
      __label__ = 15; break;
    case 15: // $do_body23
      __label__ = 16; break;
    case 16: // $while_cond
      var $34=$bits;
      var $cmp24=(($34)>>>0) < 16;
      if ($cmp24) { __label__ = 17; break; } else { __label__ = 22; break; }
    case 17: // $while_body
      __label__ = 18; break;
    case 18: // $do_body25
      var $35=$have;
      var $cmp26=(($35)|0)==0;
      if ($cmp26) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $if_then27
      __label__ = 573; break;
    case 20: // $if_end28
      var $36=$have;
      var $dec=(($36-1)|0);
      $have=$dec;
      var $37=$next;
      var $incdec_ptr=(($37+1)|0);
      $next=$incdec_ptr;
      var $38=HEAPU8[($37)];
      var $conv=(($38)&255);
      var $39=$bits;
      var $shl=$conv << $39;
      var $40=$hold;
      var $add=(($40+$shl)|0);
      $hold=$add;
      var $41=$bits;
      var $add29=(($41+8)|0);
      $bits=$add29;
      __label__ = 21; break;
    case 21: // $do_end30
      __label__ = 16; break;
    case 22: // $while_end
      __label__ = 23; break;
    case 23: // $do_end31
      var $42=$state;
      var $wrap32=(($42+8)|0);
      var $43=HEAP32[(($wrap32)>>2)];
      var $and=$43 & 2;
      var $tobool=(($and)|0)!=0;
      if ($tobool) { __label__ = 24; break; } else { __label__ = 30; break; }
    case 24: // $land_lhs_true33
      var $44=$hold;
      var $cmp34=(($44)|0)==35615;
      if ($cmp34) { __label__ = 25; break; } else { __label__ = 30; break; }
    case 25: // $if_then36
      var $call=_crc32(0, 0, 0);
      var $45=$state;
      var $check=(($45+24)|0);
      HEAP32[(($check)>>2)]=$call;
      __label__ = 26; break;
    case 26: // $do_body37
      var $46=$hold;
      var $conv38=(($46) & 255);
      var $arrayidx=(($hbuf)|0);
      HEAP8[($arrayidx)]=$conv38;
      var $47=$hold;
      var $shr=$47 >>> 8;
      var $conv39=(($shr) & 255);
      var $arrayidx40=(($hbuf+1)|0);
      HEAP8[($arrayidx40)]=$conv39;
      var $48=$state;
      var $check41=(($48+24)|0);
      var $49=HEAP32[(($check41)>>2)];
      var $arraydecay=(($hbuf)|0);
      var $call42=_crc32($49, $arraydecay, 2);
      var $50=$state;
      var $check43=(($50+24)|0);
      HEAP32[(($check43)>>2)]=$call42;
      __label__ = 27; break;
    case 27: // $do_end44
      __label__ = 28; break;
    case 28: // $do_body45
      $hold=0;
      $bits=0;
      __label__ = 29; break;
    case 29: // $do_end46
      var $51=$state;
      var $mode47=(($51)|0);
      HEAP32[(($mode47)>>2)]=1;
      __label__ = 572; break;
    case 30: // $if_end48
      var $52=$state;
      var $flags=(($52+16)|0);
      HEAP32[(($flags)>>2)]=0;
      var $53=$state;
      var $head=(($53+32)|0);
      var $54=HEAP32[(($head)>>2)];
      var $cmp49=(($54)|0)!=0;
      if ($cmp49) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $if_then51
      var $55=$state;
      var $head52=(($55+32)|0);
      var $56=HEAP32[(($head52)>>2)];
      var $done=(($56+48)|0);
      HEAP32[(($done)>>2)]=-1;
      __label__ = 32; break;
    case 32: // $if_end53
      var $57=$state;
      var $wrap54=(($57+8)|0);
      var $58=HEAP32[(($wrap54)>>2)];
      var $and55=$58 & 1;
      var $tobool56=(($and55)|0)!=0;
      if ($tobool56) { __label__ = 33; break; } else { __label__ = 34; break; }
    case 33: // $lor_lhs_false57
      var $59=$hold;
      var $and58=$59 & 255;
      var $shl59=$and58 << 8;
      var $60=$hold;
      var $shr60=$60 >>> 8;
      var $add61=(($shl59+$shr60)|0);
      var $rem=(($add61)>>>0)%31;
      var $tobool62=(($rem)|0)!=0;
      if ($tobool62) { __label__ = 34; break; } else { __label__ = 35; break; }
    case 34: // $if_then63
      var $61=$strm_addr;
      var $msg=(($61+24)|0);
      HEAP32[(($msg)>>2)]=((STRING_TABLE.__str115)|0);
      var $62=$state;
      var $mode64=(($62)|0);
      HEAP32[(($mode64)>>2)]=29;
      __label__ = 572; break;
    case 35: // $if_end65
      var $63=$hold;
      var $and66=$63 & 15;
      var $cmp67=(($and66)|0)!=8;
      if ($cmp67) { __label__ = 36; break; } else { __label__ = 37; break; }
    case 36: // $if_then69
      var $64=$strm_addr;
      var $msg70=(($64+24)|0);
      HEAP32[(($msg70)>>2)]=((STRING_TABLE.__str216)|0);
      var $65=$state;
      var $mode71=(($65)|0);
      HEAP32[(($mode71)>>2)]=29;
      __label__ = 572; break;
    case 37: // $if_end72
      __label__ = 38; break;
    case 38: // $do_body73
      var $66=$hold;
      var $shr74=$66 >>> 4;
      $hold=$shr74;
      var $67=$bits;
      var $sub=(($67-4)|0);
      $bits=$sub;
      __label__ = 39; break;
    case 39: // $do_end75
      var $68=$hold;
      var $and76=$68 & 15;
      var $add77=(($and76+8)|0);
      $len=$add77;
      var $69=$state;
      var $wbits=(($69+36)|0);
      var $70=HEAP32[(($wbits)>>2)];
      var $cmp78=(($70)|0)==0;
      if ($cmp78) { __label__ = 40; break; } else { __label__ = 41; break; }
    case 40: // $if_then80
      var $71=$len;
      var $72=$state;
      var $wbits81=(($72+36)|0);
      HEAP32[(($wbits81)>>2)]=$71;
      __label__ = 44; break;
    case 41: // $if_else
      var $73=$len;
      var $74=$state;
      var $wbits82=(($74+36)|0);
      var $75=HEAPU32[(($wbits82)>>2)];
      var $cmp83=(($73)>>>0) > (($75)>>>0);
      if ($cmp83) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: // $if_then85
      var $76=$strm_addr;
      var $msg86=(($76+24)|0);
      HEAP32[(($msg86)>>2)]=((STRING_TABLE.__str317)|0);
      var $77=$state;
      var $mode87=(($77)|0);
      HEAP32[(($mode87)>>2)]=29;
      __label__ = 572; break;
    case 43: // $if_end88
      __label__ = 44; break;
    case 44: // $if_end89
      var $78=$len;
      var $shl90=1 << $78;
      var $79=$state;
      var $dmax=(($79+20)|0);
      HEAP32[(($dmax)>>2)]=$shl90;
      var $call91=_adler32(0, 0, 0);
      var $80=$state;
      var $check92=(($80+24)|0);
      HEAP32[(($check92)>>2)]=$call91;
      var $81=$strm_addr;
      var $adler=(($81+48)|0);
      HEAP32[(($adler)>>2)]=$call91;
      var $82=$hold;
      var $and93=$82 & 512;
      var $tobool94=(($and93)|0)!=0;
      var $cond=$tobool94 ? 9 : 11;
      var $83=$state;
      var $mode95=(($83)|0);
      HEAP32[(($mode95)>>2)]=$cond;
      __label__ = 45; break;
    case 45: // $do_body96
      $hold=0;
      $bits=0;
      __label__ = 46; break;
    case 46: // $do_end97
      __label__ = 572; break;
    case 47: // $sw_bb98
      __label__ = 48; break;
    case 48: // $do_body99
      __label__ = 49; break;
    case 49: // $while_cond100
      var $84=$bits;
      var $cmp101=(($84)>>>0) < 16;
      if ($cmp101) { __label__ = 50; break; } else { __label__ = 55; break; }
    case 50: // $while_body103
      __label__ = 51; break;
    case 51: // $do_body104
      var $85=$have;
      var $cmp105=(($85)|0)==0;
      if ($cmp105) { __label__ = 52; break; } else { __label__ = 53; break; }
    case 52: // $if_then107
      __label__ = 573; break;
    case 53: // $if_end108
      var $86=$have;
      var $dec109=(($86-1)|0);
      $have=$dec109;
      var $87=$next;
      var $incdec_ptr110=(($87+1)|0);
      $next=$incdec_ptr110;
      var $88=HEAPU8[($87)];
      var $conv111=(($88)&255);
      var $89=$bits;
      var $shl112=$conv111 << $89;
      var $90=$hold;
      var $add113=(($90+$shl112)|0);
      $hold=$add113;
      var $91=$bits;
      var $add114=(($91+8)|0);
      $bits=$add114;
      __label__ = 54; break;
    case 54: // $do_end115
      __label__ = 49; break;
    case 55: // $while_end116
      __label__ = 56; break;
    case 56: // $do_end117
      var $92=$hold;
      var $93=$state;
      var $flags118=(($93+16)|0);
      HEAP32[(($flags118)>>2)]=$92;
      var $94=$state;
      var $flags119=(($94+16)|0);
      var $95=HEAP32[(($flags119)>>2)];
      var $and120=$95 & 255;
      var $cmp121=(($and120)|0)!=8;
      if ($cmp121) { __label__ = 57; break; } else { __label__ = 58; break; }
    case 57: // $if_then123
      var $96=$strm_addr;
      var $msg124=(($96+24)|0);
      HEAP32[(($msg124)>>2)]=((STRING_TABLE.__str216)|0);
      var $97=$state;
      var $mode125=(($97)|0);
      HEAP32[(($mode125)>>2)]=29;
      __label__ = 572; break;
    case 58: // $if_end126
      var $98=$state;
      var $flags127=(($98+16)|0);
      var $99=HEAP32[(($flags127)>>2)];
      var $and128=$99 & 57344;
      var $tobool129=(($and128)|0)!=0;
      if ($tobool129) { __label__ = 59; break; } else { __label__ = 60; break; }
    case 59: // $if_then130
      var $100=$strm_addr;
      var $msg131=(($100+24)|0);
      HEAP32[(($msg131)>>2)]=((STRING_TABLE.__str418)|0);
      var $101=$state;
      var $mode132=(($101)|0);
      HEAP32[(($mode132)>>2)]=29;
      __label__ = 572; break;
    case 60: // $if_end133
      var $102=$state;
      var $head134=(($102+32)|0);
      var $103=HEAP32[(($head134)>>2)];
      var $cmp135=(($103)|0)!=0;
      if ($cmp135) { __label__ = 61; break; } else { __label__ = 62; break; }
    case 61: // $if_then137
      var $104=$hold;
      var $shr138=$104 >>> 8;
      var $and139=$shr138 & 1;
      var $105=$state;
      var $head140=(($105+32)|0);
      var $106=HEAP32[(($head140)>>2)];
      var $text=(($106)|0);
      HEAP32[(($text)>>2)]=$and139;
      __label__ = 62; break;
    case 62: // $if_end141
      var $107=$state;
      var $flags142=(($107+16)|0);
      var $108=HEAP32[(($flags142)>>2)];
      var $and143=$108 & 512;
      var $tobool144=(($and143)|0)!=0;
      if ($tobool144) { __label__ = 63; break; } else { __label__ = 66; break; }
    case 63: // $if_then145
      __label__ = 64; break;
    case 64: // $do_body146
      var $109=$hold;
      var $conv147=(($109) & 255);
      var $arrayidx148=(($hbuf)|0);
      HEAP8[($arrayidx148)]=$conv147;
      var $110=$hold;
      var $shr149=$110 >>> 8;
      var $conv150=(($shr149) & 255);
      var $arrayidx151=(($hbuf+1)|0);
      HEAP8[($arrayidx151)]=$conv150;
      var $111=$state;
      var $check152=(($111+24)|0);
      var $112=HEAP32[(($check152)>>2)];
      var $arraydecay153=(($hbuf)|0);
      var $call154=_crc32($112, $arraydecay153, 2);
      var $113=$state;
      var $check155=(($113+24)|0);
      HEAP32[(($check155)>>2)]=$call154;
      __label__ = 65; break;
    case 65: // $do_end156
      __label__ = 66; break;
    case 66: // $if_end157
      __label__ = 67; break;
    case 67: // $do_body158
      $hold=0;
      $bits=0;
      __label__ = 68; break;
    case 68: // $do_end159
      var $114=$state;
      var $mode160=(($114)|0);
      HEAP32[(($mode160)>>2)]=2;
      __label__ = 69; break;
    case 69: // $sw_bb161
      __label__ = 70; break;
    case 70: // $do_body162
      __label__ = 71; break;
    case 71: // $while_cond163
      var $115=$bits;
      var $cmp164=(($115)>>>0) < 32;
      if ($cmp164) { __label__ = 72; break; } else { __label__ = 77; break; }
    case 72: // $while_body166
      __label__ = 73; break;
    case 73: // $do_body167
      var $116=$have;
      var $cmp168=(($116)|0)==0;
      if ($cmp168) { __label__ = 74; break; } else { __label__ = 75; break; }
    case 74: // $if_then170
      __label__ = 573; break;
    case 75: // $if_end171
      var $117=$have;
      var $dec172=(($117-1)|0);
      $have=$dec172;
      var $118=$next;
      var $incdec_ptr173=(($118+1)|0);
      $next=$incdec_ptr173;
      var $119=HEAPU8[($118)];
      var $conv174=(($119)&255);
      var $120=$bits;
      var $shl175=$conv174 << $120;
      var $121=$hold;
      var $add176=(($121+$shl175)|0);
      $hold=$add176;
      var $122=$bits;
      var $add177=(($122+8)|0);
      $bits=$add177;
      __label__ = 76; break;
    case 76: // $do_end178
      __label__ = 71; break;
    case 77: // $while_end179
      __label__ = 78; break;
    case 78: // $do_end180
      var $123=$state;
      var $head181=(($123+32)|0);
      var $124=HEAP32[(($head181)>>2)];
      var $cmp182=(($124)|0)!=0;
      if ($cmp182) { __label__ = 79; break; } else { __label__ = 80; break; }
    case 79: // $if_then184
      var $125=$hold;
      var $126=$state;
      var $head185=(($126+32)|0);
      var $127=HEAP32[(($head185)>>2)];
      var $time=(($127+4)|0);
      HEAP32[(($time)>>2)]=$125;
      __label__ = 80; break;
    case 80: // $if_end186
      var $128=$state;
      var $flags187=(($128+16)|0);
      var $129=HEAP32[(($flags187)>>2)];
      var $and188=$129 & 512;
      var $tobool189=(($and188)|0)!=0;
      if ($tobool189) { __label__ = 81; break; } else { __label__ = 84; break; }
    case 81: // $if_then190
      __label__ = 82; break;
    case 82: // $do_body191
      var $130=$hold;
      var $conv192=(($130) & 255);
      var $arrayidx193=(($hbuf)|0);
      HEAP8[($arrayidx193)]=$conv192;
      var $131=$hold;
      var $shr194=$131 >>> 8;
      var $conv195=(($shr194) & 255);
      var $arrayidx196=(($hbuf+1)|0);
      HEAP8[($arrayidx196)]=$conv195;
      var $132=$hold;
      var $shr197=$132 >>> 16;
      var $conv198=(($shr197) & 255);
      var $arrayidx199=(($hbuf+2)|0);
      HEAP8[($arrayidx199)]=$conv198;
      var $133=$hold;
      var $shr200=$133 >>> 24;
      var $conv201=(($shr200) & 255);
      var $arrayidx202=(($hbuf+3)|0);
      HEAP8[($arrayidx202)]=$conv201;
      var $134=$state;
      var $check203=(($134+24)|0);
      var $135=HEAP32[(($check203)>>2)];
      var $arraydecay204=(($hbuf)|0);
      var $call205=_crc32($135, $arraydecay204, 4);
      var $136=$state;
      var $check206=(($136+24)|0);
      HEAP32[(($check206)>>2)]=$call205;
      __label__ = 83; break;
    case 83: // $do_end207
      __label__ = 84; break;
    case 84: // $if_end208
      __label__ = 85; break;
    case 85: // $do_body209
      $hold=0;
      $bits=0;
      __label__ = 86; break;
    case 86: // $do_end210
      var $137=$state;
      var $mode211=(($137)|0);
      HEAP32[(($mode211)>>2)]=3;
      __label__ = 87; break;
    case 87: // $sw_bb212
      __label__ = 88; break;
    case 88: // $do_body213
      __label__ = 89; break;
    case 89: // $while_cond214
      var $138=$bits;
      var $cmp215=(($138)>>>0) < 16;
      if ($cmp215) { __label__ = 90; break; } else { __label__ = 95; break; }
    case 90: // $while_body217
      __label__ = 91; break;
    case 91: // $do_body218
      var $139=$have;
      var $cmp219=(($139)|0)==0;
      if ($cmp219) { __label__ = 92; break; } else { __label__ = 93; break; }
    case 92: // $if_then221
      __label__ = 573; break;
    case 93: // $if_end222
      var $140=$have;
      var $dec223=(($140-1)|0);
      $have=$dec223;
      var $141=$next;
      var $incdec_ptr224=(($141+1)|0);
      $next=$incdec_ptr224;
      var $142=HEAPU8[($141)];
      var $conv225=(($142)&255);
      var $143=$bits;
      var $shl226=$conv225 << $143;
      var $144=$hold;
      var $add227=(($144+$shl226)|0);
      $hold=$add227;
      var $145=$bits;
      var $add228=(($145+8)|0);
      $bits=$add228;
      __label__ = 94; break;
    case 94: // $do_end229
      __label__ = 89; break;
    case 95: // $while_end230
      __label__ = 96; break;
    case 96: // $do_end231
      var $146=$state;
      var $head232=(($146+32)|0);
      var $147=HEAP32[(($head232)>>2)];
      var $cmp233=(($147)|0)!=0;
      if ($cmp233) { __label__ = 97; break; } else { __label__ = 98; break; }
    case 97: // $if_then235
      var $148=$hold;
      var $and236=$148 & 255;
      var $149=$state;
      var $head237=(($149+32)|0);
      var $150=HEAP32[(($head237)>>2)];
      var $xflags=(($150+8)|0);
      HEAP32[(($xflags)>>2)]=$and236;
      var $151=$hold;
      var $shr238=$151 >>> 8;
      var $152=$state;
      var $head239=(($152+32)|0);
      var $153=HEAP32[(($head239)>>2)];
      var $os=(($153+12)|0);
      HEAP32[(($os)>>2)]=$shr238;
      __label__ = 98; break;
    case 98: // $if_end240
      var $154=$state;
      var $flags241=(($154+16)|0);
      var $155=HEAP32[(($flags241)>>2)];
      var $and242=$155 & 512;
      var $tobool243=(($and242)|0)!=0;
      if ($tobool243) { __label__ = 99; break; } else { __label__ = 102; break; }
    case 99: // $if_then244
      __label__ = 100; break;
    case 100: // $do_body245
      var $156=$hold;
      var $conv246=(($156) & 255);
      var $arrayidx247=(($hbuf)|0);
      HEAP8[($arrayidx247)]=$conv246;
      var $157=$hold;
      var $shr248=$157 >>> 8;
      var $conv249=(($shr248) & 255);
      var $arrayidx250=(($hbuf+1)|0);
      HEAP8[($arrayidx250)]=$conv249;
      var $158=$state;
      var $check251=(($158+24)|0);
      var $159=HEAP32[(($check251)>>2)];
      var $arraydecay252=(($hbuf)|0);
      var $call253=_crc32($159, $arraydecay252, 2);
      var $160=$state;
      var $check254=(($160+24)|0);
      HEAP32[(($check254)>>2)]=$call253;
      __label__ = 101; break;
    case 101: // $do_end255
      __label__ = 102; break;
    case 102: // $if_end256
      __label__ = 103; break;
    case 103: // $do_body257
      $hold=0;
      $bits=0;
      __label__ = 104; break;
    case 104: // $do_end258
      var $161=$state;
      var $mode259=(($161)|0);
      HEAP32[(($mode259)>>2)]=4;
      __label__ = 105; break;
    case 105: // $sw_bb260
      var $162=$state;
      var $flags261=(($162+16)|0);
      var $163=HEAP32[(($flags261)>>2)];
      var $and262=$163 & 1024;
      var $tobool263=(($and262)|0)!=0;
      if ($tobool263) { __label__ = 106; break; } else { __label__ = 124; break; }
    case 106: // $if_then264
      __label__ = 107; break;
    case 107: // $do_body265
      __label__ = 108; break;
    case 108: // $while_cond266
      var $164=$bits;
      var $cmp267=(($164)>>>0) < 16;
      if ($cmp267) { __label__ = 109; break; } else { __label__ = 114; break; }
    case 109: // $while_body269
      __label__ = 110; break;
    case 110: // $do_body270
      var $165=$have;
      var $cmp271=(($165)|0)==0;
      if ($cmp271) { __label__ = 111; break; } else { __label__ = 112; break; }
    case 111: // $if_then273
      __label__ = 573; break;
    case 112: // $if_end274
      var $166=$have;
      var $dec275=(($166-1)|0);
      $have=$dec275;
      var $167=$next;
      var $incdec_ptr276=(($167+1)|0);
      $next=$incdec_ptr276;
      var $168=HEAPU8[($167)];
      var $conv277=(($168)&255);
      var $169=$bits;
      var $shl278=$conv277 << $169;
      var $170=$hold;
      var $add279=(($170+$shl278)|0);
      $hold=$add279;
      var $171=$bits;
      var $add280=(($171+8)|0);
      $bits=$add280;
      __label__ = 113; break;
    case 113: // $do_end281
      __label__ = 108; break;
    case 114: // $while_end282
      __label__ = 115; break;
    case 115: // $do_end283
      var $172=$hold;
      var $173=$state;
      var $length=(($173+64)|0);
      HEAP32[(($length)>>2)]=$172;
      var $174=$state;
      var $head284=(($174+32)|0);
      var $175=HEAP32[(($head284)>>2)];
      var $cmp285=(($175)|0)!=0;
      if ($cmp285) { __label__ = 116; break; } else { __label__ = 117; break; }
    case 116: // $if_then287
      var $176=$hold;
      var $177=$state;
      var $head288=(($177+32)|0);
      var $178=HEAP32[(($head288)>>2)];
      var $extra_len=(($178+20)|0);
      HEAP32[(($extra_len)>>2)]=$176;
      __label__ = 117; break;
    case 117: // $if_end289
      var $179=$state;
      var $flags290=(($179+16)|0);
      var $180=HEAP32[(($flags290)>>2)];
      var $and291=$180 & 512;
      var $tobool292=(($and291)|0)!=0;
      if ($tobool292) { __label__ = 118; break; } else { __label__ = 121; break; }
    case 118: // $if_then293
      __label__ = 119; break;
    case 119: // $do_body294
      var $181=$hold;
      var $conv295=(($181) & 255);
      var $arrayidx296=(($hbuf)|0);
      HEAP8[($arrayidx296)]=$conv295;
      var $182=$hold;
      var $shr297=$182 >>> 8;
      var $conv298=(($shr297) & 255);
      var $arrayidx299=(($hbuf+1)|0);
      HEAP8[($arrayidx299)]=$conv298;
      var $183=$state;
      var $check300=(($183+24)|0);
      var $184=HEAP32[(($check300)>>2)];
      var $arraydecay301=(($hbuf)|0);
      var $call302=_crc32($184, $arraydecay301, 2);
      var $185=$state;
      var $check303=(($185+24)|0);
      HEAP32[(($check303)>>2)]=$call302;
      __label__ = 120; break;
    case 120: // $do_end304
      __label__ = 121; break;
    case 121: // $if_end305
      __label__ = 122; break;
    case 122: // $do_body306
      $hold=0;
      $bits=0;
      __label__ = 123; break;
    case 123: // $do_end307
      __label__ = 127; break;
    case 124: // $if_else308
      var $186=$state;
      var $head309=(($186+32)|0);
      var $187=HEAP32[(($head309)>>2)];
      var $cmp310=(($187)|0)!=0;
      if ($cmp310) { __label__ = 125; break; } else { __label__ = 126; break; }
    case 125: // $if_then312
      var $188=$state;
      var $head313=(($188+32)|0);
      var $189=HEAP32[(($head313)>>2)];
      var $extra=(($189+16)|0);
      HEAP32[(($extra)>>2)]=0;
      __label__ = 126; break;
    case 126: // $if_end314
      __label__ = 127; break;
    case 127: // $if_end315
      var $190=$state;
      var $mode316=(($190)|0);
      HEAP32[(($mode316)>>2)]=5;
      __label__ = 128; break;
    case 128: // $sw_bb317
      var $191=$state;
      var $flags318=(($191+16)|0);
      var $192=HEAP32[(($flags318)>>2)];
      var $and319=$192 & 1024;
      var $tobool320=(($and319)|0)!=0;
      if ($tobool320) { __label__ = 129; break; } else { __label__ = 144; break; }
    case 129: // $if_then321
      var $193=$state;
      var $length322=(($193+64)|0);
      var $194=HEAP32[(($length322)>>2)];
      $copy=$194;
      var $195=$copy;
      var $196=$have;
      var $cmp323=(($195)>>>0) > (($196)>>>0);
      if ($cmp323) { __label__ = 130; break; } else { __label__ = 131; break; }
    case 130: // $if_then325
      var $197=$have;
      $copy=$197;
      __label__ = 131; break;
    case 131: // $if_end326
      var $198=$copy;
      var $tobool327=(($198)|0)!=0;
      if ($tobool327) { __label__ = 132; break; } else { __label__ = 141; break; }
    case 132: // $if_then328
      var $199=$state;
      var $head329=(($199+32)|0);
      var $200=HEAP32[(($head329)>>2)];
      var $cmp330=(($200)|0)!=0;
      if ($cmp330) { __label__ = 133; break; } else { __label__ = 138; break; }
    case 133: // $land_lhs_true332
      var $201=$state;
      var $head333=(($201+32)|0);
      var $202=HEAP32[(($head333)>>2)];
      var $extra334=(($202+16)|0);
      var $203=HEAP32[(($extra334)>>2)];
      var $cmp335=(($203)|0)!=0;
      if ($cmp335) { __label__ = 134; break; } else { __label__ = 138; break; }
    case 134: // $if_then337
      var $204=$state;
      var $head338=(($204+32)|0);
      var $205=HEAP32[(($head338)>>2)];
      var $extra_len339=(($205+20)|0);
      var $206=HEAP32[(($extra_len339)>>2)];
      var $207=$state;
      var $length340=(($207+64)|0);
      var $208=HEAP32[(($length340)>>2)];
      var $sub341=(($206-$208)|0);
      $len=$sub341;
      var $209=$state;
      var $head342=(($209+32)|0);
      var $210=HEAP32[(($head342)>>2)];
      var $extra343=(($210+16)|0);
      var $211=HEAP32[(($extra343)>>2)];
      var $212=$len;
      var $add_ptr=(($211+$212)|0);
      var $213=$next;
      var $214=$len;
      var $215=$copy;
      var $add344=(($214+$215)|0);
      var $216=$state;
      var $head345=(($216+32)|0);
      var $217=HEAP32[(($head345)>>2)];
      var $extra_max=(($217+24)|0);
      var $218=HEAPU32[(($extra_max)>>2)];
      var $cmp346=(($add344)>>>0) > (($218)>>>0);
      if ($cmp346) { __label__ = 135; break; } else { __label__ = 136; break; }
    case 135: // $cond_true
      var $219=$state;
      var $head348=(($219+32)|0);
      var $220=HEAP32[(($head348)>>2)];
      var $extra_max349=(($220+24)|0);
      var $221=HEAP32[(($extra_max349)>>2)];
      var $222=$len;
      var $sub350=(($221-$222)|0);
      var $cond351 = $sub350;__label__ = 137; break;
    case 136: // $cond_false
      var $223=$copy;
      var $cond351 = $223;__label__ = 137; break;
    case 137: // $cond_end
      var $cond351;
      assert($cond351 % 1 === 0, 'memcpy given ' + $cond351 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($add_ptr, $213, $cond351, 1);
      __label__ = 138; break;
    case 138: // $if_end352
      var $224=$state;
      var $flags353=(($224+16)|0);
      var $225=HEAP32[(($flags353)>>2)];
      var $and354=$225 & 512;
      var $tobool355=(($and354)|0)!=0;
      if ($tobool355) { __label__ = 139; break; } else { __label__ = 140; break; }
    case 139: // $if_then356
      var $226=$state;
      var $check357=(($226+24)|0);
      var $227=HEAP32[(($check357)>>2)];
      var $228=$next;
      var $229=$copy;
      var $call358=_crc32($227, $228, $229);
      var $230=$state;
      var $check359=(($230+24)|0);
      HEAP32[(($check359)>>2)]=$call358;
      __label__ = 140; break;
    case 140: // $if_end360
      var $231=$copy;
      var $232=$have;
      var $sub361=(($232-$231)|0);
      $have=$sub361;
      var $233=$copy;
      var $234=$next;
      var $add_ptr362=(($234+$233)|0);
      $next=$add_ptr362;
      var $235=$copy;
      var $236=$state;
      var $length363=(($236+64)|0);
      var $237=HEAP32[(($length363)>>2)];
      var $sub364=(($237-$235)|0);
      HEAP32[(($length363)>>2)]=$sub364;
      __label__ = 141; break;
    case 141: // $if_end365
      var $238=$state;
      var $length366=(($238+64)|0);
      var $239=HEAP32[(($length366)>>2)];
      var $tobool367=(($239)|0)!=0;
      if ($tobool367) { __label__ = 142; break; } else { __label__ = 143; break; }
    case 142: // $if_then368
      __label__ = 573; break;
    case 143: // $if_end369
      __label__ = 144; break;
    case 144: // $if_end370
      var $240=$state;
      var $length371=(($240+64)|0);
      HEAP32[(($length371)>>2)]=0;
      var $241=$state;
      var $mode372=(($241)|0);
      HEAP32[(($mode372)>>2)]=6;
      __label__ = 145; break;
    case 145: // $sw_bb373
      var $242=$state;
      var $flags374=(($242+16)|0);
      var $243=HEAP32[(($flags374)>>2)];
      var $and375=$243 & 2048;
      var $tobool376=(($and375)|0)!=0;
      if ($tobool376) { __label__ = 146; break; } else { __label__ = 162; break; }
    case 146: // $if_then377
      var $244=$have;
      var $cmp378=(($244)|0)==0;
      if ($cmp378) { __label__ = 147; break; } else { __label__ = 148; break; }
    case 147: // $if_then380
      __label__ = 573; break;
    case 148: // $if_end381
      $copy=0;
      __label__ = 149; break;
    case 149: // $do_body382
      var $245=$copy;
      var $inc=(($245+1)|0);
      $copy=$inc;
      var $246=$next;
      var $arrayidx383=(($246+$245)|0);
      var $247=HEAPU8[($arrayidx383)];
      var $conv384=(($247)&255);
      $len=$conv384;
      var $248=$state;
      var $head385=(($248+32)|0);
      var $249=HEAP32[(($head385)>>2)];
      var $cmp386=(($249)|0)!=0;
      if ($cmp386) { __label__ = 150; break; } else { __label__ = 153; break; }
    case 150: // $land_lhs_true388
      var $250=$state;
      var $head389=(($250+32)|0);
      var $251=HEAP32[(($head389)>>2)];
      var $name=(($251+28)|0);
      var $252=HEAP32[(($name)>>2)];
      var $cmp390=(($252)|0)!=0;
      if ($cmp390) { __label__ = 151; break; } else { __label__ = 153; break; }
    case 151: // $land_lhs_true392
      var $253=$state;
      var $length393=(($253+64)|0);
      var $254=HEAPU32[(($length393)>>2)];
      var $255=$state;
      var $head394=(($255+32)|0);
      var $256=HEAP32[(($head394)>>2)];
      var $name_max=(($256+32)|0);
      var $257=HEAPU32[(($name_max)>>2)];
      var $cmp395=(($254)>>>0) < (($257)>>>0);
      if ($cmp395) { __label__ = 152; break; } else { __label__ = 153; break; }
    case 152: // $if_then397
      var $258=$len;
      var $conv398=(($258) & 255);
      var $259=$state;
      var $length399=(($259+64)|0);
      var $260=HEAPU32[(($length399)>>2)];
      var $inc400=(($260+1)|0);
      HEAP32[(($length399)>>2)]=$inc400;
      var $261=$state;
      var $head401=(($261+32)|0);
      var $262=HEAP32[(($head401)>>2)];
      var $name402=(($262+28)|0);
      var $263=HEAP32[(($name402)>>2)];
      var $arrayidx403=(($263+$260)|0);
      HEAP8[($arrayidx403)]=$conv398;
      __label__ = 153; break;
    case 153: // $if_end404
      __label__ = 154; break;
    case 154: // $do_cond
      var $264=$len;
      var $tobool405=(($264)|0)!=0;
      if ($tobool405) { __label__ = 155; break; } else { var $267 = 0;__label__ = 156; break; }
    case 155: // $land_rhs
      var $265=$copy;
      var $266=$have;
      var $cmp406=(($265)>>>0) < (($266)>>>0);
      var $267 = $cmp406;__label__ = 156; break;
    case 156: // $land_end
      var $267;
      if ($267) { __label__ = 149; break; } else { __label__ = 157; break; }
    case 157: // $do_end408
      var $268=$state;
      var $flags409=(($268+16)|0);
      var $269=HEAP32[(($flags409)>>2)];
      var $and410=$269 & 512;
      var $tobool411=(($and410)|0)!=0;
      if ($tobool411) { __label__ = 158; break; } else { __label__ = 159; break; }
    case 158: // $if_then412
      var $270=$state;
      var $check413=(($270+24)|0);
      var $271=HEAP32[(($check413)>>2)];
      var $272=$next;
      var $273=$copy;
      var $call414=_crc32($271, $272, $273);
      var $274=$state;
      var $check415=(($274+24)|0);
      HEAP32[(($check415)>>2)]=$call414;
      __label__ = 159; break;
    case 159: // $if_end416
      var $275=$copy;
      var $276=$have;
      var $sub417=(($276-$275)|0);
      $have=$sub417;
      var $277=$copy;
      var $278=$next;
      var $add_ptr418=(($278+$277)|0);
      $next=$add_ptr418;
      var $279=$len;
      var $tobool419=(($279)|0)!=0;
      if ($tobool419) { __label__ = 160; break; } else { __label__ = 161; break; }
    case 160: // $if_then420
      __label__ = 573; break;
    case 161: // $if_end421
      __label__ = 165; break;
    case 162: // $if_else422
      var $280=$state;
      var $head423=(($280+32)|0);
      var $281=HEAP32[(($head423)>>2)];
      var $cmp424=(($281)|0)!=0;
      if ($cmp424) { __label__ = 163; break; } else { __label__ = 164; break; }
    case 163: // $if_then426
      var $282=$state;
      var $head427=(($282+32)|0);
      var $283=HEAP32[(($head427)>>2)];
      var $name428=(($283+28)|0);
      HEAP32[(($name428)>>2)]=0;
      __label__ = 164; break;
    case 164: // $if_end429
      __label__ = 165; break;
    case 165: // $if_end430
      var $284=$state;
      var $length431=(($284+64)|0);
      HEAP32[(($length431)>>2)]=0;
      var $285=$state;
      var $mode432=(($285)|0);
      HEAP32[(($mode432)>>2)]=7;
      __label__ = 166; break;
    case 166: // $sw_bb433
      var $286=$state;
      var $flags434=(($286+16)|0);
      var $287=HEAP32[(($flags434)>>2)];
      var $and435=$287 & 4096;
      var $tobool436=(($and435)|0)!=0;
      if ($tobool436) { __label__ = 167; break; } else { __label__ = 183; break; }
    case 167: // $if_then437
      var $288=$have;
      var $cmp438=(($288)|0)==0;
      if ($cmp438) { __label__ = 168; break; } else { __label__ = 169; break; }
    case 168: // $if_then440
      __label__ = 573; break;
    case 169: // $if_end441
      $copy=0;
      __label__ = 170; break;
    case 170: // $do_body442
      var $289=$copy;
      var $inc443=(($289+1)|0);
      $copy=$inc443;
      var $290=$next;
      var $arrayidx444=(($290+$289)|0);
      var $291=HEAPU8[($arrayidx444)];
      var $conv445=(($291)&255);
      $len=$conv445;
      var $292=$state;
      var $head446=(($292+32)|0);
      var $293=HEAP32[(($head446)>>2)];
      var $cmp447=(($293)|0)!=0;
      if ($cmp447) { __label__ = 171; break; } else { __label__ = 174; break; }
    case 171: // $land_lhs_true449
      var $294=$state;
      var $head450=(($294+32)|0);
      var $295=HEAP32[(($head450)>>2)];
      var $comment=(($295+36)|0);
      var $296=HEAP32[(($comment)>>2)];
      var $cmp451=(($296)|0)!=0;
      if ($cmp451) { __label__ = 172; break; } else { __label__ = 174; break; }
    case 172: // $land_lhs_true453
      var $297=$state;
      var $length454=(($297+64)|0);
      var $298=HEAPU32[(($length454)>>2)];
      var $299=$state;
      var $head455=(($299+32)|0);
      var $300=HEAP32[(($head455)>>2)];
      var $comm_max=(($300+40)|0);
      var $301=HEAPU32[(($comm_max)>>2)];
      var $cmp456=(($298)>>>0) < (($301)>>>0);
      if ($cmp456) { __label__ = 173; break; } else { __label__ = 174; break; }
    case 173: // $if_then458
      var $302=$len;
      var $conv459=(($302) & 255);
      var $303=$state;
      var $length460=(($303+64)|0);
      var $304=HEAPU32[(($length460)>>2)];
      var $inc461=(($304+1)|0);
      HEAP32[(($length460)>>2)]=$inc461;
      var $305=$state;
      var $head462=(($305+32)|0);
      var $306=HEAP32[(($head462)>>2)];
      var $comment463=(($306+36)|0);
      var $307=HEAP32[(($comment463)>>2)];
      var $arrayidx464=(($307+$304)|0);
      HEAP8[($arrayidx464)]=$conv459;
      __label__ = 174; break;
    case 174: // $if_end465
      __label__ = 175; break;
    case 175: // $do_cond466
      var $308=$len;
      var $tobool467=(($308)|0)!=0;
      if ($tobool467) { __label__ = 176; break; } else { var $311 = 0;__label__ = 177; break; }
    case 176: // $land_rhs468
      var $309=$copy;
      var $310=$have;
      var $cmp469=(($309)>>>0) < (($310)>>>0);
      var $311 = $cmp469;__label__ = 177; break;
    case 177: // $land_end471
      var $311;
      if ($311) { __label__ = 170; break; } else { __label__ = 178; break; }
    case 178: // $do_end472
      var $312=$state;
      var $flags473=(($312+16)|0);
      var $313=HEAP32[(($flags473)>>2)];
      var $and474=$313 & 512;
      var $tobool475=(($and474)|0)!=0;
      if ($tobool475) { __label__ = 179; break; } else { __label__ = 180; break; }
    case 179: // $if_then476
      var $314=$state;
      var $check477=(($314+24)|0);
      var $315=HEAP32[(($check477)>>2)];
      var $316=$next;
      var $317=$copy;
      var $call478=_crc32($315, $316, $317);
      var $318=$state;
      var $check479=(($318+24)|0);
      HEAP32[(($check479)>>2)]=$call478;
      __label__ = 180; break;
    case 180: // $if_end480
      var $319=$copy;
      var $320=$have;
      var $sub481=(($320-$319)|0);
      $have=$sub481;
      var $321=$copy;
      var $322=$next;
      var $add_ptr482=(($322+$321)|0);
      $next=$add_ptr482;
      var $323=$len;
      var $tobool483=(($323)|0)!=0;
      if ($tobool483) { __label__ = 181; break; } else { __label__ = 182; break; }
    case 181: // $if_then484
      __label__ = 573; break;
    case 182: // $if_end485
      __label__ = 186; break;
    case 183: // $if_else486
      var $324=$state;
      var $head487=(($324+32)|0);
      var $325=HEAP32[(($head487)>>2)];
      var $cmp488=(($325)|0)!=0;
      if ($cmp488) { __label__ = 184; break; } else { __label__ = 185; break; }
    case 184: // $if_then490
      var $326=$state;
      var $head491=(($326+32)|0);
      var $327=HEAP32[(($head491)>>2)];
      var $comment492=(($327+36)|0);
      HEAP32[(($comment492)>>2)]=0;
      __label__ = 185; break;
    case 185: // $if_end493
      __label__ = 186; break;
    case 186: // $if_end494
      var $328=$state;
      var $mode495=(($328)|0);
      HEAP32[(($mode495)>>2)]=8;
      __label__ = 187; break;
    case 187: // $sw_bb496
      var $329=$state;
      var $flags497=(($329+16)|0);
      var $330=HEAP32[(($flags497)>>2)];
      var $and498=$330 & 512;
      var $tobool499=(($and498)|0)!=0;
      if ($tobool499) { __label__ = 188; break; } else { __label__ = 202; break; }
    case 188: // $if_then500
      __label__ = 189; break;
    case 189: // $do_body501
      __label__ = 190; break;
    case 190: // $while_cond502
      var $331=$bits;
      var $cmp503=(($331)>>>0) < 16;
      if ($cmp503) { __label__ = 191; break; } else { __label__ = 196; break; }
    case 191: // $while_body505
      __label__ = 192; break;
    case 192: // $do_body506
      var $332=$have;
      var $cmp507=(($332)|0)==0;
      if ($cmp507) { __label__ = 193; break; } else { __label__ = 194; break; }
    case 193: // $if_then509
      __label__ = 573; break;
    case 194: // $if_end510
      var $333=$have;
      var $dec511=(($333-1)|0);
      $have=$dec511;
      var $334=$next;
      var $incdec_ptr512=(($334+1)|0);
      $next=$incdec_ptr512;
      var $335=HEAPU8[($334)];
      var $conv513=(($335)&255);
      var $336=$bits;
      var $shl514=$conv513 << $336;
      var $337=$hold;
      var $add515=(($337+$shl514)|0);
      $hold=$add515;
      var $338=$bits;
      var $add516=(($338+8)|0);
      $bits=$add516;
      __label__ = 195; break;
    case 195: // $do_end518
      __label__ = 190; break;
    case 196: // $while_end519
      __label__ = 197; break;
    case 197: // $do_end521
      var $339=$hold;
      var $340=$state;
      var $check522=(($340+24)|0);
      var $341=HEAP32[(($check522)>>2)];
      var $and523=$341 & 65535;
      var $cmp524=(($339)|0)!=(($and523)|0);
      if ($cmp524) { __label__ = 198; break; } else { __label__ = 199; break; }
    case 198: // $if_then526
      var $342=$strm_addr;
      var $msg527=(($342+24)|0);
      HEAP32[(($msg527)>>2)]=((STRING_TABLE.__str519)|0);
      var $343=$state;
      var $mode528=(($343)|0);
      HEAP32[(($mode528)>>2)]=29;
      __label__ = 572; break;
    case 199: // $if_end529
      __label__ = 200; break;
    case 200: // $do_body530
      $hold=0;
      $bits=0;
      __label__ = 201; break;
    case 201: // $do_end532
      __label__ = 202; break;
    case 202: // $if_end533
      var $344=$state;
      var $head534=(($344+32)|0);
      var $345=HEAP32[(($head534)>>2)];
      var $cmp535=(($345)|0)!=0;
      if ($cmp535) { __label__ = 203; break; } else { __label__ = 204; break; }
    case 203: // $if_then537
      var $346=$state;
      var $flags538=(($346+16)|0);
      var $347=HEAP32[(($flags538)>>2)];
      var $shr539=$347 >> 9;
      var $and540=$shr539 & 1;
      var $348=$state;
      var $head541=(($348+32)|0);
      var $349=HEAP32[(($head541)>>2)];
      var $hcrc=(($349+44)|0);
      HEAP32[(($hcrc)>>2)]=$and540;
      var $350=$state;
      var $head542=(($350+32)|0);
      var $351=HEAP32[(($head542)>>2)];
      var $done543=(($351+48)|0);
      HEAP32[(($done543)>>2)]=1;
      __label__ = 204; break;
    case 204: // $if_end544
      var $call545=_crc32(0, 0, 0);
      var $352=$state;
      var $check546=(($352+24)|0);
      HEAP32[(($check546)>>2)]=$call545;
      var $353=$strm_addr;
      var $adler547=(($353+48)|0);
      HEAP32[(($adler547)>>2)]=$call545;
      var $354=$state;
      var $mode548=(($354)|0);
      HEAP32[(($mode548)>>2)]=11;
      __label__ = 572; break;
    case 205: // $sw_bb549
      __label__ = 206; break;
    case 206: // $do_body550
      __label__ = 207; break;
    case 207: // $while_cond551
      var $355=$bits;
      var $cmp552=(($355)>>>0) < 32;
      if ($cmp552) { __label__ = 208; break; } else { __label__ = 213; break; }
    case 208: // $while_body554
      __label__ = 209; break;
    case 209: // $do_body555
      var $356=$have;
      var $cmp556=(($356)|0)==0;
      if ($cmp556) { __label__ = 210; break; } else { __label__ = 211; break; }
    case 210: // $if_then558
      __label__ = 573; break;
    case 211: // $if_end559
      var $357=$have;
      var $dec560=(($357-1)|0);
      $have=$dec560;
      var $358=$next;
      var $incdec_ptr561=(($358+1)|0);
      $next=$incdec_ptr561;
      var $359=HEAPU8[($358)];
      var $conv562=(($359)&255);
      var $360=$bits;
      var $shl563=$conv562 << $360;
      var $361=$hold;
      var $add564=(($361+$shl563)|0);
      $hold=$add564;
      var $362=$bits;
      var $add565=(($362+8)|0);
      $bits=$add565;
      __label__ = 212; break;
    case 212: // $do_end567
      __label__ = 207; break;
    case 213: // $while_end568
      __label__ = 214; break;
    case 214: // $do_end570
      var $363=$hold;
      var $shr571=$363 >>> 24;
      var $and572=$shr571 & 255;
      var $364=$hold;
      var $shr573=$364 >>> 8;
      var $and574=$shr573 & 65280;
      var $add575=(($and572+$and574)|0);
      var $365=$hold;
      var $and576=$365 & 65280;
      var $shl577=$and576 << 8;
      var $add578=(($add575+$shl577)|0);
      var $366=$hold;
      var $and579=$366 & 255;
      var $shl580=$and579 << 24;
      var $add581=(($add578+$shl580)|0);
      var $367=$state;
      var $check582=(($367+24)|0);
      HEAP32[(($check582)>>2)]=$add581;
      var $368=$strm_addr;
      var $adler583=(($368+48)|0);
      HEAP32[(($adler583)>>2)]=$add581;
      __label__ = 215; break;
    case 215: // $do_body584
      $hold=0;
      $bits=0;
      __label__ = 216; break;
    case 216: // $do_end586
      var $369=$state;
      var $mode587=(($369)|0);
      HEAP32[(($mode587)>>2)]=10;
      __label__ = 217; break;
    case 217: // $sw_bb588
      var $370=$state;
      var $havedict=(($370+12)|0);
      var $371=HEAP32[(($havedict)>>2)];
      var $cmp589=(($371)|0)==0;
      if ($cmp589) { __label__ = 218; break; } else { __label__ = 221; break; }
    case 218: // $if_then591
      __label__ = 219; break;
    case 219: // $do_body592
      var $372=$put;
      var $373=$strm_addr;
      var $next_out593=(($373+12)|0);
      HEAP32[(($next_out593)>>2)]=$372;
      var $374=$left;
      var $375=$strm_addr;
      var $avail_out594=(($375+16)|0);
      HEAP32[(($avail_out594)>>2)]=$374;
      var $376=$next;
      var $377=$strm_addr;
      var $next_in595=(($377)|0);
      HEAP32[(($next_in595)>>2)]=$376;
      var $378=$have;
      var $379=$strm_addr;
      var $avail_in596=(($379+4)|0);
      HEAP32[(($avail_in596)>>2)]=$378;
      var $380=$hold;
      var $381=$state;
      var $hold597=(($381+56)|0);
      HEAP32[(($hold597)>>2)]=$380;
      var $382=$bits;
      var $383=$state;
      var $bits598=(($383+60)|0);
      HEAP32[(($bits598)>>2)]=$382;
      __label__ = 220; break;
    case 220: // $do_end600
      $retval=2;
      __label__ = 595; break;
    case 221: // $if_end601
      var $call602=_adler32(0, 0, 0);
      var $384=$state;
      var $check603=(($384+24)|0);
      HEAP32[(($check603)>>2)]=$call602;
      var $385=$strm_addr;
      var $adler604=(($385+48)|0);
      HEAP32[(($adler604)>>2)]=$call602;
      var $386=$state;
      var $mode605=(($386)|0);
      HEAP32[(($mode605)>>2)]=11;
      __label__ = 222; break;
    case 222: // $sw_bb606
      var $387=$flush_addr;
      var $cmp607=(($387)|0)==5;
      if ($cmp607) { __label__ = 224; break; } else { __label__ = 223; break; }
    case 223: // $lor_lhs_false609
      var $388=$flush_addr;
      var $cmp610=(($388)|0)==6;
      if ($cmp610) { __label__ = 224; break; } else { __label__ = 225; break; }
    case 224: // $if_then612
      __label__ = 573; break;
    case 225: // $if_end613
      __label__ = 226; break;
    case 226: // $sw_bb614
      var $389=$state;
      var $last615=(($389+4)|0);
      var $390=HEAP32[(($last615)>>2)];
      var $tobool616=(($390)|0)!=0;
      if ($tobool616) { __label__ = 227; break; } else { __label__ = 230; break; }
    case 227: // $if_then617
      __label__ = 228; break;
    case 228: // $do_body618
      var $391=$bits;
      var $and619=$391 & 7;
      var $392=$hold;
      var $shr620=$392 >>> (($and619)>>>0);
      $hold=$shr620;
      var $393=$bits;
      var $and621=$393 & 7;
      var $394=$bits;
      var $sub622=(($394-$and621)|0);
      $bits=$sub622;
      __label__ = 229; break;
    case 229: // $do_end624
      var $395=$state;
      var $mode625=(($395)|0);
      HEAP32[(($mode625)>>2)]=26;
      __label__ = 572; break;
    case 230: // $if_end626
      __label__ = 231; break;
    case 231: // $do_body627
      __label__ = 232; break;
    case 232: // $while_cond628
      var $396=$bits;
      var $cmp629=(($396)>>>0) < 3;
      if ($cmp629) { __label__ = 233; break; } else { __label__ = 238; break; }
    case 233: // $while_body631
      __label__ = 234; break;
    case 234: // $do_body632
      var $397=$have;
      var $cmp633=(($397)|0)==0;
      if ($cmp633) { __label__ = 235; break; } else { __label__ = 236; break; }
    case 235: // $if_then635
      __label__ = 573; break;
    case 236: // $if_end636
      var $398=$have;
      var $dec637=(($398-1)|0);
      $have=$dec637;
      var $399=$next;
      var $incdec_ptr638=(($399+1)|0);
      $next=$incdec_ptr638;
      var $400=HEAPU8[($399)];
      var $conv639=(($400)&255);
      var $401=$bits;
      var $shl640=$conv639 << $401;
      var $402=$hold;
      var $add641=(($402+$shl640)|0);
      $hold=$add641;
      var $403=$bits;
      var $add642=(($403+8)|0);
      $bits=$add642;
      __label__ = 237; break;
    case 237: // $do_end644
      __label__ = 232; break;
    case 238: // $while_end645
      __label__ = 239; break;
    case 239: // $do_end647
      var $404=$hold;
      var $and648=$404 & 1;
      var $405=$state;
      var $last649=(($405+4)|0);
      HEAP32[(($last649)>>2)]=$and648;
      __label__ = 240; break;
    case 240: // $do_body650
      var $406=$hold;
      var $shr651=$406 >>> 1;
      $hold=$shr651;
      var $407=$bits;
      var $sub652=(($407-1)|0);
      $bits=$sub652;
      __label__ = 241; break;
    case 241: // $do_end654
      var $408=$hold;
      var $and655=$408 & 3;
      if ($and655 == 0) {
        __label__ = 242; break;
      }
      else if ($and655 == 1) {
        __label__ = 243; break;
      }
      else if ($and655 == 2) {
        __label__ = 248; break;
      }
      else if ($and655 == 3) {
        __label__ = 249; break;
      }
      else {
      __label__ = 250; break;
      }
      
    case 242: // $sw_bb656
      var $409=$state;
      var $mode657=(($409)|0);
      HEAP32[(($mode657)>>2)]=13;
      __label__ = 250; break;
    case 243: // $sw_bb658
      var $410=$state;
      _fixedtables($410);
      var $411=$state;
      var $mode659=(($411)|0);
      HEAP32[(($mode659)>>2)]=19;
      var $412=$flush_addr;
      var $cmp660=(($412)|0)==6;
      if ($cmp660) { __label__ = 244; break; } else { __label__ = 247; break; }
    case 244: // $if_then662
      __label__ = 245; break;
    case 245: // $do_body663
      var $413=$hold;
      var $shr664=$413 >>> 2;
      $hold=$shr664;
      var $414=$bits;
      var $sub665=(($414-2)|0);
      $bits=$sub665;
      __label__ = 246; break;
    case 246: // $do_end667
      __label__ = 573; break;
    case 247: // $if_end668
      __label__ = 250; break;
    case 248: // $sw_bb669
      var $415=$state;
      var $mode670=(($415)|0);
      HEAP32[(($mode670)>>2)]=16;
      __label__ = 250; break;
    case 249: // $sw_bb671
      var $416=$strm_addr;
      var $msg672=(($416+24)|0);
      HEAP32[(($msg672)>>2)]=((STRING_TABLE.__str620)|0);
      var $417=$state;
      var $mode673=(($417)|0);
      HEAP32[(($mode673)>>2)]=29;
      __label__ = 250; break;
    case 250: // $sw_epilog
      __label__ = 251; break;
    case 251: // $do_body674
      var $418=$hold;
      var $shr675=$418 >>> 2;
      $hold=$shr675;
      var $419=$bits;
      var $sub676=(($419-2)|0);
      $bits=$sub676;
      __label__ = 252; break;
    case 252: // $do_end678
      __label__ = 572; break;
    case 253: // $sw_bb679
      __label__ = 254; break;
    case 254: // $do_body680
      var $420=$bits;
      var $and681=$420 & 7;
      var $421=$hold;
      var $shr682=$421 >>> (($and681)>>>0);
      $hold=$shr682;
      var $422=$bits;
      var $and683=$422 & 7;
      var $423=$bits;
      var $sub684=(($423-$and683)|0);
      $bits=$sub684;
      __label__ = 255; break;
    case 255: // $do_end686
      __label__ = 256; break;
    case 256: // $do_body687
      __label__ = 257; break;
    case 257: // $while_cond688
      var $424=$bits;
      var $cmp689=(($424)>>>0) < 32;
      if ($cmp689) { __label__ = 258; break; } else { __label__ = 263; break; }
    case 258: // $while_body691
      __label__ = 259; break;
    case 259: // $do_body692
      var $425=$have;
      var $cmp693=(($425)|0)==0;
      if ($cmp693) { __label__ = 260; break; } else { __label__ = 261; break; }
    case 260: // $if_then695
      __label__ = 573; break;
    case 261: // $if_end696
      var $426=$have;
      var $dec697=(($426-1)|0);
      $have=$dec697;
      var $427=$next;
      var $incdec_ptr698=(($427+1)|0);
      $next=$incdec_ptr698;
      var $428=HEAPU8[($427)];
      var $conv699=(($428)&255);
      var $429=$bits;
      var $shl700=$conv699 << $429;
      var $430=$hold;
      var $add701=(($430+$shl700)|0);
      $hold=$add701;
      var $431=$bits;
      var $add702=(($431+8)|0);
      $bits=$add702;
      __label__ = 262; break;
    case 262: // $do_end704
      __label__ = 257; break;
    case 263: // $while_end705
      __label__ = 264; break;
    case 264: // $do_end707
      var $432=$hold;
      var $and708=$432 & 65535;
      var $433=$hold;
      var $shr709=$433 >>> 16;
      var $xor=$shr709 ^ 65535;
      var $cmp710=(($and708)|0)!=(($xor)|0);
      if ($cmp710) { __label__ = 265; break; } else { __label__ = 266; break; }
    case 265: // $if_then712
      var $434=$strm_addr;
      var $msg713=(($434+24)|0);
      HEAP32[(($msg713)>>2)]=((STRING_TABLE.__str721)|0);
      var $435=$state;
      var $mode714=(($435)|0);
      HEAP32[(($mode714)>>2)]=29;
      __label__ = 572; break;
    case 266: // $if_end715
      var $436=$hold;
      var $and716=$436 & 65535;
      var $437=$state;
      var $length717=(($437+64)|0);
      HEAP32[(($length717)>>2)]=$and716;
      __label__ = 267; break;
    case 267: // $do_body718
      $hold=0;
      $bits=0;
      __label__ = 268; break;
    case 268: // $do_end720
      var $438=$state;
      var $mode721=(($438)|0);
      HEAP32[(($mode721)>>2)]=14;
      var $439=$flush_addr;
      var $cmp722=(($439)|0)==6;
      if ($cmp722) { __label__ = 269; break; } else { __label__ = 270; break; }
    case 269: // $if_then724
      __label__ = 573; break;
    case 270: // $if_end725
      __label__ = 271; break;
    case 271: // $sw_bb726
      var $440=$state;
      var $mode727=(($440)|0);
      HEAP32[(($mode727)>>2)]=15;
      __label__ = 272; break;
    case 272: // $sw_bb728
      var $441=$state;
      var $length729=(($441+64)|0);
      var $442=HEAP32[(($length729)>>2)];
      $copy=$442;
      var $443=$copy;
      var $tobool730=(($443)|0)!=0;
      if ($tobool730) { __label__ = 273; break; } else { __label__ = 280; break; }
    case 273: // $if_then731
      var $444=$copy;
      var $445=$have;
      var $cmp732=(($444)>>>0) > (($445)>>>0);
      if ($cmp732) { __label__ = 274; break; } else { __label__ = 275; break; }
    case 274: // $if_then734
      var $446=$have;
      $copy=$446;
      __label__ = 275; break;
    case 275: // $if_end735
      var $447=$copy;
      var $448=$left;
      var $cmp736=(($447)>>>0) > (($448)>>>0);
      if ($cmp736) { __label__ = 276; break; } else { __label__ = 277; break; }
    case 276: // $if_then738
      var $449=$left;
      $copy=$449;
      __label__ = 277; break;
    case 277: // $if_end739
      var $450=$copy;
      var $cmp740=(($450)|0)==0;
      if ($cmp740) { __label__ = 278; break; } else { __label__ = 279; break; }
    case 278: // $if_then742
      __label__ = 573; break;
    case 279: // $if_end743
      var $451=$put;
      var $452=$next;
      var $453=$copy;
      assert($453 % 1 === 0, 'memcpy given ' + $453 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($451, $452, $453, 1);
      var $454=$copy;
      var $455=$have;
      var $sub744=(($455-$454)|0);
      $have=$sub744;
      var $456=$copy;
      var $457=$next;
      var $add_ptr745=(($457+$456)|0);
      $next=$add_ptr745;
      var $458=$copy;
      var $459=$left;
      var $sub746=(($459-$458)|0);
      $left=$sub746;
      var $460=$copy;
      var $461=$put;
      var $add_ptr747=(($461+$460)|0);
      $put=$add_ptr747;
      var $462=$copy;
      var $463=$state;
      var $length748=(($463+64)|0);
      var $464=HEAP32[(($length748)>>2)];
      var $sub749=(($464-$462)|0);
      HEAP32[(($length748)>>2)]=$sub749;
      __label__ = 572; break;
    case 280: // $if_end750
      var $465=$state;
      var $mode751=(($465)|0);
      HEAP32[(($mode751)>>2)]=11;
      __label__ = 572; break;
    case 281: // $sw_bb752
      __label__ = 282; break;
    case 282: // $do_body753
      __label__ = 283; break;
    case 283: // $while_cond754
      var $466=$bits;
      var $cmp755=(($466)>>>0) < 14;
      if ($cmp755) { __label__ = 284; break; } else { __label__ = 289; break; }
    case 284: // $while_body757
      __label__ = 285; break;
    case 285: // $do_body758
      var $467=$have;
      var $cmp759=(($467)|0)==0;
      if ($cmp759) { __label__ = 286; break; } else { __label__ = 287; break; }
    case 286: // $if_then761
      __label__ = 573; break;
    case 287: // $if_end762
      var $468=$have;
      var $dec763=(($468-1)|0);
      $have=$dec763;
      var $469=$next;
      var $incdec_ptr764=(($469+1)|0);
      $next=$incdec_ptr764;
      var $470=HEAPU8[($469)];
      var $conv765=(($470)&255);
      var $471=$bits;
      var $shl766=$conv765 << $471;
      var $472=$hold;
      var $add767=(($472+$shl766)|0);
      $hold=$add767;
      var $473=$bits;
      var $add768=(($473+8)|0);
      $bits=$add768;
      __label__ = 288; break;
    case 288: // $do_end770
      __label__ = 283; break;
    case 289: // $while_end771
      __label__ = 290; break;
    case 290: // $do_end773
      var $474=$hold;
      var $and774=$474 & 31;
      var $add775=(($and774+257)|0);
      var $475=$state;
      var $nlen=(($475+96)|0);
      HEAP32[(($nlen)>>2)]=$add775;
      __label__ = 291; break;
    case 291: // $do_body776
      var $476=$hold;
      var $shr777=$476 >>> 5;
      $hold=$shr777;
      var $477=$bits;
      var $sub778=(($477-5)|0);
      $bits=$sub778;
      __label__ = 292; break;
    case 292: // $do_end780
      var $478=$hold;
      var $and781=$478 & 31;
      var $add782=(($and781+1)|0);
      var $479=$state;
      var $ndist=(($479+100)|0);
      HEAP32[(($ndist)>>2)]=$add782;
      __label__ = 293; break;
    case 293: // $do_body783
      var $480=$hold;
      var $shr784=$480 >>> 5;
      $hold=$shr784;
      var $481=$bits;
      var $sub785=(($481-5)|0);
      $bits=$sub785;
      __label__ = 294; break;
    case 294: // $do_end787
      var $482=$hold;
      var $and788=$482 & 15;
      var $add789=(($and788+4)|0);
      var $483=$state;
      var $ncode=(($483+92)|0);
      HEAP32[(($ncode)>>2)]=$add789;
      __label__ = 295; break;
    case 295: // $do_body790
      var $484=$hold;
      var $shr791=$484 >>> 4;
      $hold=$shr791;
      var $485=$bits;
      var $sub792=(($485-4)|0);
      $bits=$sub792;
      __label__ = 296; break;
    case 296: // $do_end794
      var $486=$state;
      var $nlen795=(($486+96)|0);
      var $487=HEAPU32[(($nlen795)>>2)];
      var $cmp796=(($487)>>>0) > 286;
      if ($cmp796) { __label__ = 298; break; } else { __label__ = 297; break; }
    case 297: // $lor_lhs_false798
      var $488=$state;
      var $ndist799=(($488+100)|0);
      var $489=HEAPU32[(($ndist799)>>2)];
      var $cmp800=(($489)>>>0) > 30;
      if ($cmp800) { __label__ = 298; break; } else { __label__ = 299; break; }
    case 298: // $if_then802
      var $490=$strm_addr;
      var $msg803=(($490+24)|0);
      HEAP32[(($msg803)>>2)]=((STRING_TABLE.__str822)|0);
      var $491=$state;
      var $mode804=(($491)|0);
      HEAP32[(($mode804)>>2)]=29;
      __label__ = 572; break;
    case 299: // $if_end805
      var $492=$state;
      var $have806=(($492+104)|0);
      HEAP32[(($have806)>>2)]=0;
      var $493=$state;
      var $mode807=(($493)|0);
      HEAP32[(($mode807)>>2)]=17;
      __label__ = 300; break;
    case 300: // $sw_bb808
      __label__ = 301; break;
    case 301: // $while_cond809
      var $494=$state;
      var $have810=(($494+104)|0);
      var $495=HEAPU32[(($have810)>>2)];
      var $496=$state;
      var $ncode811=(($496+92)|0);
      var $497=HEAPU32[(($ncode811)>>2)];
      var $cmp812=(($495)>>>0) < (($497)>>>0);
      if ($cmp812) { __label__ = 302; break; } else { __label__ = 314; break; }
    case 302: // $while_body814
      __label__ = 303; break;
    case 303: // $do_body815
      __label__ = 304; break;
    case 304: // $while_cond816
      var $498=$bits;
      var $cmp817=(($498)>>>0) < 3;
      if ($cmp817) { __label__ = 305; break; } else { __label__ = 310; break; }
    case 305: // $while_body819
      __label__ = 306; break;
    case 306: // $do_body820
      var $499=$have;
      var $cmp821=(($499)|0)==0;
      if ($cmp821) { __label__ = 307; break; } else { __label__ = 308; break; }
    case 307: // $if_then823
      __label__ = 573; break;
    case 308: // $if_end824
      var $500=$have;
      var $dec825=(($500-1)|0);
      $have=$dec825;
      var $501=$next;
      var $incdec_ptr826=(($501+1)|0);
      $next=$incdec_ptr826;
      var $502=HEAPU8[($501)];
      var $conv827=(($502)&255);
      var $503=$bits;
      var $shl828=$conv827 << $503;
      var $504=$hold;
      var $add829=(($504+$shl828)|0);
      $hold=$add829;
      var $505=$bits;
      var $add830=(($505+8)|0);
      $bits=$add830;
      __label__ = 309; break;
    case 309: // $do_end832
      __label__ = 304; break;
    case 310: // $while_end833
      __label__ = 311; break;
    case 311: // $do_end835
      var $506=$hold;
      var $and836=$506 & 7;
      var $conv837=(($and836) & 65535);
      var $507=$state;
      var $have838=(($507+104)|0);
      var $508=HEAP32[(($have838)>>2)];
      var $inc839=(($508+1)|0);
      HEAP32[(($have838)>>2)]=$inc839;
      var $arrayidx840=((_inflate_order+($508<<1))|0);
      var $509=HEAPU16[(($arrayidx840)>>1)];
      var $idxprom=(($509)&65535);
      var $510=$state;
      var $lens=(($510+112)|0);
      var $arrayidx841=(($lens+($idxprom<<1))|0);
      HEAP16[(($arrayidx841)>>1)]=$conv837;
      __label__ = 312; break;
    case 312: // $do_body842
      var $511=$hold;
      var $shr843=$511 >>> 3;
      $hold=$shr843;
      var $512=$bits;
      var $sub844=(($512-3)|0);
      $bits=$sub844;
      __label__ = 313; break;
    case 313: // $do_end846
      __label__ = 301; break;
    case 314: // $while_end847
      __label__ = 315; break;
    case 315: // $while_cond848
      var $513=$state;
      var $have849=(($513+104)|0);
      var $514=HEAPU32[(($have849)>>2)];
      var $cmp850=(($514)>>>0) < 19;
      if ($cmp850) { __label__ = 316; break; } else { __label__ = 317; break; }
    case 316: // $while_body852
      var $515=$state;
      var $have853=(($515+104)|0);
      var $516=HEAP32[(($have853)>>2)];
      var $inc854=(($516+1)|0);
      HEAP32[(($have853)>>2)]=$inc854;
      var $arrayidx855=((_inflate_order+($516<<1))|0);
      var $517=HEAPU16[(($arrayidx855)>>1)];
      var $idxprom856=(($517)&65535);
      var $518=$state;
      var $lens857=(($518+112)|0);
      var $arrayidx858=(($lens857+($idxprom856<<1))|0);
      HEAP16[(($arrayidx858)>>1)]=0;
      __label__ = 315; break;
    case 317: // $while_end859
      var $519=$state;
      var $codes=(($519+1328)|0);
      var $arraydecay860=(($codes)|0);
      var $520=$state;
      var $next861=(($520+108)|0);
      HEAP32[(($next861)>>2)]=$arraydecay860;
      var $521=$state;
      var $next862=(($521+108)|0);
      var $522=HEAP32[(($next862)>>2)];
      var $523=$state;
      var $lencode=(($523+76)|0);
      HEAP32[(($lencode)>>2)]=$522;
      var $524=$state;
      var $lenbits=(($524+84)|0);
      HEAP32[(($lenbits)>>2)]=7;
      var $525=$state;
      var $lens863=(($525+112)|0);
      var $arraydecay864=(($lens863)|0);
      var $526=$state;
      var $next865=(($526+108)|0);
      var $527=$state;
      var $lenbits866=(($527+84)|0);
      var $528=$state;
      var $work=(($528+752)|0);
      var $arraydecay867=(($work)|0);
      var $call868=_inflate_table(0, $arraydecay864, 19, $next865, $lenbits866, $arraydecay867);
      $ret=$call868;
      var $529=$ret;
      var $tobool869=(($529)|0)!=0;
      if ($tobool869) { __label__ = 318; break; } else { __label__ = 319; break; }
    case 318: // $if_then870
      var $530=$strm_addr;
      var $msg871=(($530+24)|0);
      HEAP32[(($msg871)>>2)]=((STRING_TABLE.__str923)|0);
      var $531=$state;
      var $mode872=(($531)|0);
      HEAP32[(($mode872)>>2)]=29;
      __label__ = 572; break;
    case 319: // $if_end873
      var $532=$state;
      var $have874=(($532+104)|0);
      HEAP32[(($have874)>>2)]=0;
      var $533=$state;
      var $mode875=(($533)|0);
      HEAP32[(($mode875)>>2)]=18;
      __label__ = 320; break;
    case 320: // $sw_bb876
      __label__ = 321; break;
    case 321: // $while_cond877
      var $534=$state;
      var $have878=(($534+104)|0);
      var $535=HEAPU32[(($have878)>>2)];
      var $536=$state;
      var $nlen879=(($536+96)|0);
      var $537=HEAP32[(($nlen879)>>2)];
      var $538=$state;
      var $ndist880=(($538+100)|0);
      var $539=HEAP32[(($ndist880)>>2)];
      var $add881=(($537+$539)|0);
      var $cmp882=(($535)>>>0) < (($add881)>>>0);
      if ($cmp882) { __label__ = 322; break; } else { __label__ = 397; break; }
    case 322: // $while_body884
      __label__ = 323; break;
    case 323: // $for_cond885
      var $540=$hold;
      var $541=$state;
      var $lenbits886=(($541+84)|0);
      var $542=HEAP32[(($lenbits886)>>2)];
      var $shl887=1 << $542;
      var $sub888=(($shl887-1)|0);
      var $and889=$540 & $sub888;
      var $543=$state;
      var $lencode890=(($543+76)|0);
      var $544=HEAP32[(($lencode890)>>2)];
      var $arrayidx891=(($544+($and889<<2))|0);
      var $545=$here;
      var $546=$arrayidx891;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($545)>>1)]=HEAP16[(($546)>>1)];HEAP16[(($545+2)>>1)]=HEAP16[(($546+2)>>1)];
      var $bits892=(($here+1)|0);
      var $547=HEAPU8[($bits892)];
      var $conv893=(($547)&255);
      var $548=$bits;
      var $cmp894=(($conv893)>>>0) <= (($548)>>>0);
      if ($cmp894) { __label__ = 324; break; } else { __label__ = 325; break; }
    case 324: // $if_then896
      __label__ = 330; break;
    case 325: // $if_end897
      __label__ = 326; break;
    case 326: // $do_body898
      var $549=$have;
      var $cmp899=(($549)|0)==0;
      if ($cmp899) { __label__ = 327; break; } else { __label__ = 328; break; }
    case 327: // $if_then901
      __label__ = 573; break;
    case 328: // $if_end902
      var $550=$have;
      var $dec903=(($550-1)|0);
      $have=$dec903;
      var $551=$next;
      var $incdec_ptr904=(($551+1)|0);
      $next=$incdec_ptr904;
      var $552=HEAPU8[($551)];
      var $conv905=(($552)&255);
      var $553=$bits;
      var $shl906=$conv905 << $553;
      var $554=$hold;
      var $add907=(($554+$shl906)|0);
      $hold=$add907;
      var $555=$bits;
      var $add908=(($555+8)|0);
      $bits=$add908;
      __label__ = 329; break;
    case 329: // $do_end910
      __label__ = 323; break;
    case 330: // $for_end
      var $val=(($here+2)|0);
      var $556=HEAPU16[(($val)>>1)];
      var $conv911=(($556)&65535);
      var $cmp912=(($conv911)|0) < 16;
      if ($cmp912) { __label__ = 331; break; } else { __label__ = 343; break; }
    case 331: // $if_then914
      __label__ = 332; break;
    case 332: // $do_body915
      __label__ = 333; break;
    case 333: // $while_cond916
      var $557=$bits;
      var $bits917=(($here+1)|0);
      var $558=HEAPU8[($bits917)];
      var $conv918=(($558)&255);
      var $cmp919=(($557)>>>0) < (($conv918)>>>0);
      if ($cmp919) { __label__ = 334; break; } else { __label__ = 339; break; }
    case 334: // $while_body921
      __label__ = 335; break;
    case 335: // $do_body922
      var $559=$have;
      var $cmp923=(($559)|0)==0;
      if ($cmp923) { __label__ = 336; break; } else { __label__ = 337; break; }
    case 336: // $if_then925
      __label__ = 573; break;
    case 337: // $if_end926
      var $560=$have;
      var $dec927=(($560-1)|0);
      $have=$dec927;
      var $561=$next;
      var $incdec_ptr928=(($561+1)|0);
      $next=$incdec_ptr928;
      var $562=HEAPU8[($561)];
      var $conv929=(($562)&255);
      var $563=$bits;
      var $shl930=$conv929 << $563;
      var $564=$hold;
      var $add931=(($564+$shl930)|0);
      $hold=$add931;
      var $565=$bits;
      var $add932=(($565+8)|0);
      $bits=$add932;
      __label__ = 338; break;
    case 338: // $do_end934
      __label__ = 333; break;
    case 339: // $while_end935
      __label__ = 340; break;
    case 340: // $do_end937
      __label__ = 341; break;
    case 341: // $do_body938
      var $bits939=(($here+1)|0);
      var $566=HEAPU8[($bits939)];
      var $conv940=(($566)&255);
      var $567=$hold;
      var $shr941=$567 >>> (($conv940)>>>0);
      $hold=$shr941;
      var $bits942=(($here+1)|0);
      var $568=HEAPU8[($bits942)];
      var $conv943=(($568)&255);
      var $569=$bits;
      var $sub944=(($569-$conv943)|0);
      $bits=$sub944;
      __label__ = 342; break;
    case 342: // $do_end946
      var $val947=(($here+2)|0);
      var $570=HEAP16[(($val947)>>1)];
      var $571=$state;
      var $have948=(($571+104)|0);
      var $572=HEAP32[(($have948)>>2)];
      var $inc949=(($572+1)|0);
      HEAP32[(($have948)>>2)]=$inc949;
      var $573=$state;
      var $lens950=(($573+112)|0);
      var $arrayidx951=(($lens950+($572<<1))|0);
      HEAP16[(($arrayidx951)>>1)]=$570;
      __label__ = 396; break;
    case 343: // $if_else952
      var $val953=(($here+2)|0);
      var $574=HEAPU16[(($val953)>>1)];
      var $conv954=(($574)&65535);
      var $cmp955=(($conv954)|0)==16;
      if ($cmp955) { __label__ = 344; break; } else { __label__ = 360; break; }
    case 344: // $if_then957
      __label__ = 345; break;
    case 345: // $do_body958
      __label__ = 346; break;
    case 346: // $while_cond959
      var $575=$bits;
      var $bits960=(($here+1)|0);
      var $576=HEAPU8[($bits960)];
      var $conv961=(($576)&255);
      var $add962=(($conv961+2)|0);
      var $cmp963=(($575)>>>0) < (($add962)>>>0);
      if ($cmp963) { __label__ = 347; break; } else { __label__ = 352; break; }
    case 347: // $while_body965
      __label__ = 348; break;
    case 348: // $do_body966
      var $577=$have;
      var $cmp967=(($577)|0)==0;
      if ($cmp967) { __label__ = 349; break; } else { __label__ = 350; break; }
    case 349: // $if_then969
      __label__ = 573; break;
    case 350: // $if_end970
      var $578=$have;
      var $dec971=(($578-1)|0);
      $have=$dec971;
      var $579=$next;
      var $incdec_ptr972=(($579+1)|0);
      $next=$incdec_ptr972;
      var $580=HEAPU8[($579)];
      var $conv973=(($580)&255);
      var $581=$bits;
      var $shl974=$conv973 << $581;
      var $582=$hold;
      var $add975=(($582+$shl974)|0);
      $hold=$add975;
      var $583=$bits;
      var $add976=(($583+8)|0);
      $bits=$add976;
      __label__ = 351; break;
    case 351: // $do_end978
      __label__ = 346; break;
    case 352: // $while_end979
      __label__ = 353; break;
    case 353: // $do_end981
      __label__ = 354; break;
    case 354: // $do_body982
      var $bits983=(($here+1)|0);
      var $584=HEAPU8[($bits983)];
      var $conv984=(($584)&255);
      var $585=$hold;
      var $shr985=$585 >>> (($conv984)>>>0);
      $hold=$shr985;
      var $bits986=(($here+1)|0);
      var $586=HEAPU8[($bits986)];
      var $conv987=(($586)&255);
      var $587=$bits;
      var $sub988=(($587-$conv987)|0);
      $bits=$sub988;
      __label__ = 355; break;
    case 355: // $do_end990
      var $588=$state;
      var $have991=(($588+104)|0);
      var $589=HEAP32[(($have991)>>2)];
      var $cmp992=(($589)|0)==0;
      if ($cmp992) { __label__ = 356; break; } else { __label__ = 357; break; }
    case 356: // $if_then994
      var $590=$strm_addr;
      var $msg995=(($590+24)|0);
      HEAP32[(($msg995)>>2)]=((STRING_TABLE.__str1024)|0);
      var $591=$state;
      var $mode996=(($591)|0);
      HEAP32[(($mode996)>>2)]=29;
      __label__ = 397; break;
    case 357: // $if_end997
      var $592=$state;
      var $have998=(($592+104)|0);
      var $593=HEAP32[(($have998)>>2)];
      var $sub999=(($593-1)|0);
      var $594=$state;
      var $lens1000=(($594+112)|0);
      var $arrayidx1001=(($lens1000+($sub999<<1))|0);
      var $595=HEAPU16[(($arrayidx1001)>>1)];
      var $conv1002=(($595)&65535);
      $len=$conv1002;
      var $596=$hold;
      var $and1003=$596 & 3;
      var $add1004=(($and1003+3)|0);
      $copy=$add1004;
      __label__ = 358; break;
    case 358: // $do_body1005
      var $597=$hold;
      var $shr1006=$597 >>> 2;
      $hold=$shr1006;
      var $598=$bits;
      var $sub1007=(($598-2)|0);
      $bits=$sub1007;
      __label__ = 359; break;
    case 359: // $do_end1009
      __label__ = 390; break;
    case 360: // $if_else1010
      var $val1011=(($here+2)|0);
      var $599=HEAPU16[(($val1011)>>1)];
      var $conv1012=(($599)&65535);
      var $cmp1013=(($conv1012)|0)==17;
      if ($cmp1013) { __label__ = 361; break; } else { __label__ = 375; break; }
    case 361: // $if_then1015
      __label__ = 362; break;
    case 362: // $do_body1016
      __label__ = 363; break;
    case 363: // $while_cond1017
      var $600=$bits;
      var $bits1018=(($here+1)|0);
      var $601=HEAPU8[($bits1018)];
      var $conv1019=(($601)&255);
      var $add1020=(($conv1019+3)|0);
      var $cmp1021=(($600)>>>0) < (($add1020)>>>0);
      if ($cmp1021) { __label__ = 364; break; } else { __label__ = 369; break; }
    case 364: // $while_body1023
      __label__ = 365; break;
    case 365: // $do_body1024
      var $602=$have;
      var $cmp1025=(($602)|0)==0;
      if ($cmp1025) { __label__ = 366; break; } else { __label__ = 367; break; }
    case 366: // $if_then1027
      __label__ = 573; break;
    case 367: // $if_end1028
      var $603=$have;
      var $dec1029=(($603-1)|0);
      $have=$dec1029;
      var $604=$next;
      var $incdec_ptr1030=(($604+1)|0);
      $next=$incdec_ptr1030;
      var $605=HEAPU8[($604)];
      var $conv1031=(($605)&255);
      var $606=$bits;
      var $shl1032=$conv1031 << $606;
      var $607=$hold;
      var $add1033=(($607+$shl1032)|0);
      $hold=$add1033;
      var $608=$bits;
      var $add1034=(($608+8)|0);
      $bits=$add1034;
      __label__ = 368; break;
    case 368: // $do_end1036
      __label__ = 363; break;
    case 369: // $while_end1037
      __label__ = 370; break;
    case 370: // $do_end1039
      __label__ = 371; break;
    case 371: // $do_body1040
      var $bits1041=(($here+1)|0);
      var $609=HEAPU8[($bits1041)];
      var $conv1042=(($609)&255);
      var $610=$hold;
      var $shr1043=$610 >>> (($conv1042)>>>0);
      $hold=$shr1043;
      var $bits1044=(($here+1)|0);
      var $611=HEAPU8[($bits1044)];
      var $conv1045=(($611)&255);
      var $612=$bits;
      var $sub1046=(($612-$conv1045)|0);
      $bits=$sub1046;
      __label__ = 372; break;
    case 372: // $do_end1048
      $len=0;
      var $613=$hold;
      var $and1049=$613 & 7;
      var $add1050=(($and1049+3)|0);
      $copy=$add1050;
      __label__ = 373; break;
    case 373: // $do_body1051
      var $614=$hold;
      var $shr1052=$614 >>> 3;
      $hold=$shr1052;
      var $615=$bits;
      var $sub1053=(($615-3)|0);
      $bits=$sub1053;
      __label__ = 374; break;
    case 374: // $do_end1055
      __label__ = 389; break;
    case 375: // $if_else1056
      __label__ = 376; break;
    case 376: // $do_body1057
      __label__ = 377; break;
    case 377: // $while_cond1058
      var $616=$bits;
      var $bits1059=(($here+1)|0);
      var $617=HEAPU8[($bits1059)];
      var $conv1060=(($617)&255);
      var $add1061=(($conv1060+7)|0);
      var $cmp1062=(($616)>>>0) < (($add1061)>>>0);
      if ($cmp1062) { __label__ = 378; break; } else { __label__ = 383; break; }
    case 378: // $while_body1064
      __label__ = 379; break;
    case 379: // $do_body1065
      var $618=$have;
      var $cmp1066=(($618)|0)==0;
      if ($cmp1066) { __label__ = 380; break; } else { __label__ = 381; break; }
    case 380: // $if_then1068
      __label__ = 573; break;
    case 381: // $if_end1069
      var $619=$have;
      var $dec1070=(($619-1)|0);
      $have=$dec1070;
      var $620=$next;
      var $incdec_ptr1071=(($620+1)|0);
      $next=$incdec_ptr1071;
      var $621=HEAPU8[($620)];
      var $conv1072=(($621)&255);
      var $622=$bits;
      var $shl1073=$conv1072 << $622;
      var $623=$hold;
      var $add1074=(($623+$shl1073)|0);
      $hold=$add1074;
      var $624=$bits;
      var $add1075=(($624+8)|0);
      $bits=$add1075;
      __label__ = 382; break;
    case 382: // $do_end1077
      __label__ = 377; break;
    case 383: // $while_end1078
      __label__ = 384; break;
    case 384: // $do_end1080
      __label__ = 385; break;
    case 385: // $do_body1081
      var $bits1082=(($here+1)|0);
      var $625=HEAPU8[($bits1082)];
      var $conv1083=(($625)&255);
      var $626=$hold;
      var $shr1084=$626 >>> (($conv1083)>>>0);
      $hold=$shr1084;
      var $bits1085=(($here+1)|0);
      var $627=HEAPU8[($bits1085)];
      var $conv1086=(($627)&255);
      var $628=$bits;
      var $sub1087=(($628-$conv1086)|0);
      $bits=$sub1087;
      __label__ = 386; break;
    case 386: // $do_end1089
      $len=0;
      var $629=$hold;
      var $and1090=$629 & 127;
      var $add1091=(($and1090+11)|0);
      $copy=$add1091;
      __label__ = 387; break;
    case 387: // $do_body1092
      var $630=$hold;
      var $shr1093=$630 >>> 7;
      $hold=$shr1093;
      var $631=$bits;
      var $sub1094=(($631-7)|0);
      $bits=$sub1094;
      __label__ = 388; break;
    case 388: // $do_end1096
      __label__ = 389; break;
    case 389: // $if_end1097
      __label__ = 390; break;
    case 390: // $if_end1098
      var $632=$state;
      var $have1099=(($632+104)|0);
      var $633=HEAP32[(($have1099)>>2)];
      var $634=$copy;
      var $add1100=(($633+$634)|0);
      var $635=$state;
      var $nlen1101=(($635+96)|0);
      var $636=HEAP32[(($nlen1101)>>2)];
      var $637=$state;
      var $ndist1102=(($637+100)|0);
      var $638=HEAP32[(($ndist1102)>>2)];
      var $add1103=(($636+$638)|0);
      var $cmp1104=(($add1100)>>>0) > (($add1103)>>>0);
      if ($cmp1104) { __label__ = 391; break; } else { __label__ = 392; break; }
    case 391: // $if_then1106
      var $639=$strm_addr;
      var $msg1107=(($639+24)|0);
      HEAP32[(($msg1107)>>2)]=((STRING_TABLE.__str1024)|0);
      var $640=$state;
      var $mode1108=(($640)|0);
      HEAP32[(($mode1108)>>2)]=29;
      __label__ = 397; break;
    case 392: // $if_end1109
      __label__ = 393; break;
    case 393: // $while_cond1110
      var $641=$copy;
      var $dec1111=(($641-1)|0);
      $copy=$dec1111;
      var $tobool1112=(($641)|0)!=0;
      if ($tobool1112) { __label__ = 394; break; } else { __label__ = 395; break; }
    case 394: // $while_body1113
      var $642=$len;
      var $conv1114=(($642) & 65535);
      var $643=$state;
      var $have1115=(($643+104)|0);
      var $644=HEAP32[(($have1115)>>2)];
      var $inc1116=(($644+1)|0);
      HEAP32[(($have1115)>>2)]=$inc1116;
      var $645=$state;
      var $lens1117=(($645+112)|0);
      var $arrayidx1118=(($lens1117+($644<<1))|0);
      HEAP16[(($arrayidx1118)>>1)]=$conv1114;
      __label__ = 393; break;
    case 395: // $while_end1119
      __label__ = 396; break;
    case 396: // $if_end1120
      __label__ = 321; break;
    case 397: // $while_end1121
      var $646=$state;
      var $mode1122=(($646)|0);
      var $647=HEAP32[(($mode1122)>>2)];
      var $cmp1123=(($647)|0)==29;
      if ($cmp1123) { __label__ = 398; break; } else { __label__ = 399; break; }
    case 398: // $if_then1125
      __label__ = 572; break;
    case 399: // $if_end1126
      var $648=$state;
      var $lens1127=(($648+112)|0);
      var $arrayidx1128=(($lens1127+512)|0);
      var $649=HEAPU16[(($arrayidx1128)>>1)];
      var $conv1129=(($649)&65535);
      var $cmp1130=(($conv1129)|0)==0;
      if ($cmp1130) { __label__ = 400; break; } else { __label__ = 401; break; }
    case 400: // $if_then1132
      var $650=$strm_addr;
      var $msg1133=(($650+24)|0);
      HEAP32[(($msg1133)>>2)]=((STRING_TABLE.__str1125)|0);
      var $651=$state;
      var $mode1134=(($651)|0);
      HEAP32[(($mode1134)>>2)]=29;
      __label__ = 572; break;
    case 401: // $if_end1135
      var $652=$state;
      var $codes1136=(($652+1328)|0);
      var $arraydecay1137=(($codes1136)|0);
      var $653=$state;
      var $next1138=(($653+108)|0);
      HEAP32[(($next1138)>>2)]=$arraydecay1137;
      var $654=$state;
      var $next1139=(($654+108)|0);
      var $655=HEAP32[(($next1139)>>2)];
      var $656=$state;
      var $lencode1140=(($656+76)|0);
      HEAP32[(($lencode1140)>>2)]=$655;
      var $657=$state;
      var $lenbits1141=(($657+84)|0);
      HEAP32[(($lenbits1141)>>2)]=9;
      var $658=$state;
      var $lens1142=(($658+112)|0);
      var $arraydecay1143=(($lens1142)|0);
      var $659=$state;
      var $nlen1144=(($659+96)|0);
      var $660=HEAP32[(($nlen1144)>>2)];
      var $661=$state;
      var $next1145=(($661+108)|0);
      var $662=$state;
      var $lenbits1146=(($662+84)|0);
      var $663=$state;
      var $work1147=(($663+752)|0);
      var $arraydecay1148=(($work1147)|0);
      var $call1149=_inflate_table(1, $arraydecay1143, $660, $next1145, $lenbits1146, $arraydecay1148);
      $ret=$call1149;
      var $664=$ret;
      var $tobool1150=(($664)|0)!=0;
      if ($tobool1150) { __label__ = 402; break; } else { __label__ = 403; break; }
    case 402: // $if_then1151
      var $665=$strm_addr;
      var $msg1152=(($665+24)|0);
      HEAP32[(($msg1152)>>2)]=((STRING_TABLE.__str1226)|0);
      var $666=$state;
      var $mode1153=(($666)|0);
      HEAP32[(($mode1153)>>2)]=29;
      __label__ = 572; break;
    case 403: // $if_end1154
      var $667=$state;
      var $next1155=(($667+108)|0);
      var $668=HEAP32[(($next1155)>>2)];
      var $669=$state;
      var $distcode=(($669+80)|0);
      HEAP32[(($distcode)>>2)]=$668;
      var $670=$state;
      var $distbits=(($670+88)|0);
      HEAP32[(($distbits)>>2)]=6;
      var $671=$state;
      var $lens1156=(($671+112)|0);
      var $arraydecay1157=(($lens1156)|0);
      var $672=$state;
      var $nlen1158=(($672+96)|0);
      var $673=HEAP32[(($nlen1158)>>2)];
      var $add_ptr1159=(($arraydecay1157+($673<<1))|0);
      var $674=$state;
      var $ndist1160=(($674+100)|0);
      var $675=HEAP32[(($ndist1160)>>2)];
      var $676=$state;
      var $next1161=(($676+108)|0);
      var $677=$state;
      var $distbits1162=(($677+88)|0);
      var $678=$state;
      var $work1163=(($678+752)|0);
      var $arraydecay1164=(($work1163)|0);
      var $call1165=_inflate_table(2, $add_ptr1159, $675, $next1161, $distbits1162, $arraydecay1164);
      $ret=$call1165;
      var $679=$ret;
      var $tobool1166=(($679)|0)!=0;
      if ($tobool1166) { __label__ = 404; break; } else { __label__ = 405; break; }
    case 404: // $if_then1167
      var $680=$strm_addr;
      var $msg1168=(($680+24)|0);
      HEAP32[(($msg1168)>>2)]=((STRING_TABLE.__str1327)|0);
      var $681=$state;
      var $mode1169=(($681)|0);
      HEAP32[(($mode1169)>>2)]=29;
      __label__ = 572; break;
    case 405: // $if_end1170
      var $682=$state;
      var $mode1171=(($682)|0);
      HEAP32[(($mode1171)>>2)]=19;
      var $683=$flush_addr;
      var $cmp1172=(($683)|0)==6;
      if ($cmp1172) { __label__ = 406; break; } else { __label__ = 407; break; }
    case 406: // $if_then1174
      __label__ = 573; break;
    case 407: // $if_end1175
      __label__ = 408; break;
    case 408: // $sw_bb1176
      var $684=$state;
      var $mode1177=(($684)|0);
      HEAP32[(($mode1177)>>2)]=20;
      __label__ = 409; break;
    case 409: // $sw_bb1178
      var $685=$have;
      var $cmp1179=(($685)>>>0) >= 6;
      if ($cmp1179) { __label__ = 410; break; } else { __label__ = 418; break; }
    case 410: // $land_lhs_true1181
      var $686=$left;
      var $cmp1182=(($686)>>>0) >= 258;
      if ($cmp1182) { __label__ = 411; break; } else { __label__ = 418; break; }
    case 411: // $if_then1184
      __label__ = 412; break;
    case 412: // $do_body1185
      var $687=$put;
      var $688=$strm_addr;
      var $next_out1186=(($688+12)|0);
      HEAP32[(($next_out1186)>>2)]=$687;
      var $689=$left;
      var $690=$strm_addr;
      var $avail_out1187=(($690+16)|0);
      HEAP32[(($avail_out1187)>>2)]=$689;
      var $691=$next;
      var $692=$strm_addr;
      var $next_in1188=(($692)|0);
      HEAP32[(($next_in1188)>>2)]=$691;
      var $693=$have;
      var $694=$strm_addr;
      var $avail_in1189=(($694+4)|0);
      HEAP32[(($avail_in1189)>>2)]=$693;
      var $695=$hold;
      var $696=$state;
      var $hold1190=(($696+56)|0);
      HEAP32[(($hold1190)>>2)]=$695;
      var $697=$bits;
      var $698=$state;
      var $bits1191=(($698+60)|0);
      HEAP32[(($bits1191)>>2)]=$697;
      __label__ = 413; break;
    case 413: // $do_end1193
      var $699=$strm_addr;
      var $700=$out;
      _inflate_fast($699, $700);
      __label__ = 414; break;
    case 414: // $do_body1194
      var $701=$strm_addr;
      var $next_out1195=(($701+12)|0);
      var $702=HEAP32[(($next_out1195)>>2)];
      $put=$702;
      var $703=$strm_addr;
      var $avail_out1196=(($703+16)|0);
      var $704=HEAP32[(($avail_out1196)>>2)];
      $left=$704;
      var $705=$strm_addr;
      var $next_in1197=(($705)|0);
      var $706=HEAP32[(($next_in1197)>>2)];
      $next=$706;
      var $707=$strm_addr;
      var $avail_in1198=(($707+4)|0);
      var $708=HEAP32[(($avail_in1198)>>2)];
      $have=$708;
      var $709=$state;
      var $hold1199=(($709+56)|0);
      var $710=HEAP32[(($hold1199)>>2)];
      $hold=$710;
      var $711=$state;
      var $bits1200=(($711+60)|0);
      var $712=HEAP32[(($bits1200)>>2)];
      $bits=$712;
      __label__ = 415; break;
    case 415: // $do_end1202
      var $713=$state;
      var $mode1203=(($713)|0);
      var $714=HEAP32[(($mode1203)>>2)];
      var $cmp1204=(($714)|0)==11;
      if ($cmp1204) { __label__ = 416; break; } else { __label__ = 417; break; }
    case 416: // $if_then1206
      var $715=$state;
      var $back=(($715+7108)|0);
      HEAP32[(($back)>>2)]=-1;
      __label__ = 417; break;
    case 417: // $if_end1207
      __label__ = 572; break;
    case 418: // $if_end1208
      var $716=$state;
      var $back1209=(($716+7108)|0);
      HEAP32[(($back1209)>>2)]=0;
      __label__ = 419; break;
    case 419: // $for_cond1210
      var $717=$hold;
      var $718=$state;
      var $lenbits1211=(($718+84)|0);
      var $719=HEAP32[(($lenbits1211)>>2)];
      var $shl1212=1 << $719;
      var $sub1213=(($shl1212-1)|0);
      var $and1214=$717 & $sub1213;
      var $720=$state;
      var $lencode1215=(($720+76)|0);
      var $721=HEAP32[(($lencode1215)>>2)];
      var $arrayidx1216=(($721+($and1214<<2))|0);
      var $722=$here;
      var $723=$arrayidx1216;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($722)>>1)]=HEAP16[(($723)>>1)];HEAP16[(($722+2)>>1)]=HEAP16[(($723+2)>>1)];
      var $bits1217=(($here+1)|0);
      var $724=HEAPU8[($bits1217)];
      var $conv1218=(($724)&255);
      var $725=$bits;
      var $cmp1219=(($conv1218)>>>0) <= (($725)>>>0);
      if ($cmp1219) { __label__ = 420; break; } else { __label__ = 421; break; }
    case 420: // $if_then1221
      __label__ = 426; break;
    case 421: // $if_end1222
      __label__ = 422; break;
    case 422: // $do_body1223
      var $726=$have;
      var $cmp1224=(($726)|0)==0;
      if ($cmp1224) { __label__ = 423; break; } else { __label__ = 424; break; }
    case 423: // $if_then1226
      __label__ = 573; break;
    case 424: // $if_end1227
      var $727=$have;
      var $dec1228=(($727-1)|0);
      $have=$dec1228;
      var $728=$next;
      var $incdec_ptr1229=(($728+1)|0);
      $next=$incdec_ptr1229;
      var $729=HEAPU8[($728)];
      var $conv1230=(($729)&255);
      var $730=$bits;
      var $shl1231=$conv1230 << $730;
      var $731=$hold;
      var $add1232=(($731+$shl1231)|0);
      $hold=$add1232;
      var $732=$bits;
      var $add1233=(($732+8)|0);
      $bits=$add1233;
      __label__ = 425; break;
    case 425: // $do_end1235
      __label__ = 419; break;
    case 426: // $for_end1236
      var $op=(($here)|0);
      var $733=HEAPU8[($op)];
      var $conv1237=(($733)&255);
      var $tobool1238=(($conv1237)|0)!=0;
      if ($tobool1238) { __label__ = 427; break; } else { __label__ = 439; break; }
    case 427: // $land_lhs_true1239
      var $op1240=(($here)|0);
      var $734=HEAPU8[($op1240)];
      var $conv1241=(($734)&255);
      var $and1242=$conv1241 & 240;
      var $cmp1243=(($and1242)|0)==0;
      if ($cmp1243) { __label__ = 428; break; } else { __label__ = 439; break; }
    case 428: // $if_then1245
      var $735=$last;
      var $736=$here;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($735)>>1)]=HEAP16[(($736)>>1)];HEAP16[(($735+2)>>1)]=HEAP16[(($736+2)>>1)];
      __label__ = 429; break;
    case 429: // $for_cond1246
      var $val1247=(($last+2)|0);
      var $737=HEAPU16[(($val1247)>>1)];
      var $conv1248=(($737)&65535);
      var $738=$hold;
      var $bits1249=(($last+1)|0);
      var $739=HEAPU8[($bits1249)];
      var $conv1250=(($739)&255);
      var $op1251=(($last)|0);
      var $740=HEAPU8[($op1251)];
      var $conv1252=(($740)&255);
      var $add1253=(($conv1250+$conv1252)|0);
      var $shl1254=1 << $add1253;
      var $sub1255=(($shl1254-1)|0);
      var $and1256=$738 & $sub1255;
      var $bits1257=(($last+1)|0);
      var $741=HEAPU8[($bits1257)];
      var $conv1258=(($741)&255);
      var $shr1259=$and1256 >>> (($conv1258)>>>0);
      var $add1260=(($conv1248+$shr1259)|0);
      var $742=$state;
      var $lencode1261=(($742+76)|0);
      var $743=HEAP32[(($lencode1261)>>2)];
      var $arrayidx1262=(($743+($add1260<<2))|0);
      var $744=$here;
      var $745=$arrayidx1262;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($744)>>1)]=HEAP16[(($745)>>1)];HEAP16[(($744+2)>>1)]=HEAP16[(($745+2)>>1)];
      var $bits1263=(($last+1)|0);
      var $746=HEAPU8[($bits1263)];
      var $conv1264=(($746)&255);
      var $bits1265=(($here+1)|0);
      var $747=HEAPU8[($bits1265)];
      var $conv1266=(($747)&255);
      var $add1267=(($conv1264+$conv1266)|0);
      var $748=$bits;
      var $cmp1268=(($add1267)>>>0) <= (($748)>>>0);
      if ($cmp1268) { __label__ = 430; break; } else { __label__ = 431; break; }
    case 430: // $if_then1270
      __label__ = 436; break;
    case 431: // $if_end1271
      __label__ = 432; break;
    case 432: // $do_body1272
      var $749=$have;
      var $cmp1273=(($749)|0)==0;
      if ($cmp1273) { __label__ = 433; break; } else { __label__ = 434; break; }
    case 433: // $if_then1275
      __label__ = 573; break;
    case 434: // $if_end1276
      var $750=$have;
      var $dec1277=(($750-1)|0);
      $have=$dec1277;
      var $751=$next;
      var $incdec_ptr1278=(($751+1)|0);
      $next=$incdec_ptr1278;
      var $752=HEAPU8[($751)];
      var $conv1279=(($752)&255);
      var $753=$bits;
      var $shl1280=$conv1279 << $753;
      var $754=$hold;
      var $add1281=(($754+$shl1280)|0);
      $hold=$add1281;
      var $755=$bits;
      var $add1282=(($755+8)|0);
      $bits=$add1282;
      __label__ = 435; break;
    case 435: // $do_end1284
      __label__ = 429; break;
    case 436: // $for_end1285
      __label__ = 437; break;
    case 437: // $do_body1286
      var $bits1287=(($last+1)|0);
      var $756=HEAPU8[($bits1287)];
      var $conv1288=(($756)&255);
      var $757=$hold;
      var $shr1289=$757 >>> (($conv1288)>>>0);
      $hold=$shr1289;
      var $bits1290=(($last+1)|0);
      var $758=HEAPU8[($bits1290)];
      var $conv1291=(($758)&255);
      var $759=$bits;
      var $sub1292=(($759-$conv1291)|0);
      $bits=$sub1292;
      __label__ = 438; break;
    case 438: // $do_end1294
      var $bits1295=(($last+1)|0);
      var $760=HEAPU8[($bits1295)];
      var $conv1296=(($760)&255);
      var $761=$state;
      var $back1297=(($761+7108)|0);
      var $762=HEAP32[(($back1297)>>2)];
      var $add1298=(($762+$conv1296)|0);
      HEAP32[(($back1297)>>2)]=$add1298;
      __label__ = 439; break;
    case 439: // $if_end1299
      __label__ = 440; break;
    case 440: // $do_body1300
      var $bits1301=(($here+1)|0);
      var $763=HEAPU8[($bits1301)];
      var $conv1302=(($763)&255);
      var $764=$hold;
      var $shr1303=$764 >>> (($conv1302)>>>0);
      $hold=$shr1303;
      var $bits1304=(($here+1)|0);
      var $765=HEAPU8[($bits1304)];
      var $conv1305=(($765)&255);
      var $766=$bits;
      var $sub1306=(($766-$conv1305)|0);
      $bits=$sub1306;
      __label__ = 441; break;
    case 441: // $do_end1308
      var $bits1309=(($here+1)|0);
      var $767=HEAPU8[($bits1309)];
      var $conv1310=(($767)&255);
      var $768=$state;
      var $back1311=(($768+7108)|0);
      var $769=HEAP32[(($back1311)>>2)];
      var $add1312=(($769+$conv1310)|0);
      HEAP32[(($back1311)>>2)]=$add1312;
      var $val1313=(($here+2)|0);
      var $770=HEAPU16[(($val1313)>>1)];
      var $conv1314=(($770)&65535);
      var $771=$state;
      var $length1315=(($771+64)|0);
      HEAP32[(($length1315)>>2)]=$conv1314;
      var $op1316=(($here)|0);
      var $772=HEAPU8[($op1316)];
      var $conv1317=(($772)&255);
      var $cmp1318=(($conv1317)|0)==0;
      if ($cmp1318) { __label__ = 442; break; } else { __label__ = 443; break; }
    case 442: // $if_then1320
      var $773=$state;
      var $mode1321=(($773)|0);
      HEAP32[(($mode1321)>>2)]=25;
      __label__ = 572; break;
    case 443: // $if_end1322
      var $op1323=(($here)|0);
      var $774=HEAPU8[($op1323)];
      var $conv1324=(($774)&255);
      var $and1325=$conv1324 & 32;
      var $tobool1326=(($and1325)|0)!=0;
      if ($tobool1326) { __label__ = 444; break; } else { __label__ = 445; break; }
    case 444: // $if_then1327
      var $775=$state;
      var $back1328=(($775+7108)|0);
      HEAP32[(($back1328)>>2)]=-1;
      var $776=$state;
      var $mode1329=(($776)|0);
      HEAP32[(($mode1329)>>2)]=11;
      __label__ = 572; break;
    case 445: // $if_end1330
      var $op1331=(($here)|0);
      var $777=HEAPU8[($op1331)];
      var $conv1332=(($777)&255);
      var $and1333=$conv1332 & 64;
      var $tobool1334=(($and1333)|0)!=0;
      if ($tobool1334) { __label__ = 446; break; } else { __label__ = 447; break; }
    case 446: // $if_then1335
      var $778=$strm_addr;
      var $msg1336=(($778+24)|0);
      HEAP32[(($msg1336)>>2)]=((STRING_TABLE.__str1428)|0);
      var $779=$state;
      var $mode1337=(($779)|0);
      HEAP32[(($mode1337)>>2)]=29;
      __label__ = 572; break;
    case 447: // $if_end1338
      var $op1339=(($here)|0);
      var $780=HEAPU8[($op1339)];
      var $conv1340=(($780)&255);
      var $and1341=$conv1340 & 15;
      var $781=$state;
      var $extra1342=(($781+72)|0);
      HEAP32[(($extra1342)>>2)]=$and1341;
      var $782=$state;
      var $mode1343=(($782)|0);
      HEAP32[(($mode1343)>>2)]=21;
      __label__ = 448; break;
    case 448: // $sw_bb1344
      var $783=$state;
      var $extra1345=(($783+72)|0);
      var $784=HEAP32[(($extra1345)>>2)];
      var $tobool1346=(($784)|0)!=0;
      if ($tobool1346) { __label__ = 449; break; } else { __label__ = 461; break; }
    case 449: // $if_then1347
      __label__ = 450; break;
    case 450: // $do_body1348
      __label__ = 451; break;
    case 451: // $while_cond1349
      var $785=$bits;
      var $786=$state;
      var $extra1350=(($786+72)|0);
      var $787=HEAPU32[(($extra1350)>>2)];
      var $cmp1351=(($785)>>>0) < (($787)>>>0);
      if ($cmp1351) { __label__ = 452; break; } else { __label__ = 457; break; }
    case 452: // $while_body1353
      __label__ = 453; break;
    case 453: // $do_body1354
      var $788=$have;
      var $cmp1355=(($788)|0)==0;
      if ($cmp1355) { __label__ = 454; break; } else { __label__ = 455; break; }
    case 454: // $if_then1357
      __label__ = 573; break;
    case 455: // $if_end1358
      var $789=$have;
      var $dec1359=(($789-1)|0);
      $have=$dec1359;
      var $790=$next;
      var $incdec_ptr1360=(($790+1)|0);
      $next=$incdec_ptr1360;
      var $791=HEAPU8[($790)];
      var $conv1361=(($791)&255);
      var $792=$bits;
      var $shl1362=$conv1361 << $792;
      var $793=$hold;
      var $add1363=(($793+$shl1362)|0);
      $hold=$add1363;
      var $794=$bits;
      var $add1364=(($794+8)|0);
      $bits=$add1364;
      __label__ = 456; break;
    case 456: // $do_end1366
      __label__ = 451; break;
    case 457: // $while_end1367
      __label__ = 458; break;
    case 458: // $do_end1369
      var $795=$hold;
      var $796=$state;
      var $extra1370=(($796+72)|0);
      var $797=HEAP32[(($extra1370)>>2)];
      var $shl1371=1 << $797;
      var $sub1372=(($shl1371-1)|0);
      var $and1373=$795 & $sub1372;
      var $798=$state;
      var $length1374=(($798+64)|0);
      var $799=HEAP32[(($length1374)>>2)];
      var $add1375=(($799+$and1373)|0);
      HEAP32[(($length1374)>>2)]=$add1375;
      __label__ = 459; break;
    case 459: // $do_body1376
      var $800=$state;
      var $extra1377=(($800+72)|0);
      var $801=HEAPU32[(($extra1377)>>2)];
      var $802=$hold;
      var $shr1378=$802 >>> (($801)>>>0);
      $hold=$shr1378;
      var $803=$state;
      var $extra1379=(($803+72)|0);
      var $804=HEAP32[(($extra1379)>>2)];
      var $805=$bits;
      var $sub1380=(($805-$804)|0);
      $bits=$sub1380;
      __label__ = 460; break;
    case 460: // $do_end1382
      var $806=$state;
      var $extra1383=(($806+72)|0);
      var $807=HEAP32[(($extra1383)>>2)];
      var $808=$state;
      var $back1384=(($808+7108)|0);
      var $809=HEAP32[(($back1384)>>2)];
      var $add1385=(($809+$807)|0);
      HEAP32[(($back1384)>>2)]=$add1385;
      __label__ = 461; break;
    case 461: // $if_end1386
      var $810=$state;
      var $length1387=(($810+64)|0);
      var $811=HEAP32[(($length1387)>>2)];
      var $812=$state;
      var $was=(($812+7112)|0);
      HEAP32[(($was)>>2)]=$811;
      var $813=$state;
      var $mode1388=(($813)|0);
      HEAP32[(($mode1388)>>2)]=22;
      __label__ = 462; break;
    case 462: // $sw_bb1389
      __label__ = 463; break;
    case 463: // $for_cond1390
      var $814=$hold;
      var $815=$state;
      var $distbits1391=(($815+88)|0);
      var $816=HEAP32[(($distbits1391)>>2)];
      var $shl1392=1 << $816;
      var $sub1393=(($shl1392-1)|0);
      var $and1394=$814 & $sub1393;
      var $817=$state;
      var $distcode1395=(($817+80)|0);
      var $818=HEAP32[(($distcode1395)>>2)];
      var $arrayidx1396=(($818+($and1394<<2))|0);
      var $819=$here;
      var $820=$arrayidx1396;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($819)>>1)]=HEAP16[(($820)>>1)];HEAP16[(($819+2)>>1)]=HEAP16[(($820+2)>>1)];
      var $bits1397=(($here+1)|0);
      var $821=HEAPU8[($bits1397)];
      var $conv1398=(($821)&255);
      var $822=$bits;
      var $cmp1399=(($conv1398)>>>0) <= (($822)>>>0);
      if ($cmp1399) { __label__ = 464; break; } else { __label__ = 465; break; }
    case 464: // $if_then1401
      __label__ = 470; break;
    case 465: // $if_end1402
      __label__ = 466; break;
    case 466: // $do_body1403
      var $823=$have;
      var $cmp1404=(($823)|0)==0;
      if ($cmp1404) { __label__ = 467; break; } else { __label__ = 468; break; }
    case 467: // $if_then1406
      __label__ = 573; break;
    case 468: // $if_end1407
      var $824=$have;
      var $dec1408=(($824-1)|0);
      $have=$dec1408;
      var $825=$next;
      var $incdec_ptr1409=(($825+1)|0);
      $next=$incdec_ptr1409;
      var $826=HEAPU8[($825)];
      var $conv1410=(($826)&255);
      var $827=$bits;
      var $shl1411=$conv1410 << $827;
      var $828=$hold;
      var $add1412=(($828+$shl1411)|0);
      $hold=$add1412;
      var $829=$bits;
      var $add1413=(($829+8)|0);
      $bits=$add1413;
      __label__ = 469; break;
    case 469: // $do_end1415
      __label__ = 463; break;
    case 470: // $for_end1416
      var $op1417=(($here)|0);
      var $830=HEAPU8[($op1417)];
      var $conv1418=(($830)&255);
      var $and1419=$conv1418 & 240;
      var $cmp1420=(($and1419)|0)==0;
      if ($cmp1420) { __label__ = 471; break; } else { __label__ = 482; break; }
    case 471: // $if_then1422
      var $831=$last;
      var $832=$here;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($831)>>1)]=HEAP16[(($832)>>1)];HEAP16[(($831+2)>>1)]=HEAP16[(($832+2)>>1)];
      __label__ = 472; break;
    case 472: // $for_cond1423
      var $val1424=(($last+2)|0);
      var $833=HEAPU16[(($val1424)>>1)];
      var $conv1425=(($833)&65535);
      var $834=$hold;
      var $bits1426=(($last+1)|0);
      var $835=HEAPU8[($bits1426)];
      var $conv1427=(($835)&255);
      var $op1428=(($last)|0);
      var $836=HEAPU8[($op1428)];
      var $conv1429=(($836)&255);
      var $add1430=(($conv1427+$conv1429)|0);
      var $shl1431=1 << $add1430;
      var $sub1432=(($shl1431-1)|0);
      var $and1433=$834 & $sub1432;
      var $bits1434=(($last+1)|0);
      var $837=HEAPU8[($bits1434)];
      var $conv1435=(($837)&255);
      var $shr1436=$and1433 >>> (($conv1435)>>>0);
      var $add1437=(($conv1425+$shr1436)|0);
      var $838=$state;
      var $distcode1438=(($838+80)|0);
      var $839=HEAP32[(($distcode1438)>>2)];
      var $arrayidx1439=(($839+($add1437<<2))|0);
      var $840=$here;
      var $841=$arrayidx1439;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($840)>>1)]=HEAP16[(($841)>>1)];HEAP16[(($840+2)>>1)]=HEAP16[(($841+2)>>1)];
      var $bits1440=(($last+1)|0);
      var $842=HEAPU8[($bits1440)];
      var $conv1441=(($842)&255);
      var $bits1442=(($here+1)|0);
      var $843=HEAPU8[($bits1442)];
      var $conv1443=(($843)&255);
      var $add1444=(($conv1441+$conv1443)|0);
      var $844=$bits;
      var $cmp1445=(($add1444)>>>0) <= (($844)>>>0);
      if ($cmp1445) { __label__ = 473; break; } else { __label__ = 474; break; }
    case 473: // $if_then1447
      __label__ = 479; break;
    case 474: // $if_end1448
      __label__ = 475; break;
    case 475: // $do_body1449
      var $845=$have;
      var $cmp1450=(($845)|0)==0;
      if ($cmp1450) { __label__ = 476; break; } else { __label__ = 477; break; }
    case 476: // $if_then1452
      __label__ = 573; break;
    case 477: // $if_end1453
      var $846=$have;
      var $dec1454=(($846-1)|0);
      $have=$dec1454;
      var $847=$next;
      var $incdec_ptr1455=(($847+1)|0);
      $next=$incdec_ptr1455;
      var $848=HEAPU8[($847)];
      var $conv1456=(($848)&255);
      var $849=$bits;
      var $shl1457=$conv1456 << $849;
      var $850=$hold;
      var $add1458=(($850+$shl1457)|0);
      $hold=$add1458;
      var $851=$bits;
      var $add1459=(($851+8)|0);
      $bits=$add1459;
      __label__ = 478; break;
    case 478: // $do_end1461
      __label__ = 472; break;
    case 479: // $for_end1462
      __label__ = 480; break;
    case 480: // $do_body1463
      var $bits1464=(($last+1)|0);
      var $852=HEAPU8[($bits1464)];
      var $conv1465=(($852)&255);
      var $853=$hold;
      var $shr1466=$853 >>> (($conv1465)>>>0);
      $hold=$shr1466;
      var $bits1467=(($last+1)|0);
      var $854=HEAPU8[($bits1467)];
      var $conv1468=(($854)&255);
      var $855=$bits;
      var $sub1469=(($855-$conv1468)|0);
      $bits=$sub1469;
      __label__ = 481; break;
    case 481: // $do_end1471
      var $bits1472=(($last+1)|0);
      var $856=HEAPU8[($bits1472)];
      var $conv1473=(($856)&255);
      var $857=$state;
      var $back1474=(($857+7108)|0);
      var $858=HEAP32[(($back1474)>>2)];
      var $add1475=(($858+$conv1473)|0);
      HEAP32[(($back1474)>>2)]=$add1475;
      __label__ = 482; break;
    case 482: // $if_end1476
      __label__ = 483; break;
    case 483: // $do_body1477
      var $bits1478=(($here+1)|0);
      var $859=HEAPU8[($bits1478)];
      var $conv1479=(($859)&255);
      var $860=$hold;
      var $shr1480=$860 >>> (($conv1479)>>>0);
      $hold=$shr1480;
      var $bits1481=(($here+1)|0);
      var $861=HEAPU8[($bits1481)];
      var $conv1482=(($861)&255);
      var $862=$bits;
      var $sub1483=(($862-$conv1482)|0);
      $bits=$sub1483;
      __label__ = 484; break;
    case 484: // $do_end1485
      var $bits1486=(($here+1)|0);
      var $863=HEAPU8[($bits1486)];
      var $conv1487=(($863)&255);
      var $864=$state;
      var $back1488=(($864+7108)|0);
      var $865=HEAP32[(($back1488)>>2)];
      var $add1489=(($865+$conv1487)|0);
      HEAP32[(($back1488)>>2)]=$add1489;
      var $op1490=(($here)|0);
      var $866=HEAPU8[($op1490)];
      var $conv1491=(($866)&255);
      var $and1492=$conv1491 & 64;
      var $tobool1493=(($and1492)|0)!=0;
      if ($tobool1493) { __label__ = 485; break; } else { __label__ = 486; break; }
    case 485: // $if_then1494
      var $867=$strm_addr;
      var $msg1495=(($867+24)|0);
      HEAP32[(($msg1495)>>2)]=((STRING_TABLE.__str15)|0);
      var $868=$state;
      var $mode1496=(($868)|0);
      HEAP32[(($mode1496)>>2)]=29;
      __label__ = 572; break;
    case 486: // $if_end1497
      var $val1498=(($here+2)|0);
      var $869=HEAPU16[(($val1498)>>1)];
      var $conv1499=(($869)&65535);
      var $870=$state;
      var $offset=(($870+68)|0);
      HEAP32[(($offset)>>2)]=$conv1499;
      var $op1500=(($here)|0);
      var $871=HEAPU8[($op1500)];
      var $conv1501=(($871)&255);
      var $and1502=$conv1501 & 15;
      var $872=$state;
      var $extra1503=(($872+72)|0);
      HEAP32[(($extra1503)>>2)]=$and1502;
      var $873=$state;
      var $mode1504=(($873)|0);
      HEAP32[(($mode1504)>>2)]=23;
      __label__ = 487; break;
    case 487: // $sw_bb1505
      var $874=$state;
      var $extra1506=(($874+72)|0);
      var $875=HEAP32[(($extra1506)>>2)];
      var $tobool1507=(($875)|0)!=0;
      if ($tobool1507) { __label__ = 488; break; } else { __label__ = 500; break; }
    case 488: // $if_then1508
      __label__ = 489; break;
    case 489: // $do_body1509
      __label__ = 490; break;
    case 490: // $while_cond1510
      var $876=$bits;
      var $877=$state;
      var $extra1511=(($877+72)|0);
      var $878=HEAPU32[(($extra1511)>>2)];
      var $cmp1512=(($876)>>>0) < (($878)>>>0);
      if ($cmp1512) { __label__ = 491; break; } else { __label__ = 496; break; }
    case 491: // $while_body1514
      __label__ = 492; break;
    case 492: // $do_body1515
      var $879=$have;
      var $cmp1516=(($879)|0)==0;
      if ($cmp1516) { __label__ = 493; break; } else { __label__ = 494; break; }
    case 493: // $if_then1518
      __label__ = 573; break;
    case 494: // $if_end1519
      var $880=$have;
      var $dec1520=(($880-1)|0);
      $have=$dec1520;
      var $881=$next;
      var $incdec_ptr1521=(($881+1)|0);
      $next=$incdec_ptr1521;
      var $882=HEAPU8[($881)];
      var $conv1522=(($882)&255);
      var $883=$bits;
      var $shl1523=$conv1522 << $883;
      var $884=$hold;
      var $add1524=(($884+$shl1523)|0);
      $hold=$add1524;
      var $885=$bits;
      var $add1525=(($885+8)|0);
      $bits=$add1525;
      __label__ = 495; break;
    case 495: // $do_end1527
      __label__ = 490; break;
    case 496: // $while_end1528
      __label__ = 497; break;
    case 497: // $do_end1530
      var $886=$hold;
      var $887=$state;
      var $extra1531=(($887+72)|0);
      var $888=HEAP32[(($extra1531)>>2)];
      var $shl1532=1 << $888;
      var $sub1533=(($shl1532-1)|0);
      var $and1534=$886 & $sub1533;
      var $889=$state;
      var $offset1535=(($889+68)|0);
      var $890=HEAP32[(($offset1535)>>2)];
      var $add1536=(($890+$and1534)|0);
      HEAP32[(($offset1535)>>2)]=$add1536;
      __label__ = 498; break;
    case 498: // $do_body1537
      var $891=$state;
      var $extra1538=(($891+72)|0);
      var $892=HEAPU32[(($extra1538)>>2)];
      var $893=$hold;
      var $shr1539=$893 >>> (($892)>>>0);
      $hold=$shr1539;
      var $894=$state;
      var $extra1540=(($894+72)|0);
      var $895=HEAP32[(($extra1540)>>2)];
      var $896=$bits;
      var $sub1541=(($896-$895)|0);
      $bits=$sub1541;
      __label__ = 499; break;
    case 499: // $do_end1543
      var $897=$state;
      var $extra1544=(($897+72)|0);
      var $898=HEAP32[(($extra1544)>>2)];
      var $899=$state;
      var $back1545=(($899+7108)|0);
      var $900=HEAP32[(($back1545)>>2)];
      var $add1546=(($900+$898)|0);
      HEAP32[(($back1545)>>2)]=$add1546;
      __label__ = 500; break;
    case 500: // $if_end1547
      var $901=$state;
      var $mode1548=(($901)|0);
      HEAP32[(($mode1548)>>2)]=24;
      __label__ = 501; break;
    case 501: // $sw_bb1549
      var $902=$left;
      var $cmp1550=(($902)|0)==0;
      if ($cmp1550) { __label__ = 502; break; } else { __label__ = 503; break; }
    case 502: // $if_then1552
      __label__ = 573; break;
    case 503: // $if_end1553
      var $903=$out;
      var $904=$left;
      var $sub1554=(($903-$904)|0);
      $copy=$sub1554;
      var $905=$state;
      var $offset1555=(($905+68)|0);
      var $906=HEAPU32[(($offset1555)>>2)];
      var $907=$copy;
      var $cmp1556=(($906)>>>0) > (($907)>>>0);
      if ($cmp1556) { __label__ = 504; break; } else { __label__ = 514; break; }
    case 504: // $if_then1558
      var $908=$state;
      var $offset1559=(($908+68)|0);
      var $909=HEAP32[(($offset1559)>>2)];
      var $910=$copy;
      var $sub1560=(($909-$910)|0);
      $copy=$sub1560;
      var $911=$copy;
      var $912=$state;
      var $whave=(($912+44)|0);
      var $913=HEAPU32[(($whave)>>2)];
      var $cmp1561=(($911)>>>0) > (($913)>>>0);
      if ($cmp1561) { __label__ = 505; break; } else { __label__ = 508; break; }
    case 505: // $if_then1563
      var $914=$state;
      var $sane=(($914+7104)|0);
      var $915=HEAP32[(($sane)>>2)];
      var $tobool1564=(($915)|0)!=0;
      if ($tobool1564) { __label__ = 506; break; } else { __label__ = 507; break; }
    case 506: // $if_then1565
      var $916=$strm_addr;
      var $msg1566=(($916+24)|0);
      HEAP32[(($msg1566)>>2)]=((STRING_TABLE.__str16)|0);
      var $917=$state;
      var $mode1567=(($917)|0);
      HEAP32[(($mode1567)>>2)]=29;
      __label__ = 572; break;
    case 507: // $if_end1568
      __label__ = 508; break;
    case 508: // $if_end1569
      var $918=$copy;
      var $919=$state;
      var $wnext=(($919+48)|0);
      var $920=HEAPU32[(($wnext)>>2)];
      var $cmp1570=(($918)>>>0) > (($920)>>>0);
      if ($cmp1570) { __label__ = 509; break; } else { __label__ = 510; break; }
    case 509: // $if_then1572
      var $921=$state;
      var $wnext1573=(($921+48)|0);
      var $922=HEAP32[(($wnext1573)>>2)];
      var $923=$copy;
      var $sub1574=(($923-$922)|0);
      $copy=$sub1574;
      var $924=$state;
      var $window=(($924+52)|0);
      var $925=HEAP32[(($window)>>2)];
      var $926=$state;
      var $wsize=(($926+40)|0);
      var $927=HEAP32[(($wsize)>>2)];
      var $928=$copy;
      var $sub1575=(($927-$928)|0);
      var $add_ptr1576=(($925+$sub1575)|0);
      $from=$add_ptr1576;
      __label__ = 511; break;
    case 510: // $if_else1577
      var $929=$state;
      var $window1578=(($929+52)|0);
      var $930=HEAP32[(($window1578)>>2)];
      var $931=$state;
      var $wnext1579=(($931+48)|0);
      var $932=HEAP32[(($wnext1579)>>2)];
      var $933=$copy;
      var $sub1580=(($932-$933)|0);
      var $add_ptr1581=(($930+$sub1580)|0);
      $from=$add_ptr1581;
      __label__ = 511; break;
    case 511: // $if_end1582
      var $934=$copy;
      var $935=$state;
      var $length1583=(($935+64)|0);
      var $936=HEAPU32[(($length1583)>>2)];
      var $cmp1584=(($934)>>>0) > (($936)>>>0);
      if ($cmp1584) { __label__ = 512; break; } else { __label__ = 513; break; }
    case 512: // $if_then1586
      var $937=$state;
      var $length1587=(($937+64)|0);
      var $938=HEAP32[(($length1587)>>2)];
      $copy=$938;
      __label__ = 513; break;
    case 513: // $if_end1588
      __label__ = 515; break;
    case 514: // $if_else1589
      var $939=$put;
      var $940=$state;
      var $offset1590=(($940+68)|0);
      var $941=HEAP32[(($offset1590)>>2)];
      var $idx_neg=(((-$941))|0);
      var $add_ptr1591=(($939+$idx_neg)|0);
      $from=$add_ptr1591;
      var $942=$state;
      var $length1592=(($942+64)|0);
      var $943=HEAP32[(($length1592)>>2)];
      $copy=$943;
      __label__ = 515; break;
    case 515: // $if_end1593
      var $944=$copy;
      var $945=$left;
      var $cmp1594=(($944)>>>0) > (($945)>>>0);
      if ($cmp1594) { __label__ = 516; break; } else { __label__ = 517; break; }
    case 516: // $if_then1596
      var $946=$left;
      $copy=$946;
      __label__ = 517; break;
    case 517: // $if_end1597
      var $947=$copy;
      var $948=$left;
      var $sub1598=(($948-$947)|0);
      $left=$sub1598;
      var $949=$copy;
      var $950=$state;
      var $length1599=(($950+64)|0);
      var $951=HEAP32[(($length1599)>>2)];
      var $sub1600=(($951-$949)|0);
      HEAP32[(($length1599)>>2)]=$sub1600;
      __label__ = 518; break;
    case 518: // $do_body1601
      var $952=$from;
      var $incdec_ptr1602=(($952+1)|0);
      $from=$incdec_ptr1602;
      var $953=HEAP8[($952)];
      var $954=$put;
      var $incdec_ptr1603=(($954+1)|0);
      $put=$incdec_ptr1603;
      HEAP8[($954)]=$953;
      __label__ = 519; break;
    case 519: // $do_cond1604
      var $955=$copy;
      var $dec1605=(($955-1)|0);
      $copy=$dec1605;
      var $tobool1606=(($dec1605)|0)!=0;
      if ($tobool1606) { __label__ = 518; break; } else { __label__ = 520; break; }
    case 520: // $do_end1607
      var $956=$state;
      var $length1608=(($956+64)|0);
      var $957=HEAP32[(($length1608)>>2)];
      var $cmp1609=(($957)|0)==0;
      if ($cmp1609) { __label__ = 521; break; } else { __label__ = 522; break; }
    case 521: // $if_then1611
      var $958=$state;
      var $mode1612=(($958)|0);
      HEAP32[(($mode1612)>>2)]=20;
      __label__ = 522; break;
    case 522: // $if_end1613
      __label__ = 572; break;
    case 523: // $sw_bb1614
      var $959=$left;
      var $cmp1615=(($959)|0)==0;
      if ($cmp1615) { __label__ = 524; break; } else { __label__ = 525; break; }
    case 524: // $if_then1617
      __label__ = 573; break;
    case 525: // $if_end1618
      var $960=$state;
      var $length1619=(($960+64)|0);
      var $961=HEAP32[(($length1619)>>2)];
      var $conv1620=(($961) & 255);
      var $962=$put;
      var $incdec_ptr1621=(($962+1)|0);
      $put=$incdec_ptr1621;
      HEAP8[($962)]=$conv1620;
      var $963=$left;
      var $dec1622=(($963-1)|0);
      $left=$dec1622;
      var $964=$state;
      var $mode1623=(($964)|0);
      HEAP32[(($mode1623)>>2)]=20;
      __label__ = 572; break;
    case 526: // $sw_bb1624
      var $965=$state;
      var $wrap1625=(($965+8)|0);
      var $966=HEAP32[(($wrap1625)>>2)];
      var $tobool1626=(($966)|0)!=0;
      if ($tobool1626) { __label__ = 527; break; } else { __label__ = 549; break; }
    case 527: // $if_then1627
      __label__ = 528; break;
    case 528: // $do_body1628
      __label__ = 529; break;
    case 529: // $while_cond1629
      var $967=$bits;
      var $cmp1630=(($967)>>>0) < 32;
      if ($cmp1630) { __label__ = 530; break; } else { __label__ = 535; break; }
    case 530: // $while_body1632
      __label__ = 531; break;
    case 531: // $do_body1633
      var $968=$have;
      var $cmp1634=(($968)|0)==0;
      if ($cmp1634) { __label__ = 532; break; } else { __label__ = 533; break; }
    case 532: // $if_then1636
      __label__ = 573; break;
    case 533: // $if_end1637
      var $969=$have;
      var $dec1638=(($969-1)|0);
      $have=$dec1638;
      var $970=$next;
      var $incdec_ptr1639=(($970+1)|0);
      $next=$incdec_ptr1639;
      var $971=HEAPU8[($970)];
      var $conv1640=(($971)&255);
      var $972=$bits;
      var $shl1641=$conv1640 << $972;
      var $973=$hold;
      var $add1642=(($973+$shl1641)|0);
      $hold=$add1642;
      var $974=$bits;
      var $add1643=(($974+8)|0);
      $bits=$add1643;
      __label__ = 534; break;
    case 534: // $do_end1645
      __label__ = 529; break;
    case 535: // $while_end1646
      __label__ = 536; break;
    case 536: // $do_end1648
      var $975=$left;
      var $976=$out;
      var $sub1649=(($976-$975)|0);
      $out=$sub1649;
      var $977=$out;
      var $978=$strm_addr;
      var $total_out=(($978+20)|0);
      var $979=HEAP32[(($total_out)>>2)];
      var $add1650=(($979+$977)|0);
      HEAP32[(($total_out)>>2)]=$add1650;
      var $980=$out;
      var $981=$state;
      var $total=(($981+28)|0);
      var $982=HEAP32[(($total)>>2)];
      var $add1651=(($982+$980)|0);
      HEAP32[(($total)>>2)]=$add1651;
      var $983=$out;
      var $tobool1652=(($983)|0)!=0;
      if ($tobool1652) { __label__ = 537; break; } else { __label__ = 541; break; }
    case 537: // $if_then1653
      var $984=$state;
      var $flags1654=(($984+16)|0);
      var $985=HEAP32[(($flags1654)>>2)];
      var $tobool1655=(($985)|0)!=0;
      if ($tobool1655) { __label__ = 538; break; } else { __label__ = 539; break; }
    case 538: // $cond_true1656
      var $986=$state;
      var $check1657=(($986+24)|0);
      var $987=HEAP32[(($check1657)>>2)];
      var $988=$put;
      var $989=$out;
      var $idx_neg1658=(((-$989))|0);
      var $add_ptr1659=(($988+$idx_neg1658)|0);
      var $990=$out;
      var $call1660=_crc32($987, $add_ptr1659, $990);
      var $cond1667 = $call1660;__label__ = 540; break;
    case 539: // $cond_false1661
      var $991=$state;
      var $check1662=(($991+24)|0);
      var $992=HEAP32[(($check1662)>>2)];
      var $993=$put;
      var $994=$out;
      var $idx_neg1663=(((-$994))|0);
      var $add_ptr1664=(($993+$idx_neg1663)|0);
      var $995=$out;
      var $call1665=_adler32($992, $add_ptr1664, $995);
      var $cond1667 = $call1665;__label__ = 540; break;
    case 540: // $cond_end1666
      var $cond1667;
      var $996=$state;
      var $check1668=(($996+24)|0);
      HEAP32[(($check1668)>>2)]=$cond1667;
      var $997=$strm_addr;
      var $adler1669=(($997+48)|0);
      HEAP32[(($adler1669)>>2)]=$cond1667;
      __label__ = 541; break;
    case 541: // $if_end1670
      var $998=$left;
      $out=$998;
      var $999=$state;
      var $flags1671=(($999+16)|0);
      var $1000=HEAP32[(($flags1671)>>2)];
      var $tobool1672=(($1000)|0)!=0;
      if ($tobool1672) { __label__ = 542; break; } else { __label__ = 543; break; }
    case 542: // $cond_true1673
      var $1001=$hold;
      var $cond1687 = $1001;__label__ = 544; break;
    case 543: // $cond_false1674
      var $1002=$hold;
      var $shr1675=$1002 >>> 24;
      var $and1676=$shr1675 & 255;
      var $1003=$hold;
      var $shr1677=$1003 >>> 8;
      var $and1678=$shr1677 & 65280;
      var $add1679=(($and1676+$and1678)|0);
      var $1004=$hold;
      var $and1680=$1004 & 65280;
      var $shl1681=$and1680 << 8;
      var $add1682=(($add1679+$shl1681)|0);
      var $1005=$hold;
      var $and1683=$1005 & 255;
      var $shl1684=$and1683 << 24;
      var $add1685=(($add1682+$shl1684)|0);
      var $cond1687 = $add1685;__label__ = 544; break;
    case 544: // $cond_end1686
      var $cond1687;
      var $1006=$state;
      var $check1688=(($1006+24)|0);
      var $1007=HEAP32[(($check1688)>>2)];
      var $cmp1689=(($cond1687)|0)!=(($1007)|0);
      if ($cmp1689) { __label__ = 545; break; } else { __label__ = 546; break; }
    case 545: // $if_then1691
      var $1008=$strm_addr;
      var $msg1692=(($1008+24)|0);
      HEAP32[(($msg1692)>>2)]=((STRING_TABLE.__str17)|0);
      var $1009=$state;
      var $mode1693=(($1009)|0);
      HEAP32[(($mode1693)>>2)]=29;
      __label__ = 572; break;
    case 546: // $if_end1694
      __label__ = 547; break;
    case 547: // $do_body1695
      $hold=0;
      $bits=0;
      __label__ = 548; break;
    case 548: // $do_end1697
      __label__ = 549; break;
    case 549: // $if_end1698
      var $1010=$state;
      var $mode1699=(($1010)|0);
      HEAP32[(($mode1699)>>2)]=27;
      __label__ = 550; break;
    case 550: // $sw_bb1700
      var $1011=$state;
      var $wrap1701=(($1011+8)|0);
      var $1012=HEAP32[(($wrap1701)>>2)];
      var $tobool1702=(($1012)|0)!=0;
      if ($tobool1702) { __label__ = 551; break; } else { __label__ = 566; break; }
    case 551: // $land_lhs_true1703
      var $1013=$state;
      var $flags1704=(($1013+16)|0);
      var $1014=HEAP32[(($flags1704)>>2)];
      var $tobool1705=(($1014)|0)!=0;
      if ($tobool1705) { __label__ = 552; break; } else { __label__ = 566; break; }
    case 552: // $if_then1706
      __label__ = 553; break;
    case 553: // $do_body1707
      __label__ = 554; break;
    case 554: // $while_cond1708
      var $1015=$bits;
      var $cmp1709=(($1015)>>>0) < 32;
      if ($cmp1709) { __label__ = 555; break; } else { __label__ = 560; break; }
    case 555: // $while_body1711
      __label__ = 556; break;
    case 556: // $do_body1712
      var $1016=$have;
      var $cmp1713=(($1016)|0)==0;
      if ($cmp1713) { __label__ = 557; break; } else { __label__ = 558; break; }
    case 557: // $if_then1715
      __label__ = 573; break;
    case 558: // $if_end1716
      var $1017=$have;
      var $dec1717=(($1017-1)|0);
      $have=$dec1717;
      var $1018=$next;
      var $incdec_ptr1718=(($1018+1)|0);
      $next=$incdec_ptr1718;
      var $1019=HEAPU8[($1018)];
      var $conv1719=(($1019)&255);
      var $1020=$bits;
      var $shl1720=$conv1719 << $1020;
      var $1021=$hold;
      var $add1721=(($1021+$shl1720)|0);
      $hold=$add1721;
      var $1022=$bits;
      var $add1722=(($1022+8)|0);
      $bits=$add1722;
      __label__ = 559; break;
    case 559: // $do_end1724
      __label__ = 554; break;
    case 560: // $while_end1725
      __label__ = 561; break;
    case 561: // $do_end1727
      var $1023=$hold;
      var $1024=$state;
      var $total1728=(($1024+28)|0);
      var $1025=HEAP32[(($total1728)>>2)];
      var $cmp1729=(($1023)|0)!=(($1025)|0);
      if ($cmp1729) { __label__ = 562; break; } else { __label__ = 563; break; }
    case 562: // $if_then1731
      var $1026=$strm_addr;
      var $msg1732=(($1026+24)|0);
      HEAP32[(($msg1732)>>2)]=((STRING_TABLE.__str18)|0);
      var $1027=$state;
      var $mode1733=(($1027)|0);
      HEAP32[(($mode1733)>>2)]=29;
      __label__ = 572; break;
    case 563: // $if_end1734
      __label__ = 564; break;
    case 564: // $do_body1735
      $hold=0;
      $bits=0;
      __label__ = 565; break;
    case 565: // $do_end1737
      __label__ = 566; break;
    case 566: // $if_end1738
      var $1028=$state;
      var $mode1739=(($1028)|0);
      HEAP32[(($mode1739)>>2)]=28;
      __label__ = 567; break;
    case 567: // $sw_bb1740
      $ret=1;
      __label__ = 573; break;
    case 568: // $sw_bb1741
      $ret=-3;
      __label__ = 573; break;
    case 569: // $sw_bb1742
      $retval=-4;
      __label__ = 595; break;
    case 570: // $sw_bb1743
      __label__ = 571; break;
    case 571: // $sw_default
      $retval=-2;
      __label__ = 595; break;
    case 572: // $sw_epilog1744
      __label__ = 11; break;
    case 573: // $inf_leave
      __label__ = 574; break;
    case 574: // $do_body1745
      var $1029=$put;
      var $1030=$strm_addr;
      var $next_out1746=(($1030+12)|0);
      HEAP32[(($next_out1746)>>2)]=$1029;
      var $1031=$left;
      var $1032=$strm_addr;
      var $avail_out1747=(($1032+16)|0);
      HEAP32[(($avail_out1747)>>2)]=$1031;
      var $1033=$next;
      var $1034=$strm_addr;
      var $next_in1748=(($1034)|0);
      HEAP32[(($next_in1748)>>2)]=$1033;
      var $1035=$have;
      var $1036=$strm_addr;
      var $avail_in1749=(($1036+4)|0);
      HEAP32[(($avail_in1749)>>2)]=$1035;
      var $1037=$hold;
      var $1038=$state;
      var $hold1750=(($1038+56)|0);
      HEAP32[(($hold1750)>>2)]=$1037;
      var $1039=$bits;
      var $1040=$state;
      var $bits1751=(($1040+60)|0);
      HEAP32[(($bits1751)>>2)]=$1039;
      __label__ = 575; break;
    case 575: // $do_end1753
      var $1041=$state;
      var $wsize1754=(($1041+40)|0);
      var $1042=HEAP32[(($wsize1754)>>2)];
      var $tobool1755=(($1042)|0)!=0;
      if ($tobool1755) { __label__ = 578; break; } else { __label__ = 576; break; }
    case 576: // $lor_lhs_false1756
      var $1043=$state;
      var $mode1757=(($1043)|0);
      var $1044=HEAPU32[(($mode1757)>>2)];
      var $cmp1758=(($1044)>>>0) < 26;
      if ($cmp1758) { __label__ = 577; break; } else { __label__ = 581; break; }
    case 577: // $land_lhs_true1760
      var $1045=$out;
      var $1046=$strm_addr;
      var $avail_out1761=(($1046+16)|0);
      var $1047=HEAP32[(($avail_out1761)>>2)];
      var $cmp1762=(($1045)|0)!=(($1047)|0);
      if ($cmp1762) { __label__ = 578; break; } else { __label__ = 581; break; }
    case 578: // $if_then1764
      var $1048=$strm_addr;
      var $1049=$out;
      var $call1765=_updatewindow($1048, $1049);
      var $tobool1766=(($call1765)|0)!=0;
      if ($tobool1766) { __label__ = 579; break; } else { __label__ = 580; break; }
    case 579: // $if_then1767
      var $1050=$state;
      var $mode1768=(($1050)|0);
      HEAP32[(($mode1768)>>2)]=30;
      $retval=-4;
      __label__ = 595; break;
    case 580: // $if_end1769
      __label__ = 581; break;
    case 581: // $if_end1770
      var $1051=$strm_addr;
      var $avail_in1771=(($1051+4)|0);
      var $1052=HEAP32[(($avail_in1771)>>2)];
      var $1053=$in;
      var $sub1772=(($1053-$1052)|0);
      $in=$sub1772;
      var $1054=$strm_addr;
      var $avail_out1773=(($1054+16)|0);
      var $1055=HEAP32[(($avail_out1773)>>2)];
      var $1056=$out;
      var $sub1774=(($1056-$1055)|0);
      $out=$sub1774;
      var $1057=$in;
      var $1058=$strm_addr;
      var $total_in=(($1058+8)|0);
      var $1059=HEAP32[(($total_in)>>2)];
      var $add1775=(($1059+$1057)|0);
      HEAP32[(($total_in)>>2)]=$add1775;
      var $1060=$out;
      var $1061=$strm_addr;
      var $total_out1776=(($1061+20)|0);
      var $1062=HEAP32[(($total_out1776)>>2)];
      var $add1777=(($1062+$1060)|0);
      HEAP32[(($total_out1776)>>2)]=$add1777;
      var $1063=$out;
      var $1064=$state;
      var $total1778=(($1064+28)|0);
      var $1065=HEAP32[(($total1778)>>2)];
      var $add1779=(($1065+$1063)|0);
      HEAP32[(($total1778)>>2)]=$add1779;
      var $1066=$state;
      var $wrap1780=(($1066+8)|0);
      var $1067=HEAP32[(($wrap1780)>>2)];
      var $tobool1781=(($1067)|0)!=0;
      if ($tobool1781) { __label__ = 582; break; } else { __label__ = 587; break; }
    case 582: // $land_lhs_true1782
      var $1068=$out;
      var $tobool1783=(($1068)|0)!=0;
      if ($tobool1783) { __label__ = 583; break; } else { __label__ = 587; break; }
    case 583: // $if_then1784
      var $1069=$state;
      var $flags1785=(($1069+16)|0);
      var $1070=HEAP32[(($flags1785)>>2)];
      var $tobool1786=(($1070)|0)!=0;
      if ($tobool1786) { __label__ = 584; break; } else { __label__ = 585; break; }
    case 584: // $cond_true1787
      var $1071=$state;
      var $check1788=(($1071+24)|0);
      var $1072=HEAP32[(($check1788)>>2)];
      var $1073=$strm_addr;
      var $next_out1789=(($1073+12)|0);
      var $1074=HEAP32[(($next_out1789)>>2)];
      var $1075=$out;
      var $idx_neg1790=(((-$1075))|0);
      var $add_ptr1791=(($1074+$idx_neg1790)|0);
      var $1076=$out;
      var $call1792=_crc32($1072, $add_ptr1791, $1076);
      var $cond1800 = $call1792;__label__ = 586; break;
    case 585: // $cond_false1793
      var $1077=$state;
      var $check1794=(($1077+24)|0);
      var $1078=HEAP32[(($check1794)>>2)];
      var $1079=$strm_addr;
      var $next_out1795=(($1079+12)|0);
      var $1080=HEAP32[(($next_out1795)>>2)];
      var $1081=$out;
      var $idx_neg1796=(((-$1081))|0);
      var $add_ptr1797=(($1080+$idx_neg1796)|0);
      var $1082=$out;
      var $call1798=_adler32($1078, $add_ptr1797, $1082);
      var $cond1800 = $call1798;__label__ = 586; break;
    case 586: // $cond_end1799
      var $cond1800;
      var $1083=$state;
      var $check1801=(($1083+24)|0);
      HEAP32[(($check1801)>>2)]=$cond1800;
      var $1084=$strm_addr;
      var $adler1802=(($1084+48)|0);
      HEAP32[(($adler1802)>>2)]=$cond1800;
      __label__ = 587; break;
    case 587: // $if_end1803
      var $1085=$state;
      var $bits1804=(($1085+60)|0);
      var $1086=HEAP32[(($bits1804)>>2)];
      var $1087=$state;
      var $last1805=(($1087+4)|0);
      var $1088=HEAP32[(($last1805)>>2)];
      var $tobool1806=(($1088)|0)!=0;
      var $cond1807=$tobool1806 ? 64 : 0;
      var $add1808=(($1086+$cond1807)|0);
      var $1089=$state;
      var $mode1809=(($1089)|0);
      var $1090=HEAP32[(($mode1809)>>2)];
      var $cmp1810=(($1090)|0)==11;
      var $cond1812=$cmp1810 ? 128 : 0;
      var $add1813=(($add1808+$cond1812)|0);
      var $1091=$state;
      var $mode1814=(($1091)|0);
      var $1092=HEAP32[(($mode1814)>>2)];
      var $cmp1815=(($1092)|0)==19;
      if ($cmp1815) { var $1095 = 1;__label__ = 589; break; } else { __label__ = 588; break; }
    case 588: // $lor_rhs
      var $1093=$state;
      var $mode1817=(($1093)|0);
      var $1094=HEAP32[(($mode1817)>>2)];
      var $cmp1818=(($1094)|0)==14;
      var $1095 = $cmp1818;__label__ = 589; break;
    case 589: // $lor_end
      var $1095;
      var $cond1820=$1095 ? 256 : 0;
      var $add1821=(($add1813+$cond1820)|0);
      var $1096=$strm_addr;
      var $data_type=(($1096+44)|0);
      HEAP32[(($data_type)>>2)]=$add1821;
      var $1097=$in;
      var $cmp1822=(($1097)|0)==0;
      if ($cmp1822) { __label__ = 590; break; } else { __label__ = 591; break; }
    case 590: // $land_lhs_true1824
      var $1098=$out;
      var $cmp1825=(($1098)|0)==0;
      if ($cmp1825) { __label__ = 592; break; } else { __label__ = 591; break; }
    case 591: // $lor_lhs_false1827
      var $1099=$flush_addr;
      var $cmp1828=(($1099)|0)==4;
      if ($cmp1828) { __label__ = 592; break; } else { __label__ = 594; break; }
    case 592: // $land_lhs_true1830
      var $1100=$ret;
      var $cmp1831=(($1100)|0)==0;
      if ($cmp1831) { __label__ = 593; break; } else { __label__ = 594; break; }
    case 593: // $if_then1833
      $ret=-5;
      __label__ = 594; break;
    case 594: // $if_end1834
      var $1101=$ret;
      $retval=$1101;
      __label__ = 595; break;
    case 595: // $return
      var $1102=$retval;
      STACKTOP = __stackBase__;
      return $1102;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflate["X"]=1;

function _tr_static_init() {
  ;
  var __label__;

  ;
  return;
}


function _fixedtables($state) {
  ;
  var __label__;

  var $state_addr;
  $state_addr=$state;
  var $0=$state_addr;
  var $lencode=(($0+76)|0);
  HEAP32[(($lencode)>>2)]=((_fixedtables_lenfix)|0);
  var $1=$state_addr;
  var $lenbits=(($1+84)|0);
  HEAP32[(($lenbits)>>2)]=9;
  var $2=$state_addr;
  var $distcode=(($2+80)|0);
  HEAP32[(($distcode)>>2)]=((_fixedtables_distfix)|0);
  var $3=$state_addr;
  var $distbits=(($3+88)|0);
  HEAP32[(($distbits)>>2)]=5;
  ;
  return;
}


function _init_block($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $n;
      $s_addr=$s;
      $n=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$n;
      var $cmp=(($0)|0) < 286;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $1=$n;
      var $2=$s_addr;
      var $dyn_ltree=(($2+148)|0);
      var $arrayidx=(($dyn_ltree+($1<<2))|0);
      var $fc=(($arrayidx)|0);
      var $freq=$fc;
      HEAP16[(($freq)>>1)]=0;
      __label__ = 3; break;
    case 3: // $for_inc
      var $3=$n;
      var $inc=(($3+1)|0);
      $n=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $n=0;
      __label__ = 5; break;
    case 5: // $for_cond1
      var $4=$n;
      var $cmp2=(($4)|0) < 30;
      if ($cmp2) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body3
      var $5=$n;
      var $6=$s_addr;
      var $dyn_dtree=(($6+2440)|0);
      var $arrayidx4=(($dyn_dtree+($5<<2))|0);
      var $fc5=(($arrayidx4)|0);
      var $freq6=$fc5;
      HEAP16[(($freq6)>>1)]=0;
      __label__ = 7; break;
    case 7: // $for_inc7
      var $7=$n;
      var $inc8=(($7+1)|0);
      $n=$inc8;
      __label__ = 5; break;
    case 8: // $for_end9
      $n=0;
      __label__ = 9; break;
    case 9: // $for_cond10
      var $8=$n;
      var $cmp11=(($8)|0) < 19;
      if ($cmp11) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body12
      var $9=$n;
      var $10=$s_addr;
      var $bl_tree=(($10+2684)|0);
      var $arrayidx13=(($bl_tree+($9<<2))|0);
      var $fc14=(($arrayidx13)|0);
      var $freq15=$fc14;
      HEAP16[(($freq15)>>1)]=0;
      __label__ = 11; break;
    case 11: // $for_inc16
      var $11=$n;
      var $inc17=(($11+1)|0);
      $n=$inc17;
      __label__ = 9; break;
    case 12: // $for_end18
      var $12=$s_addr;
      var $dyn_ltree19=(($12+148)|0);
      var $arrayidx20=(($dyn_ltree19+1024)|0);
      var $fc21=(($arrayidx20)|0);
      var $freq22=$fc21;
      HEAP16[(($freq22)>>1)]=1;
      var $13=$s_addr;
      var $static_len=(($13+5804)|0);
      HEAP32[(($static_len)>>2)]=0;
      var $14=$s_addr;
      var $opt_len=(($14+5800)|0);
      HEAP32[(($opt_len)>>2)]=0;
      var $15=$s_addr;
      var $matches=(($15+5808)|0);
      HEAP32[(($matches)>>2)]=0;
      var $16=$s_addr;
      var $last_lit=(($16+5792)|0);
      HEAP32[(($last_lit)>>2)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_init_block["X"]=1;

function _updatewindow($strm, $out) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $out_addr;
      var $state;
      var $copy;
      var $dist;
      $strm_addr=$strm;
      $out_addr=$out;
      var $0=$strm_addr;
      var $state1=(($0+28)|0);
      var $1=HEAP32[(($state1)>>2)];
      var $2=$1;
      $state=$2;
      var $3=$state;
      var $window=(($3+52)|0);
      var $4=HEAP32[(($window)>>2)];
      var $cmp=(($4)|0)==0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 4; break; }
    case 1: // $if_then
      var $5=$strm_addr;
      var $zalloc=(($5+32)|0);
      var $6=HEAP32[(($zalloc)>>2)];
      var $7=$strm_addr;
      var $opaque=(($7+40)|0);
      var $8=HEAP32[(($opaque)>>2)];
      var $9=$state;
      var $wbits=(($9+36)|0);
      var $10=HEAP32[(($wbits)>>2)];
      var $shl=1 << $10;
      var $call=FUNCTION_TABLE[$6]($8, $shl, 1);
      var $11=$state;
      var $window2=(($11+52)|0);
      HEAP32[(($window2)>>2)]=$call;
      var $12=$state;
      var $window3=(($12+52)|0);
      var $13=HEAP32[(($window3)>>2)];
      var $cmp4=(($13)|0)==0;
      if ($cmp4) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then5
      $retval=1;
      __label__ = 19; break;
    case 3: // $if_end
      __label__ = 4; break;
    case 4: // $if_end6
      var $14=$state;
      var $wsize=(($14+40)|0);
      var $15=HEAP32[(($wsize)>>2)];
      var $cmp7=(($15)|0)==0;
      if ($cmp7) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then8
      var $16=$state;
      var $wbits9=(($16+36)|0);
      var $17=HEAP32[(($wbits9)>>2)];
      var $shl10=1 << $17;
      var $18=$state;
      var $wsize11=(($18+40)|0);
      HEAP32[(($wsize11)>>2)]=$shl10;
      var $19=$state;
      var $wnext=(($19+48)|0);
      HEAP32[(($wnext)>>2)]=0;
      var $20=$state;
      var $whave=(($20+44)|0);
      HEAP32[(($whave)>>2)]=0;
      __label__ = 6; break;
    case 6: // $if_end12
      var $21=$out_addr;
      var $22=$strm_addr;
      var $avail_out=(($22+16)|0);
      var $23=HEAP32[(($avail_out)>>2)];
      var $sub=(($21-$23)|0);
      $copy=$sub;
      var $24=$copy;
      var $25=$state;
      var $wsize13=(($25+40)|0);
      var $26=HEAPU32[(($wsize13)>>2)];
      var $cmp14=(($24)>>>0) >= (($26)>>>0);
      if ($cmp14) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then15
      var $27=$state;
      var $window16=(($27+52)|0);
      var $28=HEAP32[(($window16)>>2)];
      var $29=$strm_addr;
      var $next_out=(($29+12)|0);
      var $30=HEAP32[(($next_out)>>2)];
      var $31=$state;
      var $wsize17=(($31+40)|0);
      var $32=HEAP32[(($wsize17)>>2)];
      var $idx_neg=(((-$32))|0);
      var $add_ptr=(($30+$idx_neg)|0);
      var $33=$state;
      var $wsize18=(($33+40)|0);
      var $34=HEAP32[(($wsize18)>>2)];
      assert($34 % 1 === 0, 'memcpy given ' + $34 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($28, $add_ptr, $34, 1);
      var $35=$state;
      var $wnext19=(($35+48)|0);
      HEAP32[(($wnext19)>>2)]=0;
      var $36=$state;
      var $wsize20=(($36+40)|0);
      var $37=HEAP32[(($wsize20)>>2)];
      var $38=$state;
      var $whave21=(($38+44)|0);
      HEAP32[(($whave21)>>2)]=$37;
      __label__ = 18; break;
    case 8: // $if_else
      var $39=$state;
      var $wsize22=(($39+40)|0);
      var $40=HEAP32[(($wsize22)>>2)];
      var $41=$state;
      var $wnext23=(($41+48)|0);
      var $42=HEAP32[(($wnext23)>>2)];
      var $sub24=(($40-$42)|0);
      $dist=$sub24;
      var $43=$dist;
      var $44=$copy;
      var $cmp25=(($43)>>>0) > (($44)>>>0);
      if ($cmp25) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then26
      var $45=$copy;
      $dist=$45;
      __label__ = 10; break;
    case 10: // $if_end27
      var $46=$state;
      var $window28=(($46+52)|0);
      var $47=HEAP32[(($window28)>>2)];
      var $48=$state;
      var $wnext29=(($48+48)|0);
      var $49=HEAP32[(($wnext29)>>2)];
      var $add_ptr30=(($47+$49)|0);
      var $50=$strm_addr;
      var $next_out31=(($50+12)|0);
      var $51=HEAP32[(($next_out31)>>2)];
      var $52=$copy;
      var $idx_neg32=(((-$52))|0);
      var $add_ptr33=(($51+$idx_neg32)|0);
      var $53=$dist;
      assert($53 % 1 === 0, 'memcpy given ' + $53 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($add_ptr30, $add_ptr33, $53, 1);
      var $54=$dist;
      var $55=$copy;
      var $sub34=(($55-$54)|0);
      $copy=$sub34;
      var $56=$copy;
      var $tobool=(($56)|0)!=0;
      if ($tobool) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then35
      var $57=$state;
      var $window36=(($57+52)|0);
      var $58=HEAP32[(($window36)>>2)];
      var $59=$strm_addr;
      var $next_out37=(($59+12)|0);
      var $60=HEAP32[(($next_out37)>>2)];
      var $61=$copy;
      var $idx_neg38=(((-$61))|0);
      var $add_ptr39=(($60+$idx_neg38)|0);
      var $62=$copy;
      assert($62 % 1 === 0, 'memcpy given ' + $62 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($58, $add_ptr39, $62, 1);
      var $63=$copy;
      var $64=$state;
      var $wnext40=(($64+48)|0);
      HEAP32[(($wnext40)>>2)]=$63;
      var $65=$state;
      var $wsize41=(($65+40)|0);
      var $66=HEAP32[(($wsize41)>>2)];
      var $67=$state;
      var $whave42=(($67+44)|0);
      HEAP32[(($whave42)>>2)]=$66;
      __label__ = 17; break;
    case 12: // $if_else43
      var $68=$dist;
      var $69=$state;
      var $wnext44=(($69+48)|0);
      var $70=HEAP32[(($wnext44)>>2)];
      var $add=(($70+$68)|0);
      HEAP32[(($wnext44)>>2)]=$add;
      var $71=$state;
      var $wnext45=(($71+48)|0);
      var $72=HEAP32[(($wnext45)>>2)];
      var $73=$state;
      var $wsize46=(($73+40)|0);
      var $74=HEAP32[(($wsize46)>>2)];
      var $cmp47=(($72)|0)==(($74)|0);
      if ($cmp47) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then48
      var $75=$state;
      var $wnext49=(($75+48)|0);
      HEAP32[(($wnext49)>>2)]=0;
      __label__ = 14; break;
    case 14: // $if_end50
      var $76=$state;
      var $whave51=(($76+44)|0);
      var $77=HEAPU32[(($whave51)>>2)];
      var $78=$state;
      var $wsize52=(($78+40)|0);
      var $79=HEAPU32[(($wsize52)>>2)];
      var $cmp53=(($77)>>>0) < (($79)>>>0);
      if ($cmp53) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then54
      var $80=$dist;
      var $81=$state;
      var $whave55=(($81+44)|0);
      var $82=HEAP32[(($whave55)>>2)];
      var $add56=(($82+$80)|0);
      HEAP32[(($whave55)>>2)]=$add56;
      __label__ = 16; break;
    case 16: // $if_end57
      __label__ = 17; break;
    case 17: // $if_end58
      __label__ = 18; break;
    case 18: // $if_end59
      $retval=0;
      __label__ = 19; break;
    case 19: // $return
      var $83=$retval;
      ;
      return $83;
    default: assert(0, "bad label: " + __label__);
  }
}
_updatewindow["X"]=1;

function _inflateEnd($strm) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $strm_addr;
      var $state;
      $strm_addr=$strm;
      var $0=$strm_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 3; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$strm_addr;
      var $state1=(($1+28)|0);
      var $2=HEAP32[(($state1)>>2)];
      var $cmp2=(($2)|0)==0;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 2; break; }
    case 2: // $lor_lhs_false3
      var $3=$strm_addr;
      var $zfree=(($3+36)|0);
      var $4=HEAP32[(($zfree)>>2)];
      var $cmp4=(($4)|0)==0;
      if ($cmp4) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      $retval=-2;
      __label__ = 7; break;
    case 4: // $if_end
      var $5=$strm_addr;
      var $state5=(($5+28)|0);
      var $6=HEAP32[(($state5)>>2)];
      var $7=$6;
      $state=$7;
      var $8=$state;
      var $window=(($8+52)|0);
      var $9=HEAP32[(($window)>>2)];
      var $cmp6=(($9)|0)!=0;
      if ($cmp6) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then7
      var $10=$strm_addr;
      var $zfree8=(($10+36)|0);
      var $11=HEAP32[(($zfree8)>>2)];
      var $12=$strm_addr;
      var $opaque=(($12+40)|0);
      var $13=HEAP32[(($opaque)>>2)];
      var $14=$state;
      var $window9=(($14+52)|0);
      var $15=HEAP32[(($window9)>>2)];
      FUNCTION_TABLE[$11]($13, $15);
      __label__ = 6; break;
    case 6: // $if_end10
      var $16=$strm_addr;
      var $zfree11=(($16+36)|0);
      var $17=HEAP32[(($zfree11)>>2)];
      var $18=$strm_addr;
      var $opaque12=(($18+40)|0);
      var $19=HEAP32[(($opaque12)>>2)];
      var $20=$strm_addr;
      var $state13=(($20+28)|0);
      var $21=HEAP32[(($state13)>>2)];
      var $22=$21;
      FUNCTION_TABLE[$17]($19, $22);
      var $23=$strm_addr;
      var $state14=(($23+28)|0);
      HEAP32[(($state14)>>2)]=0;
      $retval=0;
      __label__ = 7; break;
    case 7: // $return
      var $24=$retval;
      ;
      return $24;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflateEnd["X"]=1;

function __tr_init($s) {
  ;
  var __label__;

  var $s_addr;
  $s_addr=$s;
  _tr_static_init();
  var $0=$s_addr;
  var $dyn_ltree=(($0+148)|0);
  var $arraydecay=(($dyn_ltree)|0);
  var $1=$s_addr;
  var $l_desc=(($1+2840)|0);
  var $dyn_tree=(($l_desc)|0);
  HEAP32[(($dyn_tree)>>2)]=$arraydecay;
  var $2=$s_addr;
  var $l_desc1=(($2+2840)|0);
  var $stat_desc=(($l_desc1+8)|0);
  HEAP32[(($stat_desc)>>2)]=_static_l_desc;
  var $3=$s_addr;
  var $dyn_dtree=(($3+2440)|0);
  var $arraydecay2=(($dyn_dtree)|0);
  var $4=$s_addr;
  var $d_desc=(($4+2852)|0);
  var $dyn_tree3=(($d_desc)|0);
  HEAP32[(($dyn_tree3)>>2)]=$arraydecay2;
  var $5=$s_addr;
  var $d_desc4=(($5+2852)|0);
  var $stat_desc5=(($d_desc4+8)|0);
  HEAP32[(($stat_desc5)>>2)]=_static_d_desc;
  var $6=$s_addr;
  var $bl_tree=(($6+2684)|0);
  var $arraydecay6=(($bl_tree)|0);
  var $7=$s_addr;
  var $bl_desc=(($7+2864)|0);
  var $dyn_tree7=(($bl_desc)|0);
  HEAP32[(($dyn_tree7)>>2)]=$arraydecay6;
  var $8=$s_addr;
  var $bl_desc8=(($8+2864)|0);
  var $stat_desc9=(($bl_desc8+8)|0);
  HEAP32[(($stat_desc9)>>2)]=_static_bl_desc;
  var $9=$s_addr;
  var $bi_buf=(($9+5816)|0);
  HEAP16[(($bi_buf)>>1)]=0;
  var $10=$s_addr;
  var $bi_valid=(($10+5820)|0);
  HEAP32[(($bi_valid)>>2)]=0;
  var $11=$s_addr;
  var $last_eob_len=(($11+5812)|0);
  HEAP32[(($last_eob_len)>>2)]=8;
  var $12=$s_addr;
  _init_block($12);
  ;
  return;
}


function __tr_stored_block($s, $buf, $stored_len, $last) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $buf_addr;
      var $stored_len_addr;
      var $last_addr;
      var $len;
      var $val;
      $s_addr=$s;
      $buf_addr=$buf;
      $stored_len_addr=$stored_len;
      $last_addr=$last;
      $len=3;
      var $0=$s_addr;
      var $bi_valid=(($0+5820)|0);
      var $1=HEAP32[(($bi_valid)>>2)];
      var $2=$len;
      var $sub=((16-$2)|0);
      var $cmp=(($1)|0) > (($sub)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $3=$last_addr;
      var $add=(($3)|0);
      $val=$add;
      var $4=$val;
      var $conv=(($4) & 65535);
      var $conv1=(($conv)&65535);
      var $5=$s_addr;
      var $bi_valid2=(($5+5820)|0);
      var $6=HEAP32[(($bi_valid2)>>2)];
      var $shl=$conv1 << $6;
      var $7=$s_addr;
      var $bi_buf=(($7+5816)|0);
      var $8=HEAPU16[(($bi_buf)>>1)];
      var $conv3=(($8)&65535);
      var $or=$conv3 | $shl;
      var $conv4=(($or) & 65535);
      HEAP16[(($bi_buf)>>1)]=$conv4;
      var $9=$s_addr;
      var $bi_buf5=(($9+5816)|0);
      var $10=HEAPU16[(($bi_buf5)>>1)];
      var $conv6=(($10)&65535);
      var $and=$conv6 & 255;
      var $conv7=(($and) & 255);
      var $11=$s_addr;
      var $pending=(($11+20)|0);
      var $12=HEAPU32[(($pending)>>2)];
      var $inc=(($12+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $13=$s_addr;
      var $pending_buf=(($13+8)|0);
      var $14=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($14+$12)|0);
      HEAP8[($arrayidx)]=$conv7;
      var $15=$s_addr;
      var $bi_buf8=(($15+5816)|0);
      var $16=HEAPU16[(($bi_buf8)>>1)];
      var $conv9=(($16)&65535);
      var $shr=$conv9 >> 8;
      var $conv10=(($shr) & 255);
      var $17=$s_addr;
      var $pending11=(($17+20)|0);
      var $18=HEAPU32[(($pending11)>>2)];
      var $inc12=(($18+1)|0);
      HEAP32[(($pending11)>>2)]=$inc12;
      var $19=$s_addr;
      var $pending_buf13=(($19+8)|0);
      var $20=HEAP32[(($pending_buf13)>>2)];
      var $arrayidx14=(($20+$18)|0);
      HEAP8[($arrayidx14)]=$conv10;
      var $21=$val;
      var $conv15=(($21) & 65535);
      var $conv16=(($conv15)&65535);
      var $22=$s_addr;
      var $bi_valid17=(($22+5820)|0);
      var $23=HEAP32[(($bi_valid17)>>2)];
      var $sub18=((16-$23)|0);
      var $shr19=$conv16 >> (($sub18)|0);
      var $conv20=(($shr19) & 65535);
      var $24=$s_addr;
      var $bi_buf21=(($24+5816)|0);
      HEAP16[(($bi_buf21)>>1)]=$conv20;
      var $25=$len;
      var $sub22=(($25-16)|0);
      var $26=$s_addr;
      var $bi_valid23=(($26+5820)|0);
      var $27=HEAP32[(($bi_valid23)>>2)];
      var $add24=(($27+$sub22)|0);
      HEAP32[(($bi_valid23)>>2)]=$add24;
      __label__ = 3; break;
    case 2: // $if_else
      var $28=$last_addr;
      var $add25=(($28)|0);
      var $conv26=(($add25) & 65535);
      var $conv27=(($conv26)&65535);
      var $29=$s_addr;
      var $bi_valid28=(($29+5820)|0);
      var $30=HEAP32[(($bi_valid28)>>2)];
      var $shl29=$conv27 << $30;
      var $31=$s_addr;
      var $bi_buf30=(($31+5816)|0);
      var $32=HEAPU16[(($bi_buf30)>>1)];
      var $conv31=(($32)&65535);
      var $or32=$conv31 | $shl29;
      var $conv33=(($or32) & 65535);
      HEAP16[(($bi_buf30)>>1)]=$conv33;
      var $33=$len;
      var $34=$s_addr;
      var $bi_valid34=(($34+5820)|0);
      var $35=HEAP32[(($bi_valid34)>>2)];
      var $add35=(($35+$33)|0);
      HEAP32[(($bi_valid34)>>2)]=$add35;
      __label__ = 3; break;
    case 3: // $if_end
      var $36=$s_addr;
      var $37=$buf_addr;
      var $38=$stored_len_addr;
      _copy_block($36, $37, $38, 1);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__tr_stored_block["X"]=1;

function _copy_block($s, $buf, $len, $header) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $buf_addr;
      var $len_addr;
      var $header_addr;
      $s_addr=$s;
      $buf_addr=$buf;
      $len_addr=$len;
      $header_addr=$header;
      var $0=$s_addr;
      _bi_windup($0);
      var $1=$s_addr;
      var $last_eob_len=(($1+5812)|0);
      HEAP32[(($last_eob_len)>>2)]=8;
      var $2=$header_addr;
      var $tobool=(($2)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $3=$len_addr;
      var $conv=(($3) & 65535);
      var $conv1=(($conv)&65535);
      var $and=$conv1 & 255;
      var $conv2=(($and) & 255);
      var $4=$s_addr;
      var $pending=(($4+20)|0);
      var $5=HEAPU32[(($pending)>>2)];
      var $inc=(($5+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $6=$s_addr;
      var $pending_buf=(($6+8)|0);
      var $7=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($7+$5)|0);
      HEAP8[($arrayidx)]=$conv2;
      var $8=$len_addr;
      var $conv3=(($8) & 65535);
      var $conv4=(($conv3)&65535);
      var $shr=$conv4 >> 8;
      var $conv5=(($shr) & 255);
      var $9=$s_addr;
      var $pending6=(($9+20)|0);
      var $10=HEAPU32[(($pending6)>>2)];
      var $inc7=(($10+1)|0);
      HEAP32[(($pending6)>>2)]=$inc7;
      var $11=$s_addr;
      var $pending_buf8=(($11+8)|0);
      var $12=HEAP32[(($pending_buf8)>>2)];
      var $arrayidx9=(($12+$10)|0);
      HEAP8[($arrayidx9)]=$conv5;
      var $13=$len_addr;
      var $neg=$13 ^ -1;
      var $conv10=(($neg) & 65535);
      var $conv11=(($conv10)&65535);
      var $and12=$conv11 & 255;
      var $conv13=(($and12) & 255);
      var $14=$s_addr;
      var $pending14=(($14+20)|0);
      var $15=HEAPU32[(($pending14)>>2)];
      var $inc15=(($15+1)|0);
      HEAP32[(($pending14)>>2)]=$inc15;
      var $16=$s_addr;
      var $pending_buf16=(($16+8)|0);
      var $17=HEAP32[(($pending_buf16)>>2)];
      var $arrayidx17=(($17+$15)|0);
      HEAP8[($arrayidx17)]=$conv13;
      var $18=$len_addr;
      var $neg18=$18 ^ -1;
      var $conv19=(($neg18) & 65535);
      var $conv20=(($conv19)&65535);
      var $shr21=$conv20 >> 8;
      var $conv22=(($shr21) & 255);
      var $19=$s_addr;
      var $pending23=(($19+20)|0);
      var $20=HEAPU32[(($pending23)>>2)];
      var $inc24=(($20+1)|0);
      HEAP32[(($pending23)>>2)]=$inc24;
      var $21=$s_addr;
      var $pending_buf25=(($21+8)|0);
      var $22=HEAP32[(($pending_buf25)>>2)];
      var $arrayidx26=(($22+$20)|0);
      HEAP8[($arrayidx26)]=$conv22;
      __label__ = 2; break;
    case 2: // $if_end
      __label__ = 3; break;
    case 3: // $while_cond
      var $23=$len_addr;
      var $dec=(($23-1)|0);
      $len_addr=$dec;
      var $tobool27=(($23)|0)!=0;
      if ($tobool27) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $while_body
      var $24=$buf_addr;
      var $incdec_ptr=(($24+1)|0);
      $buf_addr=$incdec_ptr;
      var $25=HEAP8[($24)];
      var $26=$s_addr;
      var $pending28=(($26+20)|0);
      var $27=HEAP32[(($pending28)>>2)];
      var $inc29=(($27+1)|0);
      HEAP32[(($pending28)>>2)]=$inc29;
      var $28=$s_addr;
      var $pending_buf30=(($28+8)|0);
      var $29=HEAP32[(($pending_buf30)>>2)];
      var $arrayidx31=(($29+$27)|0);
      HEAP8[($arrayidx31)]=$25;
      __label__ = 3; break;
    case 5: // $while_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_copy_block["X"]=1;

function _bi_flush($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      $s_addr=$s;
      var $0=$s_addr;
      var $bi_valid=(($0+5820)|0);
      var $1=HEAP32[(($bi_valid)>>2)];
      var $cmp=(($1)|0)==16;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $2=$s_addr;
      var $bi_buf=(($2+5816)|0);
      var $3=HEAPU16[(($bi_buf)>>1)];
      var $conv=(($3)&65535);
      var $and=$conv & 255;
      var $conv1=(($and) & 255);
      var $4=$s_addr;
      var $pending=(($4+20)|0);
      var $5=HEAPU32[(($pending)>>2)];
      var $inc=(($5+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $6=$s_addr;
      var $pending_buf=(($6+8)|0);
      var $7=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($7+$5)|0);
      HEAP8[($arrayidx)]=$conv1;
      var $8=$s_addr;
      var $bi_buf2=(($8+5816)|0);
      var $9=HEAPU16[(($bi_buf2)>>1)];
      var $conv3=(($9)&65535);
      var $shr=$conv3 >> 8;
      var $conv4=(($shr) & 255);
      var $10=$s_addr;
      var $pending5=(($10+20)|0);
      var $11=HEAPU32[(($pending5)>>2)];
      var $inc6=(($11+1)|0);
      HEAP32[(($pending5)>>2)]=$inc6;
      var $12=$s_addr;
      var $pending_buf7=(($12+8)|0);
      var $13=HEAP32[(($pending_buf7)>>2)];
      var $arrayidx8=(($13+$11)|0);
      HEAP8[($arrayidx8)]=$conv4;
      var $14=$s_addr;
      var $bi_buf9=(($14+5816)|0);
      HEAP16[(($bi_buf9)>>1)]=0;
      var $15=$s_addr;
      var $bi_valid10=(($15+5820)|0);
      HEAP32[(($bi_valid10)>>2)]=0;
      __label__ = 5; break;
    case 2: // $if_else
      var $16=$s_addr;
      var $bi_valid11=(($16+5820)|0);
      var $17=HEAP32[(($bi_valid11)>>2)];
      var $cmp12=(($17)|0) >= 8;
      if ($cmp12) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then14
      var $18=$s_addr;
      var $bi_buf15=(($18+5816)|0);
      var $19=HEAP16[(($bi_buf15)>>1)];
      var $conv16=(($19) & 255);
      var $20=$s_addr;
      var $pending17=(($20+20)|0);
      var $21=HEAP32[(($pending17)>>2)];
      var $inc18=(($21+1)|0);
      HEAP32[(($pending17)>>2)]=$inc18;
      var $22=$s_addr;
      var $pending_buf19=(($22+8)|0);
      var $23=HEAP32[(($pending_buf19)>>2)];
      var $arrayidx20=(($23+$21)|0);
      HEAP8[($arrayidx20)]=$conv16;
      var $24=$s_addr;
      var $bi_buf21=(($24+5816)|0);
      var $25=HEAPU16[(($bi_buf21)>>1)];
      var $conv22=(($25)&65535);
      var $shr23=$conv22 >> 8;
      var $conv24=(($shr23) & 65535);
      HEAP16[(($bi_buf21)>>1)]=$conv24;
      var $26=$s_addr;
      var $bi_valid25=(($26+5820)|0);
      var $27=HEAP32[(($bi_valid25)>>2)];
      var $sub=(($27-8)|0);
      HEAP32[(($bi_valid25)>>2)]=$sub;
      __label__ = 4; break;
    case 4: // $if_end
      __label__ = 5; break;
    case 5: // $if_end26
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_bi_flush["X"]=1;

function __tr_align($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $len;
      var $val;
      var $len32;
      var $val39;
      var $len93;
      var $val99;
      var $len144;
      var $val151;
      $s_addr=$s;
      $len=3;
      var $0=$s_addr;
      var $bi_valid=(($0+5820)|0);
      var $1=HEAP32[(($bi_valid)>>2)];
      var $2=$len;
      var $sub=((16-$2)|0);
      var $cmp=(($1)|0) > (($sub)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $val=2;
      var $3=$val;
      var $conv=(($3) & 65535);
      var $conv1=(($conv)&65535);
      var $4=$s_addr;
      var $bi_valid2=(($4+5820)|0);
      var $5=HEAP32[(($bi_valid2)>>2)];
      var $shl=$conv1 << $5;
      var $6=$s_addr;
      var $bi_buf=(($6+5816)|0);
      var $7=HEAPU16[(($bi_buf)>>1)];
      var $conv3=(($7)&65535);
      var $or=$conv3 | $shl;
      var $conv4=(($or) & 65535);
      HEAP16[(($bi_buf)>>1)]=$conv4;
      var $8=$s_addr;
      var $bi_buf5=(($8+5816)|0);
      var $9=HEAPU16[(($bi_buf5)>>1)];
      var $conv6=(($9)&65535);
      var $and=$conv6 & 255;
      var $conv7=(($and) & 255);
      var $10=$s_addr;
      var $pending=(($10+20)|0);
      var $11=HEAPU32[(($pending)>>2)];
      var $inc=(($11+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $12=$s_addr;
      var $pending_buf=(($12+8)|0);
      var $13=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($13+$11)|0);
      HEAP8[($arrayidx)]=$conv7;
      var $14=$s_addr;
      var $bi_buf8=(($14+5816)|0);
      var $15=HEAPU16[(($bi_buf8)>>1)];
      var $conv9=(($15)&65535);
      var $shr=$conv9 >> 8;
      var $conv10=(($shr) & 255);
      var $16=$s_addr;
      var $pending11=(($16+20)|0);
      var $17=HEAPU32[(($pending11)>>2)];
      var $inc12=(($17+1)|0);
      HEAP32[(($pending11)>>2)]=$inc12;
      var $18=$s_addr;
      var $pending_buf13=(($18+8)|0);
      var $19=HEAP32[(($pending_buf13)>>2)];
      var $arrayidx14=(($19+$17)|0);
      HEAP8[($arrayidx14)]=$conv10;
      var $20=$val;
      var $conv15=(($20) & 65535);
      var $conv16=(($conv15)&65535);
      var $21=$s_addr;
      var $bi_valid17=(($21+5820)|0);
      var $22=HEAP32[(($bi_valid17)>>2)];
      var $sub18=((16-$22)|0);
      var $shr19=$conv16 >> (($sub18)|0);
      var $conv20=(($shr19) & 65535);
      var $23=$s_addr;
      var $bi_buf21=(($23+5816)|0);
      HEAP16[(($bi_buf21)>>1)]=$conv20;
      var $24=$len;
      var $sub22=(($24-16)|0);
      var $25=$s_addr;
      var $bi_valid23=(($25+5820)|0);
      var $26=HEAP32[(($bi_valid23)>>2)];
      var $add=(($26+$sub22)|0);
      HEAP32[(($bi_valid23)>>2)]=$add;
      __label__ = 3; break;
    case 2: // $if_else
      var $27=$s_addr;
      var $bi_valid24=(($27+5820)|0);
      var $28=HEAP32[(($bi_valid24)>>2)];
      var $shl25=2 << $28;
      var $29=$s_addr;
      var $bi_buf26=(($29+5816)|0);
      var $30=HEAPU16[(($bi_buf26)>>1)];
      var $conv27=(($30)&65535);
      var $or28=$conv27 | $shl25;
      var $conv29=(($or28) & 65535);
      HEAP16[(($bi_buf26)>>1)]=$conv29;
      var $31=$len;
      var $32=$s_addr;
      var $bi_valid30=(($32+5820)|0);
      var $33=HEAP32[(($bi_valid30)>>2)];
      var $add31=(($33+$31)|0);
      HEAP32[(($bi_valid30)>>2)]=$add31;
      __label__ = 3; break;
    case 3: // $if_end
      var $34=HEAPU16[((((_static_ltree+1026)|0))>>1)];
      var $conv33=(($34)&65535);
      $len32=$conv33;
      var $35=$s_addr;
      var $bi_valid34=(($35+5820)|0);
      var $36=HEAP32[(($bi_valid34)>>2)];
      var $37=$len32;
      var $sub35=((16-$37)|0);
      var $cmp36=(($36)|0) > (($sub35)|0);
      if ($cmp36) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then38
      var $38=HEAPU16[((((_static_ltree+1024)|0))>>1)];
      var $conv40=(($38)&65535);
      $val39=$conv40;
      var $39=$val39;
      var $conv41=(($39) & 65535);
      var $conv42=(($conv41)&65535);
      var $40=$s_addr;
      var $bi_valid43=(($40+5820)|0);
      var $41=HEAP32[(($bi_valid43)>>2)];
      var $shl44=$conv42 << $41;
      var $42=$s_addr;
      var $bi_buf45=(($42+5816)|0);
      var $43=HEAPU16[(($bi_buf45)>>1)];
      var $conv46=(($43)&65535);
      var $or47=$conv46 | $shl44;
      var $conv48=(($or47) & 65535);
      HEAP16[(($bi_buf45)>>1)]=$conv48;
      var $44=$s_addr;
      var $bi_buf49=(($44+5816)|0);
      var $45=HEAPU16[(($bi_buf49)>>1)];
      var $conv50=(($45)&65535);
      var $and51=$conv50 & 255;
      var $conv52=(($and51) & 255);
      var $46=$s_addr;
      var $pending53=(($46+20)|0);
      var $47=HEAPU32[(($pending53)>>2)];
      var $inc54=(($47+1)|0);
      HEAP32[(($pending53)>>2)]=$inc54;
      var $48=$s_addr;
      var $pending_buf55=(($48+8)|0);
      var $49=HEAP32[(($pending_buf55)>>2)];
      var $arrayidx56=(($49+$47)|0);
      HEAP8[($arrayidx56)]=$conv52;
      var $50=$s_addr;
      var $bi_buf57=(($50+5816)|0);
      var $51=HEAPU16[(($bi_buf57)>>1)];
      var $conv58=(($51)&65535);
      var $shr59=$conv58 >> 8;
      var $conv60=(($shr59) & 255);
      var $52=$s_addr;
      var $pending61=(($52+20)|0);
      var $53=HEAPU32[(($pending61)>>2)];
      var $inc62=(($53+1)|0);
      HEAP32[(($pending61)>>2)]=$inc62;
      var $54=$s_addr;
      var $pending_buf63=(($54+8)|0);
      var $55=HEAP32[(($pending_buf63)>>2)];
      var $arrayidx64=(($55+$53)|0);
      HEAP8[($arrayidx64)]=$conv60;
      var $56=$val39;
      var $conv65=(($56) & 65535);
      var $conv66=(($conv65)&65535);
      var $57=$s_addr;
      var $bi_valid67=(($57+5820)|0);
      var $58=HEAP32[(($bi_valid67)>>2)];
      var $sub68=((16-$58)|0);
      var $shr69=$conv66 >> (($sub68)|0);
      var $conv70=(($shr69) & 65535);
      var $59=$s_addr;
      var $bi_buf71=(($59+5816)|0);
      HEAP16[(($bi_buf71)>>1)]=$conv70;
      var $60=$len32;
      var $sub72=(($60-16)|0);
      var $61=$s_addr;
      var $bi_valid73=(($61+5820)|0);
      var $62=HEAP32[(($bi_valid73)>>2)];
      var $add74=(($62+$sub72)|0);
      HEAP32[(($bi_valid73)>>2)]=$add74;
      __label__ = 6; break;
    case 5: // $if_else75
      var $63=HEAPU16[((((_static_ltree+1024)|0))>>1)];
      var $conv76=(($63)&65535);
      var $64=$s_addr;
      var $bi_valid77=(($64+5820)|0);
      var $65=HEAP32[(($bi_valid77)>>2)];
      var $shl78=$conv76 << $65;
      var $66=$s_addr;
      var $bi_buf79=(($66+5816)|0);
      var $67=HEAPU16[(($bi_buf79)>>1)];
      var $conv80=(($67)&65535);
      var $or81=$conv80 | $shl78;
      var $conv82=(($or81) & 65535);
      HEAP16[(($bi_buf79)>>1)]=$conv82;
      var $68=$len32;
      var $69=$s_addr;
      var $bi_valid83=(($69+5820)|0);
      var $70=HEAP32[(($bi_valid83)>>2)];
      var $add84=(($70+$68)|0);
      HEAP32[(($bi_valid83)>>2)]=$add84;
      __label__ = 6; break;
    case 6: // $if_end85
      var $71=$s_addr;
      _bi_flush($71);
      var $72=$s_addr;
      var $last_eob_len=(($72+5812)|0);
      var $73=HEAP32[(($last_eob_len)>>2)];
      var $add86=(($73+1)|0);
      var $add87=(($add86+10)|0);
      var $74=$s_addr;
      var $bi_valid88=(($74+5820)|0);
      var $75=HEAP32[(($bi_valid88)>>2)];
      var $sub89=(($add87-$75)|0);
      var $cmp90=(($sub89)|0) < 9;
      if ($cmp90) { __label__ = 7; break; } else { __label__ = 14; break; }
    case 7: // $if_then92
      $len93=3;
      var $76=$s_addr;
      var $bi_valid94=(($76+5820)|0);
      var $77=HEAP32[(($bi_valid94)>>2)];
      var $78=$len93;
      var $sub95=((16-$78)|0);
      var $cmp96=(($77)|0) > (($sub95)|0);
      if ($cmp96) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then98
      $val99=2;
      var $79=$val99;
      var $conv100=(($79) & 65535);
      var $conv101=(($conv100)&65535);
      var $80=$s_addr;
      var $bi_valid102=(($80+5820)|0);
      var $81=HEAP32[(($bi_valid102)>>2)];
      var $shl103=$conv101 << $81;
      var $82=$s_addr;
      var $bi_buf104=(($82+5816)|0);
      var $83=HEAPU16[(($bi_buf104)>>1)];
      var $conv105=(($83)&65535);
      var $or106=$conv105 | $shl103;
      var $conv107=(($or106) & 65535);
      HEAP16[(($bi_buf104)>>1)]=$conv107;
      var $84=$s_addr;
      var $bi_buf108=(($84+5816)|0);
      var $85=HEAPU16[(($bi_buf108)>>1)];
      var $conv109=(($85)&65535);
      var $and110=$conv109 & 255;
      var $conv111=(($and110) & 255);
      var $86=$s_addr;
      var $pending112=(($86+20)|0);
      var $87=HEAPU32[(($pending112)>>2)];
      var $inc113=(($87+1)|0);
      HEAP32[(($pending112)>>2)]=$inc113;
      var $88=$s_addr;
      var $pending_buf114=(($88+8)|0);
      var $89=HEAP32[(($pending_buf114)>>2)];
      var $arrayidx115=(($89+$87)|0);
      HEAP8[($arrayidx115)]=$conv111;
      var $90=$s_addr;
      var $bi_buf116=(($90+5816)|0);
      var $91=HEAPU16[(($bi_buf116)>>1)];
      var $conv117=(($91)&65535);
      var $shr118=$conv117 >> 8;
      var $conv119=(($shr118) & 255);
      var $92=$s_addr;
      var $pending120=(($92+20)|0);
      var $93=HEAPU32[(($pending120)>>2)];
      var $inc121=(($93+1)|0);
      HEAP32[(($pending120)>>2)]=$inc121;
      var $94=$s_addr;
      var $pending_buf122=(($94+8)|0);
      var $95=HEAP32[(($pending_buf122)>>2)];
      var $arrayidx123=(($95+$93)|0);
      HEAP8[($arrayidx123)]=$conv119;
      var $96=$val99;
      var $conv124=(($96) & 65535);
      var $conv125=(($conv124)&65535);
      var $97=$s_addr;
      var $bi_valid126=(($97+5820)|0);
      var $98=HEAP32[(($bi_valid126)>>2)];
      var $sub127=((16-$98)|0);
      var $shr128=$conv125 >> (($sub127)|0);
      var $conv129=(($shr128) & 65535);
      var $99=$s_addr;
      var $bi_buf130=(($99+5816)|0);
      HEAP16[(($bi_buf130)>>1)]=$conv129;
      var $100=$len93;
      var $sub131=(($100-16)|0);
      var $101=$s_addr;
      var $bi_valid132=(($101+5820)|0);
      var $102=HEAP32[(($bi_valid132)>>2)];
      var $add133=(($102+$sub131)|0);
      HEAP32[(($bi_valid132)>>2)]=$add133;
      __label__ = 10; break;
    case 9: // $if_else134
      var $103=$s_addr;
      var $bi_valid135=(($103+5820)|0);
      var $104=HEAP32[(($bi_valid135)>>2)];
      var $shl136=2 << $104;
      var $105=$s_addr;
      var $bi_buf137=(($105+5816)|0);
      var $106=HEAPU16[(($bi_buf137)>>1)];
      var $conv138=(($106)&65535);
      var $or139=$conv138 | $shl136;
      var $conv140=(($or139) & 65535);
      HEAP16[(($bi_buf137)>>1)]=$conv140;
      var $107=$len93;
      var $108=$s_addr;
      var $bi_valid141=(($108+5820)|0);
      var $109=HEAP32[(($bi_valid141)>>2)];
      var $add142=(($109+$107)|0);
      HEAP32[(($bi_valid141)>>2)]=$add142;
      __label__ = 10; break;
    case 10: // $if_end143
      var $110=HEAPU16[((((_static_ltree+1026)|0))>>1)];
      var $conv145=(($110)&65535);
      $len144=$conv145;
      var $111=$s_addr;
      var $bi_valid146=(($111+5820)|0);
      var $112=HEAP32[(($bi_valid146)>>2)];
      var $113=$len144;
      var $sub147=((16-$113)|0);
      var $cmp148=(($112)|0) > (($sub147)|0);
      if ($cmp148) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then150
      var $114=HEAPU16[((((_static_ltree+1024)|0))>>1)];
      var $conv152=(($114)&65535);
      $val151=$conv152;
      var $115=$val151;
      var $conv153=(($115) & 65535);
      var $conv154=(($conv153)&65535);
      var $116=$s_addr;
      var $bi_valid155=(($116+5820)|0);
      var $117=HEAP32[(($bi_valid155)>>2)];
      var $shl156=$conv154 << $117;
      var $118=$s_addr;
      var $bi_buf157=(($118+5816)|0);
      var $119=HEAPU16[(($bi_buf157)>>1)];
      var $conv158=(($119)&65535);
      var $or159=$conv158 | $shl156;
      var $conv160=(($or159) & 65535);
      HEAP16[(($bi_buf157)>>1)]=$conv160;
      var $120=$s_addr;
      var $bi_buf161=(($120+5816)|0);
      var $121=HEAPU16[(($bi_buf161)>>1)];
      var $conv162=(($121)&65535);
      var $and163=$conv162 & 255;
      var $conv164=(($and163) & 255);
      var $122=$s_addr;
      var $pending165=(($122+20)|0);
      var $123=HEAPU32[(($pending165)>>2)];
      var $inc166=(($123+1)|0);
      HEAP32[(($pending165)>>2)]=$inc166;
      var $124=$s_addr;
      var $pending_buf167=(($124+8)|0);
      var $125=HEAP32[(($pending_buf167)>>2)];
      var $arrayidx168=(($125+$123)|0);
      HEAP8[($arrayidx168)]=$conv164;
      var $126=$s_addr;
      var $bi_buf169=(($126+5816)|0);
      var $127=HEAPU16[(($bi_buf169)>>1)];
      var $conv170=(($127)&65535);
      var $shr171=$conv170 >> 8;
      var $conv172=(($shr171) & 255);
      var $128=$s_addr;
      var $pending173=(($128+20)|0);
      var $129=HEAPU32[(($pending173)>>2)];
      var $inc174=(($129+1)|0);
      HEAP32[(($pending173)>>2)]=$inc174;
      var $130=$s_addr;
      var $pending_buf175=(($130+8)|0);
      var $131=HEAP32[(($pending_buf175)>>2)];
      var $arrayidx176=(($131+$129)|0);
      HEAP8[($arrayidx176)]=$conv172;
      var $132=$val151;
      var $conv177=(($132) & 65535);
      var $conv178=(($conv177)&65535);
      var $133=$s_addr;
      var $bi_valid179=(($133+5820)|0);
      var $134=HEAP32[(($bi_valid179)>>2)];
      var $sub180=((16-$134)|0);
      var $shr181=$conv178 >> (($sub180)|0);
      var $conv182=(($shr181) & 65535);
      var $135=$s_addr;
      var $bi_buf183=(($135+5816)|0);
      HEAP16[(($bi_buf183)>>1)]=$conv182;
      var $136=$len144;
      var $sub184=(($136-16)|0);
      var $137=$s_addr;
      var $bi_valid185=(($137+5820)|0);
      var $138=HEAP32[(($bi_valid185)>>2)];
      var $add186=(($138+$sub184)|0);
      HEAP32[(($bi_valid185)>>2)]=$add186;
      __label__ = 13; break;
    case 12: // $if_else187
      var $139=HEAPU16[((((_static_ltree+1024)|0))>>1)];
      var $conv188=(($139)&65535);
      var $140=$s_addr;
      var $bi_valid189=(($140+5820)|0);
      var $141=HEAP32[(($bi_valid189)>>2)];
      var $shl190=$conv188 << $141;
      var $142=$s_addr;
      var $bi_buf191=(($142+5816)|0);
      var $143=HEAPU16[(($bi_buf191)>>1)];
      var $conv192=(($143)&65535);
      var $or193=$conv192 | $shl190;
      var $conv194=(($or193) & 65535);
      HEAP16[(($bi_buf191)>>1)]=$conv194;
      var $144=$len144;
      var $145=$s_addr;
      var $bi_valid195=(($145+5820)|0);
      var $146=HEAP32[(($bi_valid195)>>2)];
      var $add196=(($146+$144)|0);
      HEAP32[(($bi_valid195)>>2)]=$add196;
      __label__ = 13; break;
    case 13: // $if_end197
      var $147=$s_addr;
      _bi_flush($147);
      __label__ = 14; break;
    case 14: // $if_end198
      var $148=$s_addr;
      var $last_eob_len199=(($148+5812)|0);
      HEAP32[(($last_eob_len199)>>2)]=7;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__tr_align["X"]=1;

function __tr_flush_block($s, $buf, $stored_len, $last) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $buf_addr;
      var $stored_len_addr;
      var $last_addr;
      var $opt_lenb;
      var $static_lenb;
      var $max_blindex;
      var $len;
      var $val;
      var $len65;
      var $val71;
      $s_addr=$s;
      $buf_addr=$buf;
      $stored_len_addr=$stored_len;
      $last_addr=$last;
      $max_blindex=0;
      var $0=$s_addr;
      var $level=(($0+132)|0);
      var $1=HEAP32[(($level)>>2)];
      var $cmp=(($1)|0) > 0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 6; break; }
    case 1: // $if_then
      var $2=$s_addr;
      var $strm=(($2)|0);
      var $3=HEAP32[(($strm)>>2)];
      var $data_type=(($3+44)|0);
      var $4=HEAP32[(($data_type)>>2)];
      var $cmp1=(($4)|0)==2;
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then2
      var $5=$s_addr;
      var $call=_detect_data_type($5);
      var $6=$s_addr;
      var $strm3=(($6)|0);
      var $7=HEAP32[(($strm3)>>2)];
      var $data_type4=(($7+44)|0);
      HEAP32[(($data_type4)>>2)]=$call;
      __label__ = 3; break;
    case 3: // $if_end
      var $8=$s_addr;
      var $9=$s_addr;
      var $l_desc=(($9+2840)|0);
      _build_tree($8, $l_desc);
      var $10=$s_addr;
      var $11=$s_addr;
      var $d_desc=(($11+2852)|0);
      _build_tree($10, $d_desc);
      var $12=$s_addr;
      var $call5=_build_bl_tree($12);
      $max_blindex=$call5;
      var $13=$s_addr;
      var $opt_len=(($13+5800)|0);
      var $14=HEAP32[(($opt_len)>>2)];
      var $add=(($14+3)|0);
      var $add6=(($add+7)|0);
      var $shr=$add6 >>> 3;
      $opt_lenb=$shr;
      var $15=$s_addr;
      var $static_len=(($15+5804)|0);
      var $16=HEAP32[(($static_len)>>2)];
      var $add7=(($16+3)|0);
      var $add8=(($add7+7)|0);
      var $shr9=$add8 >>> 3;
      $static_lenb=$shr9;
      var $17=$static_lenb;
      var $18=$opt_lenb;
      var $cmp10=(($17)>>>0) <= (($18)>>>0);
      if ($cmp10) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then11
      var $19=$static_lenb;
      $opt_lenb=$19;
      __label__ = 5; break;
    case 5: // $if_end12
      __label__ = 7; break;
    case 6: // $if_else
      var $20=$stored_len_addr;
      var $add13=(($20+5)|0);
      $static_lenb=$add13;
      $opt_lenb=$add13;
      __label__ = 7; break;
    case 7: // $if_end14
      var $21=$stored_len_addr;
      var $add15=(($21+4)|0);
      var $22=$opt_lenb;
      var $cmp16=(($add15)>>>0) <= (($22)>>>0);
      if ($cmp16) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: // $land_lhs_true
      var $23=$buf_addr;
      var $cmp17=(($23)|0)!=0;
      if ($cmp17) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then18
      var $24=$s_addr;
      var $25=$buf_addr;
      var $26=$stored_len_addr;
      var $27=$last_addr;
      __tr_stored_block($24, $25, $26, $27);
      __label__ = 21; break;
    case 10: // $if_else19
      var $28=$s_addr;
      var $strategy=(($28+136)|0);
      var $29=HEAP32[(($strategy)>>2)];
      var $cmp20=(($29)|0)==4;
      if ($cmp20) { __label__ = 12; break; } else { __label__ = 11; break; }
    case 11: // $lor_lhs_false
      var $30=$static_lenb;
      var $31=$opt_lenb;
      var $cmp21=(($30)|0)==(($31)|0);
      if ($cmp21) { __label__ = 12; break; } else { __label__ = 16; break; }
    case 12: // $if_then22
      $len=3;
      var $32=$s_addr;
      var $bi_valid=(($32+5820)|0);
      var $33=HEAP32[(($bi_valid)>>2)];
      var $34=$len;
      var $sub=((16-$34)|0);
      var $cmp23=(($33)|0) > (($sub)|0);
      if ($cmp23) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then24
      var $35=$last_addr;
      var $add25=(($35+2)|0);
      $val=$add25;
      var $36=$val;
      var $conv=(($36) & 65535);
      var $conv26=(($conv)&65535);
      var $37=$s_addr;
      var $bi_valid27=(($37+5820)|0);
      var $38=HEAP32[(($bi_valid27)>>2)];
      var $shl=$conv26 << $38;
      var $39=$s_addr;
      var $bi_buf=(($39+5816)|0);
      var $40=HEAPU16[(($bi_buf)>>1)];
      var $conv28=(($40)&65535);
      var $or=$conv28 | $shl;
      var $conv29=(($or) & 65535);
      HEAP16[(($bi_buf)>>1)]=$conv29;
      var $41=$s_addr;
      var $bi_buf30=(($41+5816)|0);
      var $42=HEAPU16[(($bi_buf30)>>1)];
      var $conv31=(($42)&65535);
      var $and=$conv31 & 255;
      var $conv32=(($and) & 255);
      var $43=$s_addr;
      var $pending=(($43+20)|0);
      var $44=HEAPU32[(($pending)>>2)];
      var $inc=(($44+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $45=$s_addr;
      var $pending_buf=(($45+8)|0);
      var $46=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($46+$44)|0);
      HEAP8[($arrayidx)]=$conv32;
      var $47=$s_addr;
      var $bi_buf33=(($47+5816)|0);
      var $48=HEAPU16[(($bi_buf33)>>1)];
      var $conv34=(($48)&65535);
      var $shr35=$conv34 >> 8;
      var $conv36=(($shr35) & 255);
      var $49=$s_addr;
      var $pending37=(($49+20)|0);
      var $50=HEAPU32[(($pending37)>>2)];
      var $inc38=(($50+1)|0);
      HEAP32[(($pending37)>>2)]=$inc38;
      var $51=$s_addr;
      var $pending_buf39=(($51+8)|0);
      var $52=HEAP32[(($pending_buf39)>>2)];
      var $arrayidx40=(($52+$50)|0);
      HEAP8[($arrayidx40)]=$conv36;
      var $53=$val;
      var $conv41=(($53) & 65535);
      var $conv42=(($conv41)&65535);
      var $54=$s_addr;
      var $bi_valid43=(($54+5820)|0);
      var $55=HEAP32[(($bi_valid43)>>2)];
      var $sub44=((16-$55)|0);
      var $shr45=$conv42 >> (($sub44)|0);
      var $conv46=(($shr45) & 65535);
      var $56=$s_addr;
      var $bi_buf47=(($56+5816)|0);
      HEAP16[(($bi_buf47)>>1)]=$conv46;
      var $57=$len;
      var $sub48=(($57-16)|0);
      var $58=$s_addr;
      var $bi_valid49=(($58+5820)|0);
      var $59=HEAP32[(($bi_valid49)>>2)];
      var $add50=(($59+$sub48)|0);
      HEAP32[(($bi_valid49)>>2)]=$add50;
      __label__ = 15; break;
    case 14: // $if_else51
      var $60=$last_addr;
      var $add52=(($60+2)|0);
      var $conv53=(($add52) & 65535);
      var $conv54=(($conv53)&65535);
      var $61=$s_addr;
      var $bi_valid55=(($61+5820)|0);
      var $62=HEAP32[(($bi_valid55)>>2)];
      var $shl56=$conv54 << $62;
      var $63=$s_addr;
      var $bi_buf57=(($63+5816)|0);
      var $64=HEAPU16[(($bi_buf57)>>1)];
      var $conv58=(($64)&65535);
      var $or59=$conv58 | $shl56;
      var $conv60=(($or59) & 65535);
      HEAP16[(($bi_buf57)>>1)]=$conv60;
      var $65=$len;
      var $66=$s_addr;
      var $bi_valid61=(($66+5820)|0);
      var $67=HEAP32[(($bi_valid61)>>2)];
      var $add62=(($67+$65)|0);
      HEAP32[(($bi_valid61)>>2)]=$add62;
      __label__ = 15; break;
    case 15: // $if_end63
      var $68=$s_addr;
      _compress_block($68, ((_static_ltree)|0), ((_static_dtree)|0));
      __label__ = 20; break;
    case 16: // $if_else64
      $len65=3;
      var $69=$s_addr;
      var $bi_valid66=(($69+5820)|0);
      var $70=HEAP32[(($bi_valid66)>>2)];
      var $71=$len65;
      var $sub67=((16-$71)|0);
      var $cmp68=(($70)|0) > (($sub67)|0);
      if ($cmp68) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then70
      var $72=$last_addr;
      var $add72=(($72+4)|0);
      $val71=$add72;
      var $73=$val71;
      var $conv73=(($73) & 65535);
      var $conv74=(($conv73)&65535);
      var $74=$s_addr;
      var $bi_valid75=(($74+5820)|0);
      var $75=HEAP32[(($bi_valid75)>>2)];
      var $shl76=$conv74 << $75;
      var $76=$s_addr;
      var $bi_buf77=(($76+5816)|0);
      var $77=HEAPU16[(($bi_buf77)>>1)];
      var $conv78=(($77)&65535);
      var $or79=$conv78 | $shl76;
      var $conv80=(($or79) & 65535);
      HEAP16[(($bi_buf77)>>1)]=$conv80;
      var $78=$s_addr;
      var $bi_buf81=(($78+5816)|0);
      var $79=HEAPU16[(($bi_buf81)>>1)];
      var $conv82=(($79)&65535);
      var $and83=$conv82 & 255;
      var $conv84=(($and83) & 255);
      var $80=$s_addr;
      var $pending85=(($80+20)|0);
      var $81=HEAPU32[(($pending85)>>2)];
      var $inc86=(($81+1)|0);
      HEAP32[(($pending85)>>2)]=$inc86;
      var $82=$s_addr;
      var $pending_buf87=(($82+8)|0);
      var $83=HEAP32[(($pending_buf87)>>2)];
      var $arrayidx88=(($83+$81)|0);
      HEAP8[($arrayidx88)]=$conv84;
      var $84=$s_addr;
      var $bi_buf89=(($84+5816)|0);
      var $85=HEAPU16[(($bi_buf89)>>1)];
      var $conv90=(($85)&65535);
      var $shr91=$conv90 >> 8;
      var $conv92=(($shr91) & 255);
      var $86=$s_addr;
      var $pending93=(($86+20)|0);
      var $87=HEAPU32[(($pending93)>>2)];
      var $inc94=(($87+1)|0);
      HEAP32[(($pending93)>>2)]=$inc94;
      var $88=$s_addr;
      var $pending_buf95=(($88+8)|0);
      var $89=HEAP32[(($pending_buf95)>>2)];
      var $arrayidx96=(($89+$87)|0);
      HEAP8[($arrayidx96)]=$conv92;
      var $90=$val71;
      var $conv97=(($90) & 65535);
      var $conv98=(($conv97)&65535);
      var $91=$s_addr;
      var $bi_valid99=(($91+5820)|0);
      var $92=HEAP32[(($bi_valid99)>>2)];
      var $sub100=((16-$92)|0);
      var $shr101=$conv98 >> (($sub100)|0);
      var $conv102=(($shr101) & 65535);
      var $93=$s_addr;
      var $bi_buf103=(($93+5816)|0);
      HEAP16[(($bi_buf103)>>1)]=$conv102;
      var $94=$len65;
      var $sub104=(($94-16)|0);
      var $95=$s_addr;
      var $bi_valid105=(($95+5820)|0);
      var $96=HEAP32[(($bi_valid105)>>2)];
      var $add106=(($96+$sub104)|0);
      HEAP32[(($bi_valid105)>>2)]=$add106;
      __label__ = 19; break;
    case 18: // $if_else107
      var $97=$last_addr;
      var $add108=(($97+4)|0);
      var $conv109=(($add108) & 65535);
      var $conv110=(($conv109)&65535);
      var $98=$s_addr;
      var $bi_valid111=(($98+5820)|0);
      var $99=HEAP32[(($bi_valid111)>>2)];
      var $shl112=$conv110 << $99;
      var $100=$s_addr;
      var $bi_buf113=(($100+5816)|0);
      var $101=HEAPU16[(($bi_buf113)>>1)];
      var $conv114=(($101)&65535);
      var $or115=$conv114 | $shl112;
      var $conv116=(($or115) & 65535);
      HEAP16[(($bi_buf113)>>1)]=$conv116;
      var $102=$len65;
      var $103=$s_addr;
      var $bi_valid117=(($103+5820)|0);
      var $104=HEAP32[(($bi_valid117)>>2)];
      var $add118=(($104+$102)|0);
      HEAP32[(($bi_valid117)>>2)]=$add118;
      __label__ = 19; break;
    case 19: // $if_end119
      var $105=$s_addr;
      var $106=$s_addr;
      var $l_desc120=(($106+2840)|0);
      var $max_code=(($l_desc120+4)|0);
      var $107=HEAP32[(($max_code)>>2)];
      var $add121=(($107+1)|0);
      var $108=$s_addr;
      var $d_desc122=(($108+2852)|0);
      var $max_code123=(($d_desc122+4)|0);
      var $109=HEAP32[(($max_code123)>>2)];
      var $add124=(($109+1)|0);
      var $110=$max_blindex;
      var $add125=(($110+1)|0);
      _send_all_trees($105, $add121, $add124, $add125);
      var $111=$s_addr;
      var $112=$s_addr;
      var $dyn_ltree=(($112+148)|0);
      var $arraydecay=(($dyn_ltree)|0);
      var $113=$s_addr;
      var $dyn_dtree=(($113+2440)|0);
      var $arraydecay126=(($dyn_dtree)|0);
      _compress_block($111, $arraydecay, $arraydecay126);
      __label__ = 20; break;
    case 20: // $if_end127
      __label__ = 21; break;
    case 21: // $if_end128
      var $114=$s_addr;
      _init_block($114);
      var $115=$last_addr;
      var $tobool=(($115)|0)!=0;
      if ($tobool) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then129
      var $116=$s_addr;
      _bi_windup($116);
      __label__ = 23; break;
    case 23: // $if_end130
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__tr_flush_block["X"]=1;

function _detect_data_type($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $s_addr;
      var $black_mask;
      var $n;
      $s_addr=$s;
      $black_mask=-201342849;
      $n=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$n;
      var $cmp=(($0)|0) <= 31;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 7; break; }
    case 2: // $for_body
      var $1=$black_mask;
      var $and=$1 & 1;
      var $tobool=(($and)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: // $land_lhs_true
      var $2=$n;
      var $3=$s_addr;
      var $dyn_ltree=(($3+148)|0);
      var $arrayidx=(($dyn_ltree+($2<<2))|0);
      var $fc=(($arrayidx)|0);
      var $freq=$fc;
      var $4=HEAPU16[(($freq)>>1)];
      var $conv=(($4)&65535);
      var $cmp1=(($conv)|0)!=0;
      if ($cmp1) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then
      $retval=0;
      __label__ = 18; break;
    case 5: // $if_end
      __label__ = 6; break;
    case 6: // $for_inc
      var $5=$n;
      var $inc=(($5+1)|0);
      $n=$inc;
      var $6=$black_mask;
      var $shr=$6 >>> 1;
      $black_mask=$shr;
      __label__ = 1; break;
    case 7: // $for_end
      var $7=$s_addr;
      var $dyn_ltree3=(($7+148)|0);
      var $arrayidx4=(($dyn_ltree3+36)|0);
      var $fc5=(($arrayidx4)|0);
      var $freq6=$fc5;
      var $8=HEAPU16[(($freq6)>>1)];
      var $conv7=(($8)&65535);
      var $cmp8=(($conv7)|0)!=0;
      if ($cmp8) { __label__ = 10; break; } else { __label__ = 8; break; }
    case 8: // $lor_lhs_false
      var $9=$s_addr;
      var $dyn_ltree10=(($9+148)|0);
      var $arrayidx11=(($dyn_ltree10+40)|0);
      var $fc12=(($arrayidx11)|0);
      var $freq13=$fc12;
      var $10=HEAPU16[(($freq13)>>1)];
      var $conv14=(($10)&65535);
      var $cmp15=(($conv14)|0)!=0;
      if ($cmp15) { __label__ = 10; break; } else { __label__ = 9; break; }
    case 9: // $lor_lhs_false17
      var $11=$s_addr;
      var $dyn_ltree18=(($11+148)|0);
      var $arrayidx19=(($dyn_ltree18+52)|0);
      var $fc20=(($arrayidx19)|0);
      var $freq21=$fc20;
      var $12=HEAPU16[(($freq21)>>1)];
      var $conv22=(($12)&65535);
      var $cmp23=(($conv22)|0)!=0;
      if ($cmp23) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then25
      $retval=1;
      __label__ = 18; break;
    case 11: // $if_end26
      $n=32;
      __label__ = 12; break;
    case 12: // $for_cond27
      var $13=$n;
      var $cmp28=(($13)|0) < 256;
      if ($cmp28) { __label__ = 13; break; } else { __label__ = 17; break; }
    case 13: // $for_body30
      var $14=$n;
      var $15=$s_addr;
      var $dyn_ltree31=(($15+148)|0);
      var $arrayidx32=(($dyn_ltree31+($14<<2))|0);
      var $fc33=(($arrayidx32)|0);
      var $freq34=$fc33;
      var $16=HEAPU16[(($freq34)>>1)];
      var $conv35=(($16)&65535);
      var $cmp36=(($conv35)|0)!=0;
      if ($cmp36) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then38
      $retval=1;
      __label__ = 18; break;
    case 15: // $if_end39
      __label__ = 16; break;
    case 16: // $for_inc40
      var $17=$n;
      var $inc41=(($17+1)|0);
      $n=$inc41;
      __label__ = 12; break;
    case 17: // $for_end42
      $retval=0;
      __label__ = 18; break;
    case 18: // $return
      var $18=$retval;
      ;
      return $18;
    default: assert(0, "bad label: " + __label__);
  }
}
_detect_data_type["X"]=1;

function _build_tree($s, $desc) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $desc_addr;
      var $tree;
      var $stree;
      var $elems;
      var $n;
      var $m;
      var $max_code;
      var $node;
      $s_addr=$s;
      $desc_addr=$desc;
      var $0=$desc_addr;
      var $dyn_tree=(($0)|0);
      var $1=HEAP32[(($dyn_tree)>>2)];
      $tree=$1;
      var $2=$desc_addr;
      var $stat_desc=(($2+8)|0);
      var $3=HEAP32[(($stat_desc)>>2)];
      var $static_tree=(($3)|0);
      var $4=HEAP32[(($static_tree)>>2)];
      $stree=$4;
      var $5=$desc_addr;
      var $stat_desc1=(($5+8)|0);
      var $6=HEAP32[(($stat_desc1)>>2)];
      var $elems2=(($6+12)|0);
      var $7=HEAP32[(($elems2)>>2)];
      $elems=$7;
      $max_code=-1;
      var $8=$s_addr;
      var $heap_len=(($8+5200)|0);
      HEAP32[(($heap_len)>>2)]=0;
      var $9=$s_addr;
      var $heap_max=(($9+5204)|0);
      HEAP32[(($heap_max)>>2)]=573;
      $n=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $10=$n;
      var $11=$elems;
      var $cmp=(($10)|0) < (($11)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 7; break; }
    case 2: // $for_body
      var $12=$n;
      var $13=$tree;
      var $arrayidx=(($13+($12<<2))|0);
      var $fc=(($arrayidx)|0);
      var $freq=$fc;
      var $14=HEAPU16[(($freq)>>1)];
      var $conv=(($14)&65535);
      var $cmp3=(($conv)|0)!=0;
      if ($cmp3) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $15=$n;
      $max_code=$15;
      var $16=$s_addr;
      var $heap_len5=(($16+5200)|0);
      var $17=HEAP32[(($heap_len5)>>2)];
      var $inc=(($17+1)|0);
      HEAP32[(($heap_len5)>>2)]=$inc;
      var $18=$s_addr;
      var $heap=(($18+2908)|0);
      var $arrayidx6=(($heap+($inc<<2))|0);
      HEAP32[(($arrayidx6)>>2)]=$15;
      var $19=$n;
      var $20=$s_addr;
      var $depth=(($20+5208)|0);
      var $arrayidx7=(($depth+$19)|0);
      HEAP8[($arrayidx7)]=0;
      __label__ = 5; break;
    case 4: // $if_else
      var $21=$n;
      var $22=$tree;
      var $arrayidx8=(($22+($21<<2))|0);
      var $dl=(($arrayidx8+2)|0);
      var $len=$dl;
      HEAP16[(($len)>>1)]=0;
      __label__ = 5; break;
    case 5: // $if_end
      __label__ = 6; break;
    case 6: // $for_inc
      var $23=$n;
      var $inc9=(($23+1)|0);
      $n=$inc9;
      __label__ = 1; break;
    case 7: // $for_end
      __label__ = 8; break;
    case 8: // $while_cond
      var $24=$s_addr;
      var $heap_len10=(($24+5200)|0);
      var $25=HEAP32[(($heap_len10)>>2)];
      var $cmp11=(($25)|0) < 2;
      if ($cmp11) { __label__ = 9; break; } else { __label__ = 15; break; }
    case 9: // $while_body
      var $26=$max_code;
      var $cmp13=(($26)|0) < 2;
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $cond_true
      var $27=$max_code;
      var $inc15=(($27+1)|0);
      $max_code=$inc15;
      var $cond = $inc15;__label__ = 12; break;
    case 11: // $cond_false
      var $cond = 0;__label__ = 12; break;
    case 12: // $cond_end
      var $cond;
      var $28=$s_addr;
      var $heap_len16=(($28+5200)|0);
      var $29=HEAP32[(($heap_len16)>>2)];
      var $inc17=(($29+1)|0);
      HEAP32[(($heap_len16)>>2)]=$inc17;
      var $30=$s_addr;
      var $heap18=(($30+2908)|0);
      var $arrayidx19=(($heap18+($inc17<<2))|0);
      HEAP32[(($arrayidx19)>>2)]=$cond;
      $node=$cond;
      var $31=$node;
      var $32=$tree;
      var $arrayidx20=(($32+($31<<2))|0);
      var $fc21=(($arrayidx20)|0);
      var $freq22=$fc21;
      HEAP16[(($freq22)>>1)]=1;
      var $33=$node;
      var $34=$s_addr;
      var $depth23=(($34+5208)|0);
      var $arrayidx24=(($depth23+$33)|0);
      HEAP8[($arrayidx24)]=0;
      var $35=$s_addr;
      var $opt_len=(($35+5800)|0);
      var $36=HEAP32[(($opt_len)>>2)];
      var $dec=(($36-1)|0);
      HEAP32[(($opt_len)>>2)]=$dec;
      var $37=$stree;
      var $tobool=(($37)|0)!=0;
      if ($tobool) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then25
      var $38=$node;
      var $39=$stree;
      var $arrayidx26=(($39+($38<<2))|0);
      var $dl27=(($arrayidx26+2)|0);
      var $len28=$dl27;
      var $40=HEAPU16[(($len28)>>1)];
      var $conv29=(($40)&65535);
      var $41=$s_addr;
      var $static_len=(($41+5804)|0);
      var $42=HEAP32[(($static_len)>>2)];
      var $sub=(($42-$conv29)|0);
      HEAP32[(($static_len)>>2)]=$sub;
      __label__ = 14; break;
    case 14: // $if_end30
      __label__ = 8; break;
    case 15: // $while_end
      var $43=$max_code;
      var $44=$desc_addr;
      var $max_code31=(($44+4)|0);
      HEAP32[(($max_code31)>>2)]=$43;
      var $45=$s_addr;
      var $heap_len32=(($45+5200)|0);
      var $46=HEAP32[(($heap_len32)>>2)];
      var $div=(((($46)|0)/2)|0);
      $n=$div;
      __label__ = 16; break;
    case 16: // $for_cond33
      var $47=$n;
      var $cmp34=(($47)|0) >= 1;
      if ($cmp34) { __label__ = 17; break; } else { __label__ = 19; break; }
    case 17: // $for_body36
      var $48=$s_addr;
      var $49=$tree;
      var $50=$n;
      _pqdownheap($48, $49, $50);
      __label__ = 18; break;
    case 18: // $for_inc37
      var $51=$n;
      var $dec38=(($51-1)|0);
      $n=$dec38;
      __label__ = 16; break;
    case 19: // $for_end39
      var $52=$elems;
      $node=$52;
      __label__ = 20; break;
    case 20: // $do_body
      var $53=$s_addr;
      var $heap40=(($53+2908)|0);
      var $arrayidx41=(($heap40+4)|0);
      var $54=HEAP32[(($arrayidx41)>>2)];
      $n=$54;
      var $55=$s_addr;
      var $heap_len42=(($55+5200)|0);
      var $56=HEAP32[(($heap_len42)>>2)];
      var $dec43=(($56-1)|0);
      HEAP32[(($heap_len42)>>2)]=$dec43;
      var $57=$s_addr;
      var $heap44=(($57+2908)|0);
      var $arrayidx45=(($heap44+($56<<2))|0);
      var $58=HEAP32[(($arrayidx45)>>2)];
      var $59=$s_addr;
      var $heap46=(($59+2908)|0);
      var $arrayidx47=(($heap46+4)|0);
      HEAP32[(($arrayidx47)>>2)]=$58;
      var $60=$s_addr;
      var $61=$tree;
      _pqdownheap($60, $61, 1);
      var $62=$s_addr;
      var $heap48=(($62+2908)|0);
      var $arrayidx49=(($heap48+4)|0);
      var $63=HEAP32[(($arrayidx49)>>2)];
      $m=$63;
      var $64=$n;
      var $65=$s_addr;
      var $heap_max50=(($65+5204)|0);
      var $66=HEAP32[(($heap_max50)>>2)];
      var $dec51=(($66-1)|0);
      HEAP32[(($heap_max50)>>2)]=$dec51;
      var $67=$s_addr;
      var $heap52=(($67+2908)|0);
      var $arrayidx53=(($heap52+($dec51<<2))|0);
      HEAP32[(($arrayidx53)>>2)]=$64;
      var $68=$m;
      var $69=$s_addr;
      var $heap_max54=(($69+5204)|0);
      var $70=HEAP32[(($heap_max54)>>2)];
      var $dec55=(($70-1)|0);
      HEAP32[(($heap_max54)>>2)]=$dec55;
      var $71=$s_addr;
      var $heap56=(($71+2908)|0);
      var $arrayidx57=(($heap56+($dec55<<2))|0);
      HEAP32[(($arrayidx57)>>2)]=$68;
      var $72=$n;
      var $73=$tree;
      var $arrayidx58=(($73+($72<<2))|0);
      var $fc59=(($arrayidx58)|0);
      var $freq60=$fc59;
      var $74=HEAPU16[(($freq60)>>1)];
      var $conv61=(($74)&65535);
      var $75=$m;
      var $76=$tree;
      var $arrayidx62=(($76+($75<<2))|0);
      var $fc63=(($arrayidx62)|0);
      var $freq64=$fc63;
      var $77=HEAPU16[(($freq64)>>1)];
      var $conv65=(($77)&65535);
      var $add=(($conv61+$conv65)|0);
      var $conv66=(($add) & 65535);
      var $78=$node;
      var $79=$tree;
      var $arrayidx67=(($79+($78<<2))|0);
      var $fc68=(($arrayidx67)|0);
      var $freq69=$fc68;
      HEAP16[(($freq69)>>1)]=$conv66;
      var $80=$n;
      var $81=$s_addr;
      var $depth70=(($81+5208)|0);
      var $arrayidx71=(($depth70+$80)|0);
      var $82=HEAPU8[($arrayidx71)];
      var $conv72=(($82)&255);
      var $83=$m;
      var $84=$s_addr;
      var $depth73=(($84+5208)|0);
      var $arrayidx74=(($depth73+$83)|0);
      var $85=HEAPU8[($arrayidx74)];
      var $conv75=(($85)&255);
      var $cmp76=(($conv72)|0) >= (($conv75)|0);
      if ($cmp76) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: // $cond_true78
      var $86=$n;
      var $87=$s_addr;
      var $depth79=(($87+5208)|0);
      var $arrayidx80=(($depth79+$86)|0);
      var $88=HEAPU8[($arrayidx80)];
      var $conv81=(($88)&255);
      var $cond87 = $conv81;__label__ = 23; break;
    case 22: // $cond_false82
      var $89=$m;
      var $90=$s_addr;
      var $depth83=(($90+5208)|0);
      var $arrayidx84=(($depth83+$89)|0);
      var $91=HEAPU8[($arrayidx84)];
      var $conv85=(($91)&255);
      var $cond87 = $conv85;__label__ = 23; break;
    case 23: // $cond_end86
      var $cond87;
      var $add88=(($cond87+1)|0);
      var $conv89=(($add88) & 255);
      var $92=$node;
      var $93=$s_addr;
      var $depth90=(($93+5208)|0);
      var $arrayidx91=(($depth90+$92)|0);
      HEAP8[($arrayidx91)]=$conv89;
      var $94=$node;
      var $conv92=(($94) & 65535);
      var $95=$m;
      var $96=$tree;
      var $arrayidx93=(($96+($95<<2))|0);
      var $dl94=(($arrayidx93+2)|0);
      var $dad=$dl94;
      HEAP16[(($dad)>>1)]=$conv92;
      var $97=$n;
      var $98=$tree;
      var $arrayidx95=(($98+($97<<2))|0);
      var $dl96=(($arrayidx95+2)|0);
      var $dad97=$dl96;
      HEAP16[(($dad97)>>1)]=$conv92;
      var $99=$node;
      var $inc98=(($99+1)|0);
      $node=$inc98;
      var $100=$s_addr;
      var $heap99=(($100+2908)|0);
      var $arrayidx100=(($heap99+4)|0);
      HEAP32[(($arrayidx100)>>2)]=$99;
      var $101=$s_addr;
      var $102=$tree;
      _pqdownheap($101, $102, 1);
      __label__ = 24; break;
    case 24: // $do_cond
      var $103=$s_addr;
      var $heap_len101=(($103+5200)|0);
      var $104=HEAP32[(($heap_len101)>>2)];
      var $cmp102=(($104)|0) >= 2;
      if ($cmp102) { __label__ = 20; break; } else { __label__ = 25; break; }
    case 25: // $do_end
      var $105=$s_addr;
      var $heap104=(($105+2908)|0);
      var $arrayidx105=(($heap104+4)|0);
      var $106=HEAP32[(($arrayidx105)>>2)];
      var $107=$s_addr;
      var $heap_max106=(($107+5204)|0);
      var $108=HEAP32[(($heap_max106)>>2)];
      var $dec107=(($108-1)|0);
      HEAP32[(($heap_max106)>>2)]=$dec107;
      var $109=$s_addr;
      var $heap108=(($109+2908)|0);
      var $arrayidx109=(($heap108+($dec107<<2))|0);
      HEAP32[(($arrayidx109)>>2)]=$106;
      var $110=$s_addr;
      var $111=$desc_addr;
      _gen_bitlen($110, $111);
      var $112=$tree;
      var $113=$max_code;
      var $114=$s_addr;
      var $bl_count=(($114+2876)|0);
      var $arraydecay=(($bl_count)|0);
      _gen_codes($112, $113, $arraydecay);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_build_tree["X"]=1;

function _build_bl_tree($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $max_blindex;
      $s_addr=$s;
      var $0=$s_addr;
      var $1=$s_addr;
      var $dyn_ltree=(($1+148)|0);
      var $arraydecay=(($dyn_ltree)|0);
      var $2=$s_addr;
      var $l_desc=(($2+2840)|0);
      var $max_code=(($l_desc+4)|0);
      var $3=HEAP32[(($max_code)>>2)];
      _scan_tree($0, $arraydecay, $3);
      var $4=$s_addr;
      var $5=$s_addr;
      var $dyn_dtree=(($5+2440)|0);
      var $arraydecay1=(($dyn_dtree)|0);
      var $6=$s_addr;
      var $d_desc=(($6+2852)|0);
      var $max_code2=(($d_desc+4)|0);
      var $7=HEAP32[(($max_code2)>>2)];
      _scan_tree($4, $arraydecay1, $7);
      var $8=$s_addr;
      var $9=$s_addr;
      var $bl_desc=(($9+2864)|0);
      _build_tree($8, $bl_desc);
      $max_blindex=18;
      __label__ = 1; break;
    case 1: // $for_cond
      var $10=$max_blindex;
      var $cmp=(($10)|0) >= 3;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 6; break; }
    case 2: // $for_body
      var $11=$max_blindex;
      var $arrayidx=((STRING_TABLE._bl_order+$11)|0);
      var $12=HEAPU8[($arrayidx)];
      var $idxprom=(($12)&255);
      var $13=$s_addr;
      var $bl_tree=(($13+2684)|0);
      var $arrayidx3=(($bl_tree+($idxprom<<2))|0);
      var $dl=(($arrayidx3+2)|0);
      var $len=$dl;
      var $14=HEAPU16[(($len)>>1)];
      var $conv=(($14)&65535);
      var $cmp4=(($conv)|0)!=0;
      if ($cmp4) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      __label__ = 6; break;
    case 4: // $if_end
      __label__ = 5; break;
    case 5: // $for_inc
      var $15=$max_blindex;
      var $dec=(($15-1)|0);
      $max_blindex=$dec;
      __label__ = 1; break;
    case 6: // $for_end
      var $16=$max_blindex;
      var $add=(($16+1)|0);
      var $mul=(($add*3)|0);
      var $add6=(($mul+5)|0);
      var $add7=(($add6+5)|0);
      var $add8=(($add7+4)|0);
      var $17=$s_addr;
      var $opt_len=(($17+5800)|0);
      var $18=HEAP32[(($opt_len)>>2)];
      var $add9=(($18+$add8)|0);
      HEAP32[(($opt_len)>>2)]=$add9;
      var $19=$max_blindex;
      ;
      return $19;
    default: assert(0, "bad label: " + __label__);
  }
}
_build_bl_tree["X"]=1;

function _compress_block($s, $ltree, $dtree) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $ltree_addr;
      var $dtree_addr;
      var $dist;
      var $lc;
      var $lx;
      var $code;
      var $extra;
      var $len;
      var $val;
      var $len56;
      var $val68;
      var $len131;
      var $val137;
      var $len193;
      var $val203;
      var $len262;
      var $val268;
      var $len321;
      var $val331;
      $s_addr=$s;
      $ltree_addr=$ltree;
      $dtree_addr=$dtree;
      $lx=0;
      var $0=$s_addr;
      var $last_lit=(($0+5792)|0);
      var $1=HEAP32[(($last_lit)>>2)];
      var $cmp=(($1)|0)!=0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 30; break; }
    case 1: // $if_then
      __label__ = 2; break;
    case 2: // $do_body
      var $2=$lx;
      var $3=$s_addr;
      var $d_buf=(($3+5796)|0);
      var $4=HEAP32[(($d_buf)>>2)];
      var $arrayidx=(($4+($2<<1))|0);
      var $5=HEAPU16[(($arrayidx)>>1)];
      var $conv=(($5)&65535);
      $dist=$conv;
      var $6=$lx;
      var $inc=(($6+1)|0);
      $lx=$inc;
      var $7=$s_addr;
      var $l_buf=(($7+5784)|0);
      var $8=HEAP32[(($l_buf)>>2)];
      var $arrayidx1=(($8+$6)|0);
      var $9=HEAPU8[($arrayidx1)];
      var $conv2=(($9)&255);
      $lc=$conv2;
      var $10=$dist;
      var $cmp3=(($10)|0)==0;
      if ($cmp3) { __label__ = 3; break; } else { __label__ = 7; break; }
    case 3: // $if_then5
      var $11=$lc;
      var $12=$ltree_addr;
      var $arrayidx6=(($12+($11<<2))|0);
      var $dl=(($arrayidx6+2)|0);
      var $len7=$dl;
      var $13=HEAPU16[(($len7)>>1)];
      var $conv8=(($13)&65535);
      $len=$conv8;
      var $14=$s_addr;
      var $bi_valid=(($14+5820)|0);
      var $15=HEAP32[(($bi_valid)>>2)];
      var $16=$len;
      var $sub=((16-$16)|0);
      var $cmp9=(($15)|0) > (($sub)|0);
      if ($cmp9) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then11
      var $17=$lc;
      var $18=$ltree_addr;
      var $arrayidx12=(($18+($17<<2))|0);
      var $fc=(($arrayidx12)|0);
      var $code13=$fc;
      var $19=HEAPU16[(($code13)>>1)];
      var $conv14=(($19)&65535);
      $val=$conv14;
      var $20=$val;
      var $conv15=(($20) & 65535);
      var $conv16=(($conv15)&65535);
      var $21=$s_addr;
      var $bi_valid17=(($21+5820)|0);
      var $22=HEAP32[(($bi_valid17)>>2)];
      var $shl=$conv16 << $22;
      var $23=$s_addr;
      var $bi_buf=(($23+5816)|0);
      var $24=HEAPU16[(($bi_buf)>>1)];
      var $conv18=(($24)&65535);
      var $or=$conv18 | $shl;
      var $conv19=(($or) & 65535);
      HEAP16[(($bi_buf)>>1)]=$conv19;
      var $25=$s_addr;
      var $bi_buf20=(($25+5816)|0);
      var $26=HEAPU16[(($bi_buf20)>>1)];
      var $conv21=(($26)&65535);
      var $and=$conv21 & 255;
      var $conv22=(($and) & 255);
      var $27=$s_addr;
      var $pending=(($27+20)|0);
      var $28=HEAPU32[(($pending)>>2)];
      var $inc23=(($28+1)|0);
      HEAP32[(($pending)>>2)]=$inc23;
      var $29=$s_addr;
      var $pending_buf=(($29+8)|0);
      var $30=HEAP32[(($pending_buf)>>2)];
      var $arrayidx24=(($30+$28)|0);
      HEAP8[($arrayidx24)]=$conv22;
      var $31=$s_addr;
      var $bi_buf25=(($31+5816)|0);
      var $32=HEAPU16[(($bi_buf25)>>1)];
      var $conv26=(($32)&65535);
      var $shr=$conv26 >> 8;
      var $conv27=(($shr) & 255);
      var $33=$s_addr;
      var $pending28=(($33+20)|0);
      var $34=HEAPU32[(($pending28)>>2)];
      var $inc29=(($34+1)|0);
      HEAP32[(($pending28)>>2)]=$inc29;
      var $35=$s_addr;
      var $pending_buf30=(($35+8)|0);
      var $36=HEAP32[(($pending_buf30)>>2)];
      var $arrayidx31=(($36+$34)|0);
      HEAP8[($arrayidx31)]=$conv27;
      var $37=$val;
      var $conv32=(($37) & 65535);
      var $conv33=(($conv32)&65535);
      var $38=$s_addr;
      var $bi_valid34=(($38+5820)|0);
      var $39=HEAP32[(($bi_valid34)>>2)];
      var $sub35=((16-$39)|0);
      var $shr36=$conv33 >> (($sub35)|0);
      var $conv37=(($shr36) & 65535);
      var $40=$s_addr;
      var $bi_buf38=(($40+5816)|0);
      HEAP16[(($bi_buf38)>>1)]=$conv37;
      var $41=$len;
      var $sub39=(($41-16)|0);
      var $42=$s_addr;
      var $bi_valid40=(($42+5820)|0);
      var $43=HEAP32[(($bi_valid40)>>2)];
      var $add=(($43+$sub39)|0);
      HEAP32[(($bi_valid40)>>2)]=$add;
      __label__ = 6; break;
    case 5: // $if_else
      var $44=$lc;
      var $45=$ltree_addr;
      var $arrayidx41=(($45+($44<<2))|0);
      var $fc42=(($arrayidx41)|0);
      var $code43=$fc42;
      var $46=HEAPU16[(($code43)>>1)];
      var $conv44=(($46)&65535);
      var $47=$s_addr;
      var $bi_valid45=(($47+5820)|0);
      var $48=HEAP32[(($bi_valid45)>>2)];
      var $shl46=$conv44 << $48;
      var $49=$s_addr;
      var $bi_buf47=(($49+5816)|0);
      var $50=HEAPU16[(($bi_buf47)>>1)];
      var $conv48=(($50)&65535);
      var $or49=$conv48 | $shl46;
      var $conv50=(($or49) & 65535);
      HEAP16[(($bi_buf47)>>1)]=$conv50;
      var $51=$len;
      var $52=$s_addr;
      var $bi_valid51=(($52+5820)|0);
      var $53=HEAP32[(($bi_valid51)>>2)];
      var $add52=(($53+$51)|0);
      HEAP32[(($bi_valid51)>>2)]=$add52;
      __label__ = 6; break;
    case 6: // $if_end
      __label__ = 27; break;
    case 7: // $if_else53
      var $54=$lc;
      var $arrayidx54=((STRING_TABLE.__length_code+$54)|0);
      var $55=HEAPU8[($arrayidx54)];
      var $conv55=(($55)&255);
      $code=$conv55;
      var $56=$code;
      var $add57=(($56+256)|0);
      var $add58=(($add57+1)|0);
      var $57=$ltree_addr;
      var $arrayidx59=(($57+($add58<<2))|0);
      var $dl60=(($arrayidx59+2)|0);
      var $len61=$dl60;
      var $58=HEAPU16[(($len61)>>1)];
      var $conv62=(($58)&65535);
      $len56=$conv62;
      var $59=$s_addr;
      var $bi_valid63=(($59+5820)|0);
      var $60=HEAP32[(($bi_valid63)>>2)];
      var $61=$len56;
      var $sub64=((16-$61)|0);
      var $cmp65=(($60)|0) > (($sub64)|0);
      if ($cmp65) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then67
      var $62=$code;
      var $add69=(($62+256)|0);
      var $add70=(($add69+1)|0);
      var $63=$ltree_addr;
      var $arrayidx71=(($63+($add70<<2))|0);
      var $fc72=(($arrayidx71)|0);
      var $code73=$fc72;
      var $64=HEAPU16[(($code73)>>1)];
      var $conv74=(($64)&65535);
      $val68=$conv74;
      var $65=$val68;
      var $conv75=(($65) & 65535);
      var $conv76=(($conv75)&65535);
      var $66=$s_addr;
      var $bi_valid77=(($66+5820)|0);
      var $67=HEAP32[(($bi_valid77)>>2)];
      var $shl78=$conv76 << $67;
      var $68=$s_addr;
      var $bi_buf79=(($68+5816)|0);
      var $69=HEAPU16[(($bi_buf79)>>1)];
      var $conv80=(($69)&65535);
      var $or81=$conv80 | $shl78;
      var $conv82=(($or81) & 65535);
      HEAP16[(($bi_buf79)>>1)]=$conv82;
      var $70=$s_addr;
      var $bi_buf83=(($70+5816)|0);
      var $71=HEAPU16[(($bi_buf83)>>1)];
      var $conv84=(($71)&65535);
      var $and85=$conv84 & 255;
      var $conv86=(($and85) & 255);
      var $72=$s_addr;
      var $pending87=(($72+20)|0);
      var $73=HEAPU32[(($pending87)>>2)];
      var $inc88=(($73+1)|0);
      HEAP32[(($pending87)>>2)]=$inc88;
      var $74=$s_addr;
      var $pending_buf89=(($74+8)|0);
      var $75=HEAP32[(($pending_buf89)>>2)];
      var $arrayidx90=(($75+$73)|0);
      HEAP8[($arrayidx90)]=$conv86;
      var $76=$s_addr;
      var $bi_buf91=(($76+5816)|0);
      var $77=HEAPU16[(($bi_buf91)>>1)];
      var $conv92=(($77)&65535);
      var $shr93=$conv92 >> 8;
      var $conv94=(($shr93) & 255);
      var $78=$s_addr;
      var $pending95=(($78+20)|0);
      var $79=HEAPU32[(($pending95)>>2)];
      var $inc96=(($79+1)|0);
      HEAP32[(($pending95)>>2)]=$inc96;
      var $80=$s_addr;
      var $pending_buf97=(($80+8)|0);
      var $81=HEAP32[(($pending_buf97)>>2)];
      var $arrayidx98=(($81+$79)|0);
      HEAP8[($arrayidx98)]=$conv94;
      var $82=$val68;
      var $conv99=(($82) & 65535);
      var $conv100=(($conv99)&65535);
      var $83=$s_addr;
      var $bi_valid101=(($83+5820)|0);
      var $84=HEAP32[(($bi_valid101)>>2)];
      var $sub102=((16-$84)|0);
      var $shr103=$conv100 >> (($sub102)|0);
      var $conv104=(($shr103) & 65535);
      var $85=$s_addr;
      var $bi_buf105=(($85+5816)|0);
      HEAP16[(($bi_buf105)>>1)]=$conv104;
      var $86=$len56;
      var $sub106=(($86-16)|0);
      var $87=$s_addr;
      var $bi_valid107=(($87+5820)|0);
      var $88=HEAP32[(($bi_valid107)>>2)];
      var $add108=(($88+$sub106)|0);
      HEAP32[(($bi_valid107)>>2)]=$add108;
      __label__ = 10; break;
    case 9: // $if_else109
      var $89=$code;
      var $add110=(($89+256)|0);
      var $add111=(($add110+1)|0);
      var $90=$ltree_addr;
      var $arrayidx112=(($90+($add111<<2))|0);
      var $fc113=(($arrayidx112)|0);
      var $code114=$fc113;
      var $91=HEAPU16[(($code114)>>1)];
      var $conv115=(($91)&65535);
      var $92=$s_addr;
      var $bi_valid116=(($92+5820)|0);
      var $93=HEAP32[(($bi_valid116)>>2)];
      var $shl117=$conv115 << $93;
      var $94=$s_addr;
      var $bi_buf118=(($94+5816)|0);
      var $95=HEAPU16[(($bi_buf118)>>1)];
      var $conv119=(($95)&65535);
      var $or120=$conv119 | $shl117;
      var $conv121=(($or120) & 65535);
      HEAP16[(($bi_buf118)>>1)]=$conv121;
      var $96=$len56;
      var $97=$s_addr;
      var $bi_valid122=(($97+5820)|0);
      var $98=HEAP32[(($bi_valid122)>>2)];
      var $add123=(($98+$96)|0);
      HEAP32[(($bi_valid122)>>2)]=$add123;
      __label__ = 10; break;
    case 10: // $if_end124
      var $99=$code;
      var $arrayidx125=((_extra_lbits+($99<<2))|0);
      var $100=HEAP32[(($arrayidx125)>>2)];
      $extra=$100;
      var $101=$extra;
      var $cmp126=(($101)|0)!=0;
      if ($cmp126) { __label__ = 11; break; } else { __label__ = 15; break; }
    case 11: // $if_then128
      var $102=$code;
      var $arrayidx129=((_base_length+($102<<2))|0);
      var $103=HEAP32[(($arrayidx129)>>2)];
      var $104=$lc;
      var $sub130=(($104-$103)|0);
      $lc=$sub130;
      var $105=$extra;
      $len131=$105;
      var $106=$s_addr;
      var $bi_valid132=(($106+5820)|0);
      var $107=HEAP32[(($bi_valid132)>>2)];
      var $108=$len131;
      var $sub133=((16-$108)|0);
      var $cmp134=(($107)|0) > (($sub133)|0);
      if ($cmp134) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then136
      var $109=$lc;
      $val137=$109;
      var $110=$val137;
      var $conv138=(($110) & 65535);
      var $conv139=(($conv138)&65535);
      var $111=$s_addr;
      var $bi_valid140=(($111+5820)|0);
      var $112=HEAP32[(($bi_valid140)>>2)];
      var $shl141=$conv139 << $112;
      var $113=$s_addr;
      var $bi_buf142=(($113+5816)|0);
      var $114=HEAPU16[(($bi_buf142)>>1)];
      var $conv143=(($114)&65535);
      var $or144=$conv143 | $shl141;
      var $conv145=(($or144) & 65535);
      HEAP16[(($bi_buf142)>>1)]=$conv145;
      var $115=$s_addr;
      var $bi_buf146=(($115+5816)|0);
      var $116=HEAPU16[(($bi_buf146)>>1)];
      var $conv147=(($116)&65535);
      var $and148=$conv147 & 255;
      var $conv149=(($and148) & 255);
      var $117=$s_addr;
      var $pending150=(($117+20)|0);
      var $118=HEAPU32[(($pending150)>>2)];
      var $inc151=(($118+1)|0);
      HEAP32[(($pending150)>>2)]=$inc151;
      var $119=$s_addr;
      var $pending_buf152=(($119+8)|0);
      var $120=HEAP32[(($pending_buf152)>>2)];
      var $arrayidx153=(($120+$118)|0);
      HEAP8[($arrayidx153)]=$conv149;
      var $121=$s_addr;
      var $bi_buf154=(($121+5816)|0);
      var $122=HEAPU16[(($bi_buf154)>>1)];
      var $conv155=(($122)&65535);
      var $shr156=$conv155 >> 8;
      var $conv157=(($shr156) & 255);
      var $123=$s_addr;
      var $pending158=(($123+20)|0);
      var $124=HEAPU32[(($pending158)>>2)];
      var $inc159=(($124+1)|0);
      HEAP32[(($pending158)>>2)]=$inc159;
      var $125=$s_addr;
      var $pending_buf160=(($125+8)|0);
      var $126=HEAP32[(($pending_buf160)>>2)];
      var $arrayidx161=(($126+$124)|0);
      HEAP8[($arrayidx161)]=$conv157;
      var $127=$val137;
      var $conv162=(($127) & 65535);
      var $conv163=(($conv162)&65535);
      var $128=$s_addr;
      var $bi_valid164=(($128+5820)|0);
      var $129=HEAP32[(($bi_valid164)>>2)];
      var $sub165=((16-$129)|0);
      var $shr166=$conv163 >> (($sub165)|0);
      var $conv167=(($shr166) & 65535);
      var $130=$s_addr;
      var $bi_buf168=(($130+5816)|0);
      HEAP16[(($bi_buf168)>>1)]=$conv167;
      var $131=$len131;
      var $sub169=(($131-16)|0);
      var $132=$s_addr;
      var $bi_valid170=(($132+5820)|0);
      var $133=HEAP32[(($bi_valid170)>>2)];
      var $add171=(($133+$sub169)|0);
      HEAP32[(($bi_valid170)>>2)]=$add171;
      __label__ = 14; break;
    case 13: // $if_else172
      var $134=$lc;
      var $conv173=(($134) & 65535);
      var $conv174=(($conv173)&65535);
      var $135=$s_addr;
      var $bi_valid175=(($135+5820)|0);
      var $136=HEAP32[(($bi_valid175)>>2)];
      var $shl176=$conv174 << $136;
      var $137=$s_addr;
      var $bi_buf177=(($137+5816)|0);
      var $138=HEAPU16[(($bi_buf177)>>1)];
      var $conv178=(($138)&65535);
      var $or179=$conv178 | $shl176;
      var $conv180=(($or179) & 65535);
      HEAP16[(($bi_buf177)>>1)]=$conv180;
      var $139=$len131;
      var $140=$s_addr;
      var $bi_valid181=(($140+5820)|0);
      var $141=HEAP32[(($bi_valid181)>>2)];
      var $add182=(($141+$139)|0);
      HEAP32[(($bi_valid181)>>2)]=$add182;
      __label__ = 14; break;
    case 14: // $if_end183
      __label__ = 15; break;
    case 15: // $if_end184
      var $142=$dist;
      var $dec=(($142-1)|0);
      $dist=$dec;
      var $143=$dist;
      var $cmp185=(($143)>>>0) < 256;
      if ($cmp185) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $cond_true
      var $144=$dist;
      var $arrayidx187=((STRING_TABLE.__dist_code+$144)|0);
      var $145=HEAPU8[($arrayidx187)];
      var $conv188=(($145)&255);
      var $cond = $conv188;__label__ = 18; break;
    case 17: // $cond_false
      var $146=$dist;
      var $shr189=$146 >>> 7;
      var $add190=(($shr189+256)|0);
      var $arrayidx191=((STRING_TABLE.__dist_code+$add190)|0);
      var $147=HEAPU8[($arrayidx191)];
      var $conv192=(($147)&255);
      var $cond = $conv192;__label__ = 18; break;
    case 18: // $cond_end
      var $cond;
      $code=$cond;
      var $148=$code;
      var $149=$dtree_addr;
      var $arrayidx194=(($149+($148<<2))|0);
      var $dl195=(($arrayidx194+2)|0);
      var $len196=$dl195;
      var $150=HEAPU16[(($len196)>>1)];
      var $conv197=(($150)&65535);
      $len193=$conv197;
      var $151=$s_addr;
      var $bi_valid198=(($151+5820)|0);
      var $152=HEAP32[(($bi_valid198)>>2)];
      var $153=$len193;
      var $sub199=((16-$153)|0);
      var $cmp200=(($152)|0) > (($sub199)|0);
      if ($cmp200) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $if_then202
      var $154=$code;
      var $155=$dtree_addr;
      var $arrayidx204=(($155+($154<<2))|0);
      var $fc205=(($arrayidx204)|0);
      var $code206=$fc205;
      var $156=HEAPU16[(($code206)>>1)];
      var $conv207=(($156)&65535);
      $val203=$conv207;
      var $157=$val203;
      var $conv208=(($157) & 65535);
      var $conv209=(($conv208)&65535);
      var $158=$s_addr;
      var $bi_valid210=(($158+5820)|0);
      var $159=HEAP32[(($bi_valid210)>>2)];
      var $shl211=$conv209 << $159;
      var $160=$s_addr;
      var $bi_buf212=(($160+5816)|0);
      var $161=HEAPU16[(($bi_buf212)>>1)];
      var $conv213=(($161)&65535);
      var $or214=$conv213 | $shl211;
      var $conv215=(($or214) & 65535);
      HEAP16[(($bi_buf212)>>1)]=$conv215;
      var $162=$s_addr;
      var $bi_buf216=(($162+5816)|0);
      var $163=HEAPU16[(($bi_buf216)>>1)];
      var $conv217=(($163)&65535);
      var $and218=$conv217 & 255;
      var $conv219=(($and218) & 255);
      var $164=$s_addr;
      var $pending220=(($164+20)|0);
      var $165=HEAPU32[(($pending220)>>2)];
      var $inc221=(($165+1)|0);
      HEAP32[(($pending220)>>2)]=$inc221;
      var $166=$s_addr;
      var $pending_buf222=(($166+8)|0);
      var $167=HEAP32[(($pending_buf222)>>2)];
      var $arrayidx223=(($167+$165)|0);
      HEAP8[($arrayidx223)]=$conv219;
      var $168=$s_addr;
      var $bi_buf224=(($168+5816)|0);
      var $169=HEAPU16[(($bi_buf224)>>1)];
      var $conv225=(($169)&65535);
      var $shr226=$conv225 >> 8;
      var $conv227=(($shr226) & 255);
      var $170=$s_addr;
      var $pending228=(($170+20)|0);
      var $171=HEAPU32[(($pending228)>>2)];
      var $inc229=(($171+1)|0);
      HEAP32[(($pending228)>>2)]=$inc229;
      var $172=$s_addr;
      var $pending_buf230=(($172+8)|0);
      var $173=HEAP32[(($pending_buf230)>>2)];
      var $arrayidx231=(($173+$171)|0);
      HEAP8[($arrayidx231)]=$conv227;
      var $174=$val203;
      var $conv232=(($174) & 65535);
      var $conv233=(($conv232)&65535);
      var $175=$s_addr;
      var $bi_valid234=(($175+5820)|0);
      var $176=HEAP32[(($bi_valid234)>>2)];
      var $sub235=((16-$176)|0);
      var $shr236=$conv233 >> (($sub235)|0);
      var $conv237=(($shr236) & 65535);
      var $177=$s_addr;
      var $bi_buf238=(($177+5816)|0);
      HEAP16[(($bi_buf238)>>1)]=$conv237;
      var $178=$len193;
      var $sub239=(($178-16)|0);
      var $179=$s_addr;
      var $bi_valid240=(($179+5820)|0);
      var $180=HEAP32[(($bi_valid240)>>2)];
      var $add241=(($180+$sub239)|0);
      HEAP32[(($bi_valid240)>>2)]=$add241;
      __label__ = 21; break;
    case 20: // $if_else242
      var $181=$code;
      var $182=$dtree_addr;
      var $arrayidx243=(($182+($181<<2))|0);
      var $fc244=(($arrayidx243)|0);
      var $code245=$fc244;
      var $183=HEAPU16[(($code245)>>1)];
      var $conv246=(($183)&65535);
      var $184=$s_addr;
      var $bi_valid247=(($184+5820)|0);
      var $185=HEAP32[(($bi_valid247)>>2)];
      var $shl248=$conv246 << $185;
      var $186=$s_addr;
      var $bi_buf249=(($186+5816)|0);
      var $187=HEAPU16[(($bi_buf249)>>1)];
      var $conv250=(($187)&65535);
      var $or251=$conv250 | $shl248;
      var $conv252=(($or251) & 65535);
      HEAP16[(($bi_buf249)>>1)]=$conv252;
      var $188=$len193;
      var $189=$s_addr;
      var $bi_valid253=(($189+5820)|0);
      var $190=HEAP32[(($bi_valid253)>>2)];
      var $add254=(($190+$188)|0);
      HEAP32[(($bi_valid253)>>2)]=$add254;
      __label__ = 21; break;
    case 21: // $if_end255
      var $191=$code;
      var $arrayidx256=((_extra_dbits+($191<<2))|0);
      var $192=HEAP32[(($arrayidx256)>>2)];
      $extra=$192;
      var $193=$extra;
      var $cmp257=(($193)|0)!=0;
      if ($cmp257) { __label__ = 22; break; } else { __label__ = 26; break; }
    case 22: // $if_then259
      var $194=$code;
      var $arrayidx260=((_base_dist+($194<<2))|0);
      var $195=HEAP32[(($arrayidx260)>>2)];
      var $196=$dist;
      var $sub261=(($196-$195)|0);
      $dist=$sub261;
      var $197=$extra;
      $len262=$197;
      var $198=$s_addr;
      var $bi_valid263=(($198+5820)|0);
      var $199=HEAP32[(($bi_valid263)>>2)];
      var $200=$len262;
      var $sub264=((16-$200)|0);
      var $cmp265=(($199)|0) > (($sub264)|0);
      if ($cmp265) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: // $if_then267
      var $201=$dist;
      $val268=$201;
      var $202=$val268;
      var $conv269=(($202) & 65535);
      var $conv270=(($conv269)&65535);
      var $203=$s_addr;
      var $bi_valid271=(($203+5820)|0);
      var $204=HEAP32[(($bi_valid271)>>2)];
      var $shl272=$conv270 << $204;
      var $205=$s_addr;
      var $bi_buf273=(($205+5816)|0);
      var $206=HEAPU16[(($bi_buf273)>>1)];
      var $conv274=(($206)&65535);
      var $or275=$conv274 | $shl272;
      var $conv276=(($or275) & 65535);
      HEAP16[(($bi_buf273)>>1)]=$conv276;
      var $207=$s_addr;
      var $bi_buf277=(($207+5816)|0);
      var $208=HEAPU16[(($bi_buf277)>>1)];
      var $conv278=(($208)&65535);
      var $and279=$conv278 & 255;
      var $conv280=(($and279) & 255);
      var $209=$s_addr;
      var $pending281=(($209+20)|0);
      var $210=HEAPU32[(($pending281)>>2)];
      var $inc282=(($210+1)|0);
      HEAP32[(($pending281)>>2)]=$inc282;
      var $211=$s_addr;
      var $pending_buf283=(($211+8)|0);
      var $212=HEAP32[(($pending_buf283)>>2)];
      var $arrayidx284=(($212+$210)|0);
      HEAP8[($arrayidx284)]=$conv280;
      var $213=$s_addr;
      var $bi_buf285=(($213+5816)|0);
      var $214=HEAPU16[(($bi_buf285)>>1)];
      var $conv286=(($214)&65535);
      var $shr287=$conv286 >> 8;
      var $conv288=(($shr287) & 255);
      var $215=$s_addr;
      var $pending289=(($215+20)|0);
      var $216=HEAPU32[(($pending289)>>2)];
      var $inc290=(($216+1)|0);
      HEAP32[(($pending289)>>2)]=$inc290;
      var $217=$s_addr;
      var $pending_buf291=(($217+8)|0);
      var $218=HEAP32[(($pending_buf291)>>2)];
      var $arrayidx292=(($218+$216)|0);
      HEAP8[($arrayidx292)]=$conv288;
      var $219=$val268;
      var $conv293=(($219) & 65535);
      var $conv294=(($conv293)&65535);
      var $220=$s_addr;
      var $bi_valid295=(($220+5820)|0);
      var $221=HEAP32[(($bi_valid295)>>2)];
      var $sub296=((16-$221)|0);
      var $shr297=$conv294 >> (($sub296)|0);
      var $conv298=(($shr297) & 65535);
      var $222=$s_addr;
      var $bi_buf299=(($222+5816)|0);
      HEAP16[(($bi_buf299)>>1)]=$conv298;
      var $223=$len262;
      var $sub300=(($223-16)|0);
      var $224=$s_addr;
      var $bi_valid301=(($224+5820)|0);
      var $225=HEAP32[(($bi_valid301)>>2)];
      var $add302=(($225+$sub300)|0);
      HEAP32[(($bi_valid301)>>2)]=$add302;
      __label__ = 25; break;
    case 24: // $if_else303
      var $226=$dist;
      var $conv304=(($226) & 65535);
      var $conv305=(($conv304)&65535);
      var $227=$s_addr;
      var $bi_valid306=(($227+5820)|0);
      var $228=HEAP32[(($bi_valid306)>>2)];
      var $shl307=$conv305 << $228;
      var $229=$s_addr;
      var $bi_buf308=(($229+5816)|0);
      var $230=HEAPU16[(($bi_buf308)>>1)];
      var $conv309=(($230)&65535);
      var $or310=$conv309 | $shl307;
      var $conv311=(($or310) & 65535);
      HEAP16[(($bi_buf308)>>1)]=$conv311;
      var $231=$len262;
      var $232=$s_addr;
      var $bi_valid312=(($232+5820)|0);
      var $233=HEAP32[(($bi_valid312)>>2)];
      var $add313=(($233+$231)|0);
      HEAP32[(($bi_valid312)>>2)]=$add313;
      __label__ = 25; break;
    case 25: // $if_end314
      __label__ = 26; break;
    case 26: // $if_end315
      __label__ = 27; break;
    case 27: // $if_end316
      __label__ = 28; break;
    case 28: // $do_cond
      var $234=$lx;
      var $235=$s_addr;
      var $last_lit317=(($235+5792)|0);
      var $236=HEAPU32[(($last_lit317)>>2)];
      var $cmp318=(($234)>>>0) < (($236)>>>0);
      if ($cmp318) { __label__ = 2; break; } else { __label__ = 29; break; }
    case 29: // $do_end
      __label__ = 30; break;
    case 30: // $if_end320
      var $237=$ltree_addr;
      var $arrayidx322=(($237+1024)|0);
      var $dl323=(($arrayidx322+2)|0);
      var $len324=$dl323;
      var $238=HEAPU16[(($len324)>>1)];
      var $conv325=(($238)&65535);
      $len321=$conv325;
      var $239=$s_addr;
      var $bi_valid326=(($239+5820)|0);
      var $240=HEAP32[(($bi_valid326)>>2)];
      var $241=$len321;
      var $sub327=((16-$241)|0);
      var $cmp328=(($240)|0) > (($sub327)|0);
      if ($cmp328) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $if_then330
      var $242=$ltree_addr;
      var $arrayidx332=(($242+1024)|0);
      var $fc333=(($arrayidx332)|0);
      var $code334=$fc333;
      var $243=HEAPU16[(($code334)>>1)];
      var $conv335=(($243)&65535);
      $val331=$conv335;
      var $244=$val331;
      var $conv336=(($244) & 65535);
      var $conv337=(($conv336)&65535);
      var $245=$s_addr;
      var $bi_valid338=(($245+5820)|0);
      var $246=HEAP32[(($bi_valid338)>>2)];
      var $shl339=$conv337 << $246;
      var $247=$s_addr;
      var $bi_buf340=(($247+5816)|0);
      var $248=HEAPU16[(($bi_buf340)>>1)];
      var $conv341=(($248)&65535);
      var $or342=$conv341 | $shl339;
      var $conv343=(($or342) & 65535);
      HEAP16[(($bi_buf340)>>1)]=$conv343;
      var $249=$s_addr;
      var $bi_buf344=(($249+5816)|0);
      var $250=HEAPU16[(($bi_buf344)>>1)];
      var $conv345=(($250)&65535);
      var $and346=$conv345 & 255;
      var $conv347=(($and346) & 255);
      var $251=$s_addr;
      var $pending348=(($251+20)|0);
      var $252=HEAPU32[(($pending348)>>2)];
      var $inc349=(($252+1)|0);
      HEAP32[(($pending348)>>2)]=$inc349;
      var $253=$s_addr;
      var $pending_buf350=(($253+8)|0);
      var $254=HEAP32[(($pending_buf350)>>2)];
      var $arrayidx351=(($254+$252)|0);
      HEAP8[($arrayidx351)]=$conv347;
      var $255=$s_addr;
      var $bi_buf352=(($255+5816)|0);
      var $256=HEAPU16[(($bi_buf352)>>1)];
      var $conv353=(($256)&65535);
      var $shr354=$conv353 >> 8;
      var $conv355=(($shr354) & 255);
      var $257=$s_addr;
      var $pending356=(($257+20)|0);
      var $258=HEAPU32[(($pending356)>>2)];
      var $inc357=(($258+1)|0);
      HEAP32[(($pending356)>>2)]=$inc357;
      var $259=$s_addr;
      var $pending_buf358=(($259+8)|0);
      var $260=HEAP32[(($pending_buf358)>>2)];
      var $arrayidx359=(($260+$258)|0);
      HEAP8[($arrayidx359)]=$conv355;
      var $261=$val331;
      var $conv360=(($261) & 65535);
      var $conv361=(($conv360)&65535);
      var $262=$s_addr;
      var $bi_valid362=(($262+5820)|0);
      var $263=HEAP32[(($bi_valid362)>>2)];
      var $sub363=((16-$263)|0);
      var $shr364=$conv361 >> (($sub363)|0);
      var $conv365=(($shr364) & 65535);
      var $264=$s_addr;
      var $bi_buf366=(($264+5816)|0);
      HEAP16[(($bi_buf366)>>1)]=$conv365;
      var $265=$len321;
      var $sub367=(($265-16)|0);
      var $266=$s_addr;
      var $bi_valid368=(($266+5820)|0);
      var $267=HEAP32[(($bi_valid368)>>2)];
      var $add369=(($267+$sub367)|0);
      HEAP32[(($bi_valid368)>>2)]=$add369;
      __label__ = 33; break;
    case 32: // $if_else370
      var $268=$ltree_addr;
      var $arrayidx371=(($268+1024)|0);
      var $fc372=(($arrayidx371)|0);
      var $code373=$fc372;
      var $269=HEAPU16[(($code373)>>1)];
      var $conv374=(($269)&65535);
      var $270=$s_addr;
      var $bi_valid375=(($270+5820)|0);
      var $271=HEAP32[(($bi_valid375)>>2)];
      var $shl376=$conv374 << $271;
      var $272=$s_addr;
      var $bi_buf377=(($272+5816)|0);
      var $273=HEAPU16[(($bi_buf377)>>1)];
      var $conv378=(($273)&65535);
      var $or379=$conv378 | $shl376;
      var $conv380=(($or379) & 65535);
      HEAP16[(($bi_buf377)>>1)]=$conv380;
      var $274=$len321;
      var $275=$s_addr;
      var $bi_valid381=(($275+5820)|0);
      var $276=HEAP32[(($bi_valid381)>>2)];
      var $add382=(($276+$274)|0);
      HEAP32[(($bi_valid381)>>2)]=$add382;
      __label__ = 33; break;
    case 33: // $if_end383
      var $277=$ltree_addr;
      var $arrayidx384=(($277+1024)|0);
      var $dl385=(($arrayidx384+2)|0);
      var $len386=$dl385;
      var $278=HEAPU16[(($len386)>>1)];
      var $conv387=(($278)&65535);
      var $279=$s_addr;
      var $last_eob_len=(($279+5812)|0);
      HEAP32[(($last_eob_len)>>2)]=$conv387;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_compress_block["X"]=1;

function _bi_windup($s) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      $s_addr=$s;
      var $0=$s_addr;
      var $bi_valid=(($0+5820)|0);
      var $1=HEAP32[(($bi_valid)>>2)];
      var $cmp=(($1)|0) > 8;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $2=$s_addr;
      var $bi_buf=(($2+5816)|0);
      var $3=HEAPU16[(($bi_buf)>>1)];
      var $conv=(($3)&65535);
      var $and=$conv & 255;
      var $conv1=(($and) & 255);
      var $4=$s_addr;
      var $pending=(($4+20)|0);
      var $5=HEAPU32[(($pending)>>2)];
      var $inc=(($5+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $6=$s_addr;
      var $pending_buf=(($6+8)|0);
      var $7=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($7+$5)|0);
      HEAP8[($arrayidx)]=$conv1;
      var $8=$s_addr;
      var $bi_buf2=(($8+5816)|0);
      var $9=HEAPU16[(($bi_buf2)>>1)];
      var $conv3=(($9)&65535);
      var $shr=$conv3 >> 8;
      var $conv4=(($shr) & 255);
      var $10=$s_addr;
      var $pending5=(($10+20)|0);
      var $11=HEAPU32[(($pending5)>>2)];
      var $inc6=(($11+1)|0);
      HEAP32[(($pending5)>>2)]=$inc6;
      var $12=$s_addr;
      var $pending_buf7=(($12+8)|0);
      var $13=HEAP32[(($pending_buf7)>>2)];
      var $arrayidx8=(($13+$11)|0);
      HEAP8[($arrayidx8)]=$conv4;
      __label__ = 5; break;
    case 2: // $if_else
      var $14=$s_addr;
      var $bi_valid9=(($14+5820)|0);
      var $15=HEAP32[(($bi_valid9)>>2)];
      var $cmp10=(($15)|0) > 0;
      if ($cmp10) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then12
      var $16=$s_addr;
      var $bi_buf13=(($16+5816)|0);
      var $17=HEAP16[(($bi_buf13)>>1)];
      var $conv14=(($17) & 255);
      var $18=$s_addr;
      var $pending15=(($18+20)|0);
      var $19=HEAP32[(($pending15)>>2)];
      var $inc16=(($19+1)|0);
      HEAP32[(($pending15)>>2)]=$inc16;
      var $20=$s_addr;
      var $pending_buf17=(($20+8)|0);
      var $21=HEAP32[(($pending_buf17)>>2)];
      var $arrayidx18=(($21+$19)|0);
      HEAP8[($arrayidx18)]=$conv14;
      __label__ = 4; break;
    case 4: // $if_end
      __label__ = 5; break;
    case 5: // $if_end19
      var $22=$s_addr;
      var $bi_buf20=(($22+5816)|0);
      HEAP16[(($bi_buf20)>>1)]=0;
      var $23=$s_addr;
      var $bi_valid21=(($23+5820)|0);
      HEAP32[(($bi_valid21)>>2)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_bi_windup["X"]=1;

function _send_all_trees($s, $lcodes, $dcodes, $blcodes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $lcodes_addr;
      var $dcodes_addr;
      var $blcodes_addr;
      var $rank;
      var $len;
      var $val;
      var $len36;
      var $val42;
      var $len91;
      var $val97;
      var $len148;
      var $val154;
      $s_addr=$s;
      $lcodes_addr=$lcodes;
      $dcodes_addr=$dcodes;
      $blcodes_addr=$blcodes;
      $len=5;
      var $0=$s_addr;
      var $bi_valid=(($0+5820)|0);
      var $1=HEAP32[(($bi_valid)>>2)];
      var $2=$len;
      var $sub=((16-$2)|0);
      var $cmp=(($1)|0) > (($sub)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $3=$lcodes_addr;
      var $sub1=(($3-257)|0);
      $val=$sub1;
      var $4=$val;
      var $conv=(($4) & 65535);
      var $conv2=(($conv)&65535);
      var $5=$s_addr;
      var $bi_valid3=(($5+5820)|0);
      var $6=HEAP32[(($bi_valid3)>>2)];
      var $shl=$conv2 << $6;
      var $7=$s_addr;
      var $bi_buf=(($7+5816)|0);
      var $8=HEAPU16[(($bi_buf)>>1)];
      var $conv4=(($8)&65535);
      var $or=$conv4 | $shl;
      var $conv5=(($or) & 65535);
      HEAP16[(($bi_buf)>>1)]=$conv5;
      var $9=$s_addr;
      var $bi_buf6=(($9+5816)|0);
      var $10=HEAPU16[(($bi_buf6)>>1)];
      var $conv7=(($10)&65535);
      var $and=$conv7 & 255;
      var $conv8=(($and) & 255);
      var $11=$s_addr;
      var $pending=(($11+20)|0);
      var $12=HEAPU32[(($pending)>>2)];
      var $inc=(($12+1)|0);
      HEAP32[(($pending)>>2)]=$inc;
      var $13=$s_addr;
      var $pending_buf=(($13+8)|0);
      var $14=HEAP32[(($pending_buf)>>2)];
      var $arrayidx=(($14+$12)|0);
      HEAP8[($arrayidx)]=$conv8;
      var $15=$s_addr;
      var $bi_buf9=(($15+5816)|0);
      var $16=HEAPU16[(($bi_buf9)>>1)];
      var $conv10=(($16)&65535);
      var $shr=$conv10 >> 8;
      var $conv11=(($shr) & 255);
      var $17=$s_addr;
      var $pending12=(($17+20)|0);
      var $18=HEAPU32[(($pending12)>>2)];
      var $inc13=(($18+1)|0);
      HEAP32[(($pending12)>>2)]=$inc13;
      var $19=$s_addr;
      var $pending_buf14=(($19+8)|0);
      var $20=HEAP32[(($pending_buf14)>>2)];
      var $arrayidx15=(($20+$18)|0);
      HEAP8[($arrayidx15)]=$conv11;
      var $21=$val;
      var $conv16=(($21) & 65535);
      var $conv17=(($conv16)&65535);
      var $22=$s_addr;
      var $bi_valid18=(($22+5820)|0);
      var $23=HEAP32[(($bi_valid18)>>2)];
      var $sub19=((16-$23)|0);
      var $shr20=$conv17 >> (($sub19)|0);
      var $conv21=(($shr20) & 65535);
      var $24=$s_addr;
      var $bi_buf22=(($24+5816)|0);
      HEAP16[(($bi_buf22)>>1)]=$conv21;
      var $25=$len;
      var $sub23=(($25-16)|0);
      var $26=$s_addr;
      var $bi_valid24=(($26+5820)|0);
      var $27=HEAP32[(($bi_valid24)>>2)];
      var $add=(($27+$sub23)|0);
      HEAP32[(($bi_valid24)>>2)]=$add;
      __label__ = 3; break;
    case 2: // $if_else
      var $28=$lcodes_addr;
      var $sub25=(($28-257)|0);
      var $conv26=(($sub25) & 65535);
      var $conv27=(($conv26)&65535);
      var $29=$s_addr;
      var $bi_valid28=(($29+5820)|0);
      var $30=HEAP32[(($bi_valid28)>>2)];
      var $shl29=$conv27 << $30;
      var $31=$s_addr;
      var $bi_buf30=(($31+5816)|0);
      var $32=HEAPU16[(($bi_buf30)>>1)];
      var $conv31=(($32)&65535);
      var $or32=$conv31 | $shl29;
      var $conv33=(($or32) & 65535);
      HEAP16[(($bi_buf30)>>1)]=$conv33;
      var $33=$len;
      var $34=$s_addr;
      var $bi_valid34=(($34+5820)|0);
      var $35=HEAP32[(($bi_valid34)>>2)];
      var $add35=(($35+$33)|0);
      HEAP32[(($bi_valid34)>>2)]=$add35;
      __label__ = 3; break;
    case 3: // $if_end
      $len36=5;
      var $36=$s_addr;
      var $bi_valid37=(($36+5820)|0);
      var $37=HEAP32[(($bi_valid37)>>2)];
      var $38=$len36;
      var $sub38=((16-$38)|0);
      var $cmp39=(($37)|0) > (($sub38)|0);
      if ($cmp39) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then41
      var $39=$dcodes_addr;
      var $sub43=(($39-1)|0);
      $val42=$sub43;
      var $40=$val42;
      var $conv44=(($40) & 65535);
      var $conv45=(($conv44)&65535);
      var $41=$s_addr;
      var $bi_valid46=(($41+5820)|0);
      var $42=HEAP32[(($bi_valid46)>>2)];
      var $shl47=$conv45 << $42;
      var $43=$s_addr;
      var $bi_buf48=(($43+5816)|0);
      var $44=HEAPU16[(($bi_buf48)>>1)];
      var $conv49=(($44)&65535);
      var $or50=$conv49 | $shl47;
      var $conv51=(($or50) & 65535);
      HEAP16[(($bi_buf48)>>1)]=$conv51;
      var $45=$s_addr;
      var $bi_buf52=(($45+5816)|0);
      var $46=HEAPU16[(($bi_buf52)>>1)];
      var $conv53=(($46)&65535);
      var $and54=$conv53 & 255;
      var $conv55=(($and54) & 255);
      var $47=$s_addr;
      var $pending56=(($47+20)|0);
      var $48=HEAPU32[(($pending56)>>2)];
      var $inc57=(($48+1)|0);
      HEAP32[(($pending56)>>2)]=$inc57;
      var $49=$s_addr;
      var $pending_buf58=(($49+8)|0);
      var $50=HEAP32[(($pending_buf58)>>2)];
      var $arrayidx59=(($50+$48)|0);
      HEAP8[($arrayidx59)]=$conv55;
      var $51=$s_addr;
      var $bi_buf60=(($51+5816)|0);
      var $52=HEAPU16[(($bi_buf60)>>1)];
      var $conv61=(($52)&65535);
      var $shr62=$conv61 >> 8;
      var $conv63=(($shr62) & 255);
      var $53=$s_addr;
      var $pending64=(($53+20)|0);
      var $54=HEAPU32[(($pending64)>>2)];
      var $inc65=(($54+1)|0);
      HEAP32[(($pending64)>>2)]=$inc65;
      var $55=$s_addr;
      var $pending_buf66=(($55+8)|0);
      var $56=HEAP32[(($pending_buf66)>>2)];
      var $arrayidx67=(($56+$54)|0);
      HEAP8[($arrayidx67)]=$conv63;
      var $57=$val42;
      var $conv68=(($57) & 65535);
      var $conv69=(($conv68)&65535);
      var $58=$s_addr;
      var $bi_valid70=(($58+5820)|0);
      var $59=HEAP32[(($bi_valid70)>>2)];
      var $sub71=((16-$59)|0);
      var $shr72=$conv69 >> (($sub71)|0);
      var $conv73=(($shr72) & 65535);
      var $60=$s_addr;
      var $bi_buf74=(($60+5816)|0);
      HEAP16[(($bi_buf74)>>1)]=$conv73;
      var $61=$len36;
      var $sub75=(($61-16)|0);
      var $62=$s_addr;
      var $bi_valid76=(($62+5820)|0);
      var $63=HEAP32[(($bi_valid76)>>2)];
      var $add77=(($63+$sub75)|0);
      HEAP32[(($bi_valid76)>>2)]=$add77;
      __label__ = 6; break;
    case 5: // $if_else78
      var $64=$dcodes_addr;
      var $sub79=(($64-1)|0);
      var $conv80=(($sub79) & 65535);
      var $conv81=(($conv80)&65535);
      var $65=$s_addr;
      var $bi_valid82=(($65+5820)|0);
      var $66=HEAP32[(($bi_valid82)>>2)];
      var $shl83=$conv81 << $66;
      var $67=$s_addr;
      var $bi_buf84=(($67+5816)|0);
      var $68=HEAPU16[(($bi_buf84)>>1)];
      var $conv85=(($68)&65535);
      var $or86=$conv85 | $shl83;
      var $conv87=(($or86) & 65535);
      HEAP16[(($bi_buf84)>>1)]=$conv87;
      var $69=$len36;
      var $70=$s_addr;
      var $bi_valid88=(($70+5820)|0);
      var $71=HEAP32[(($bi_valid88)>>2)];
      var $add89=(($71+$69)|0);
      HEAP32[(($bi_valid88)>>2)]=$add89;
      __label__ = 6; break;
    case 6: // $if_end90
      $len91=4;
      var $72=$s_addr;
      var $bi_valid92=(($72+5820)|0);
      var $73=HEAP32[(($bi_valid92)>>2)];
      var $74=$len91;
      var $sub93=((16-$74)|0);
      var $cmp94=(($73)|0) > (($sub93)|0);
      if ($cmp94) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then96
      var $75=$blcodes_addr;
      var $sub98=(($75-4)|0);
      $val97=$sub98;
      var $76=$val97;
      var $conv99=(($76) & 65535);
      var $conv100=(($conv99)&65535);
      var $77=$s_addr;
      var $bi_valid101=(($77+5820)|0);
      var $78=HEAP32[(($bi_valid101)>>2)];
      var $shl102=$conv100 << $78;
      var $79=$s_addr;
      var $bi_buf103=(($79+5816)|0);
      var $80=HEAPU16[(($bi_buf103)>>1)];
      var $conv104=(($80)&65535);
      var $or105=$conv104 | $shl102;
      var $conv106=(($or105) & 65535);
      HEAP16[(($bi_buf103)>>1)]=$conv106;
      var $81=$s_addr;
      var $bi_buf107=(($81+5816)|0);
      var $82=HEAPU16[(($bi_buf107)>>1)];
      var $conv108=(($82)&65535);
      var $and109=$conv108 & 255;
      var $conv110=(($and109) & 255);
      var $83=$s_addr;
      var $pending111=(($83+20)|0);
      var $84=HEAPU32[(($pending111)>>2)];
      var $inc112=(($84+1)|0);
      HEAP32[(($pending111)>>2)]=$inc112;
      var $85=$s_addr;
      var $pending_buf113=(($85+8)|0);
      var $86=HEAP32[(($pending_buf113)>>2)];
      var $arrayidx114=(($86+$84)|0);
      HEAP8[($arrayidx114)]=$conv110;
      var $87=$s_addr;
      var $bi_buf115=(($87+5816)|0);
      var $88=HEAPU16[(($bi_buf115)>>1)];
      var $conv116=(($88)&65535);
      var $shr117=$conv116 >> 8;
      var $conv118=(($shr117) & 255);
      var $89=$s_addr;
      var $pending119=(($89+20)|0);
      var $90=HEAPU32[(($pending119)>>2)];
      var $inc120=(($90+1)|0);
      HEAP32[(($pending119)>>2)]=$inc120;
      var $91=$s_addr;
      var $pending_buf121=(($91+8)|0);
      var $92=HEAP32[(($pending_buf121)>>2)];
      var $arrayidx122=(($92+$90)|0);
      HEAP8[($arrayidx122)]=$conv118;
      var $93=$val97;
      var $conv123=(($93) & 65535);
      var $conv124=(($conv123)&65535);
      var $94=$s_addr;
      var $bi_valid125=(($94+5820)|0);
      var $95=HEAP32[(($bi_valid125)>>2)];
      var $sub126=((16-$95)|0);
      var $shr127=$conv124 >> (($sub126)|0);
      var $conv128=(($shr127) & 65535);
      var $96=$s_addr;
      var $bi_buf129=(($96+5816)|0);
      HEAP16[(($bi_buf129)>>1)]=$conv128;
      var $97=$len91;
      var $sub130=(($97-16)|0);
      var $98=$s_addr;
      var $bi_valid131=(($98+5820)|0);
      var $99=HEAP32[(($bi_valid131)>>2)];
      var $add132=(($99+$sub130)|0);
      HEAP32[(($bi_valid131)>>2)]=$add132;
      __label__ = 9; break;
    case 8: // $if_else133
      var $100=$blcodes_addr;
      var $sub134=(($100-4)|0);
      var $conv135=(($sub134) & 65535);
      var $conv136=(($conv135)&65535);
      var $101=$s_addr;
      var $bi_valid137=(($101+5820)|0);
      var $102=HEAP32[(($bi_valid137)>>2)];
      var $shl138=$conv136 << $102;
      var $103=$s_addr;
      var $bi_buf139=(($103+5816)|0);
      var $104=HEAPU16[(($bi_buf139)>>1)];
      var $conv140=(($104)&65535);
      var $or141=$conv140 | $shl138;
      var $conv142=(($or141) & 65535);
      HEAP16[(($bi_buf139)>>1)]=$conv142;
      var $105=$len91;
      var $106=$s_addr;
      var $bi_valid143=(($106+5820)|0);
      var $107=HEAP32[(($bi_valid143)>>2)];
      var $add144=(($107+$105)|0);
      HEAP32[(($bi_valid143)>>2)]=$add144;
      __label__ = 9; break;
    case 9: // $if_end145
      $rank=0;
      __label__ = 10; break;
    case 10: // $for_cond
      var $108=$rank;
      var $109=$blcodes_addr;
      var $cmp146=(($108)|0) < (($109)|0);
      if ($cmp146) { __label__ = 11; break; } else { __label__ = 16; break; }
    case 11: // $for_body
      $len148=3;
      var $110=$s_addr;
      var $bi_valid149=(($110+5820)|0);
      var $111=HEAP32[(($bi_valid149)>>2)];
      var $112=$len148;
      var $sub150=((16-$112)|0);
      var $cmp151=(($111)|0) > (($sub150)|0);
      if ($cmp151) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then153
      var $113=$rank;
      var $arrayidx155=((STRING_TABLE._bl_order+$113)|0);
      var $114=HEAPU8[($arrayidx155)];
      var $idxprom=(($114)&255);
      var $115=$s_addr;
      var $bl_tree=(($115+2684)|0);
      var $arrayidx156=(($bl_tree+($idxprom<<2))|0);
      var $dl=(($arrayidx156+2)|0);
      var $len157=$dl;
      var $116=HEAPU16[(($len157)>>1)];
      var $conv158=(($116)&65535);
      $val154=$conv158;
      var $117=$val154;
      var $conv159=(($117) & 65535);
      var $conv160=(($conv159)&65535);
      var $118=$s_addr;
      var $bi_valid161=(($118+5820)|0);
      var $119=HEAP32[(($bi_valid161)>>2)];
      var $shl162=$conv160 << $119;
      var $120=$s_addr;
      var $bi_buf163=(($120+5816)|0);
      var $121=HEAPU16[(($bi_buf163)>>1)];
      var $conv164=(($121)&65535);
      var $or165=$conv164 | $shl162;
      var $conv166=(($or165) & 65535);
      HEAP16[(($bi_buf163)>>1)]=$conv166;
      var $122=$s_addr;
      var $bi_buf167=(($122+5816)|0);
      var $123=HEAPU16[(($bi_buf167)>>1)];
      var $conv168=(($123)&65535);
      var $and169=$conv168 & 255;
      var $conv170=(($and169) & 255);
      var $124=$s_addr;
      var $pending171=(($124+20)|0);
      var $125=HEAPU32[(($pending171)>>2)];
      var $inc172=(($125+1)|0);
      HEAP32[(($pending171)>>2)]=$inc172;
      var $126=$s_addr;
      var $pending_buf173=(($126+8)|0);
      var $127=HEAP32[(($pending_buf173)>>2)];
      var $arrayidx174=(($127+$125)|0);
      HEAP8[($arrayidx174)]=$conv170;
      var $128=$s_addr;
      var $bi_buf175=(($128+5816)|0);
      var $129=HEAPU16[(($bi_buf175)>>1)];
      var $conv176=(($129)&65535);
      var $shr177=$conv176 >> 8;
      var $conv178=(($shr177) & 255);
      var $130=$s_addr;
      var $pending179=(($130+20)|0);
      var $131=HEAPU32[(($pending179)>>2)];
      var $inc180=(($131+1)|0);
      HEAP32[(($pending179)>>2)]=$inc180;
      var $132=$s_addr;
      var $pending_buf181=(($132+8)|0);
      var $133=HEAP32[(($pending_buf181)>>2)];
      var $arrayidx182=(($133+$131)|0);
      HEAP8[($arrayidx182)]=$conv178;
      var $134=$val154;
      var $conv183=(($134) & 65535);
      var $conv184=(($conv183)&65535);
      var $135=$s_addr;
      var $bi_valid185=(($135+5820)|0);
      var $136=HEAP32[(($bi_valid185)>>2)];
      var $sub186=((16-$136)|0);
      var $shr187=$conv184 >> (($sub186)|0);
      var $conv188=(($shr187) & 65535);
      var $137=$s_addr;
      var $bi_buf189=(($137+5816)|0);
      HEAP16[(($bi_buf189)>>1)]=$conv188;
      var $138=$len148;
      var $sub190=(($138-16)|0);
      var $139=$s_addr;
      var $bi_valid191=(($139+5820)|0);
      var $140=HEAP32[(($bi_valid191)>>2)];
      var $add192=(($140+$sub190)|0);
      HEAP32[(($bi_valid191)>>2)]=$add192;
      __label__ = 14; break;
    case 13: // $if_else193
      var $141=$rank;
      var $arrayidx194=((STRING_TABLE._bl_order+$141)|0);
      var $142=HEAPU8[($arrayidx194)];
      var $idxprom195=(($142)&255);
      var $143=$s_addr;
      var $bl_tree196=(($143+2684)|0);
      var $arrayidx197=(($bl_tree196+($idxprom195<<2))|0);
      var $dl198=(($arrayidx197+2)|0);
      var $len199=$dl198;
      var $144=HEAPU16[(($len199)>>1)];
      var $conv200=(($144)&65535);
      var $145=$s_addr;
      var $bi_valid201=(($145+5820)|0);
      var $146=HEAP32[(($bi_valid201)>>2)];
      var $shl202=$conv200 << $146;
      var $147=$s_addr;
      var $bi_buf203=(($147+5816)|0);
      var $148=HEAPU16[(($bi_buf203)>>1)];
      var $conv204=(($148)&65535);
      var $or205=$conv204 | $shl202;
      var $conv206=(($or205) & 65535);
      HEAP16[(($bi_buf203)>>1)]=$conv206;
      var $149=$len148;
      var $150=$s_addr;
      var $bi_valid207=(($150+5820)|0);
      var $151=HEAP32[(($bi_valid207)>>2)];
      var $add208=(($151+$149)|0);
      HEAP32[(($bi_valid207)>>2)]=$add208;
      __label__ = 14; break;
    case 14: // $if_end209
      __label__ = 15; break;
    case 15: // $for_inc
      var $152=$rank;
      var $inc210=(($152+1)|0);
      $rank=$inc210;
      __label__ = 10; break;
    case 16: // $for_end
      var $153=$s_addr;
      var $154=$s_addr;
      var $dyn_ltree=(($154+148)|0);
      var $arraydecay=(($dyn_ltree)|0);
      var $155=$lcodes_addr;
      var $sub211=(($155-1)|0);
      _send_tree($153, $arraydecay, $sub211);
      var $156=$s_addr;
      var $157=$s_addr;
      var $dyn_dtree=(($157+2440)|0);
      var $arraydecay212=(($dyn_dtree)|0);
      var $158=$dcodes_addr;
      var $sub213=(($158-1)|0);
      _send_tree($156, $arraydecay212, $sub213);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_send_all_trees["X"]=1;

function _send_tree($s, $tree, $max_code) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $tree_addr;
      var $max_code_addr;
      var $n;
      var $prevlen;
      var $curlen;
      var $nextlen;
      var $count;
      var $max_count;
      var $min_count;
      var $len16;
      var $val;
      var $len78;
      var $val89;
      var $len146;
      var $val157;
      var $len212;
      var $val218;
      var $len271;
      var $val282;
      var $len337;
      var $val343;
      var $len393;
      var $val404;
      var $len459;
      var $val465;
      $s_addr=$s;
      $tree_addr=$tree;
      $max_code_addr=$max_code;
      $prevlen=-1;
      var $0=$tree_addr;
      var $arrayidx=(($0)|0);
      var $dl=(($arrayidx+2)|0);
      var $len=$dl;
      var $1=HEAPU16[(($len)>>1)];
      var $conv=(($1)&65535);
      $nextlen=$conv;
      $count=0;
      $max_count=7;
      $min_count=4;
      var $2=$nextlen;
      var $cmp=(($2)|0)==0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $max_count=138;
      $min_count=3;
      __label__ = 2; break;
    case 2: // $if_end
      $n=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $3=$n;
      var $4=$max_code_addr;
      var $cmp2=(($3)|0) <= (($4)|0);
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 54; break; }
    case 4: // $for_body
      var $5=$nextlen;
      $curlen=$5;
      var $6=$n;
      var $add=(($6+1)|0);
      var $7=$tree_addr;
      var $arrayidx4=(($7+($add<<2))|0);
      var $dl5=(($arrayidx4+2)|0);
      var $len6=$dl5;
      var $8=HEAPU16[(($len6)>>1)];
      var $conv7=(($8)&65535);
      $nextlen=$conv7;
      var $9=$count;
      var $inc=(($9+1)|0);
      $count=$inc;
      var $10=$max_count;
      var $cmp8=(($inc)|0) < (($10)|0);
      if ($cmp8) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: // $land_lhs_true
      var $11=$curlen;
      var $12=$nextlen;
      var $cmp10=(($11)|0)==(($12)|0);
      if ($cmp10) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then12
      __label__ = 53; break;
    case 7: // $if_else
      var $13=$count;
      var $14=$min_count;
      var $cmp13=(($13)|0) < (($14)|0);
      if ($cmp13) { __label__ = 8; break; } else { __label__ = 15; break; }
    case 8: // $if_then15
      __label__ = 9; break;
    case 9: // $do_body
      var $15=$curlen;
      var $16=$s_addr;
      var $bl_tree=(($16+2684)|0);
      var $arrayidx17=(($bl_tree+($15<<2))|0);
      var $dl18=(($arrayidx17+2)|0);
      var $len19=$dl18;
      var $17=HEAPU16[(($len19)>>1)];
      var $conv20=(($17)&65535);
      $len16=$conv20;
      var $18=$s_addr;
      var $bi_valid=(($18+5820)|0);
      var $19=HEAP32[(($bi_valid)>>2)];
      var $20=$len16;
      var $sub=((16-$20)|0);
      var $cmp21=(($19)|0) > (($sub)|0);
      if ($cmp21) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then23
      var $21=$curlen;
      var $22=$s_addr;
      var $bl_tree24=(($22+2684)|0);
      var $arrayidx25=(($bl_tree24+($21<<2))|0);
      var $fc=(($arrayidx25)|0);
      var $code=$fc;
      var $23=HEAPU16[(($code)>>1)];
      var $conv26=(($23)&65535);
      $val=$conv26;
      var $24=$val;
      var $conv27=(($24) & 65535);
      var $conv28=(($conv27)&65535);
      var $25=$s_addr;
      var $bi_valid29=(($25+5820)|0);
      var $26=HEAP32[(($bi_valid29)>>2)];
      var $shl=$conv28 << $26;
      var $27=$s_addr;
      var $bi_buf=(($27+5816)|0);
      var $28=HEAPU16[(($bi_buf)>>1)];
      var $conv30=(($28)&65535);
      var $or=$conv30 | $shl;
      var $conv31=(($or) & 65535);
      HEAP16[(($bi_buf)>>1)]=$conv31;
      var $29=$s_addr;
      var $bi_buf32=(($29+5816)|0);
      var $30=HEAPU16[(($bi_buf32)>>1)];
      var $conv33=(($30)&65535);
      var $and=$conv33 & 255;
      var $conv34=(($and) & 255);
      var $31=$s_addr;
      var $pending=(($31+20)|0);
      var $32=HEAPU32[(($pending)>>2)];
      var $inc35=(($32+1)|0);
      HEAP32[(($pending)>>2)]=$inc35;
      var $33=$s_addr;
      var $pending_buf=(($33+8)|0);
      var $34=HEAP32[(($pending_buf)>>2)];
      var $arrayidx36=(($34+$32)|0);
      HEAP8[($arrayidx36)]=$conv34;
      var $35=$s_addr;
      var $bi_buf37=(($35+5816)|0);
      var $36=HEAPU16[(($bi_buf37)>>1)];
      var $conv38=(($36)&65535);
      var $shr=$conv38 >> 8;
      var $conv39=(($shr) & 255);
      var $37=$s_addr;
      var $pending40=(($37+20)|0);
      var $38=HEAPU32[(($pending40)>>2)];
      var $inc41=(($38+1)|0);
      HEAP32[(($pending40)>>2)]=$inc41;
      var $39=$s_addr;
      var $pending_buf42=(($39+8)|0);
      var $40=HEAP32[(($pending_buf42)>>2)];
      var $arrayidx43=(($40+$38)|0);
      HEAP8[($arrayidx43)]=$conv39;
      var $41=$val;
      var $conv44=(($41) & 65535);
      var $conv45=(($conv44)&65535);
      var $42=$s_addr;
      var $bi_valid46=(($42+5820)|0);
      var $43=HEAP32[(($bi_valid46)>>2)];
      var $sub47=((16-$43)|0);
      var $shr48=$conv45 >> (($sub47)|0);
      var $conv49=(($shr48) & 65535);
      var $44=$s_addr;
      var $bi_buf50=(($44+5816)|0);
      HEAP16[(($bi_buf50)>>1)]=$conv49;
      var $45=$len16;
      var $sub51=(($45-16)|0);
      var $46=$s_addr;
      var $bi_valid52=(($46+5820)|0);
      var $47=HEAP32[(($bi_valid52)>>2)];
      var $add53=(($47+$sub51)|0);
      HEAP32[(($bi_valid52)>>2)]=$add53;
      __label__ = 12; break;
    case 11: // $if_else54
      var $48=$curlen;
      var $49=$s_addr;
      var $bl_tree55=(($49+2684)|0);
      var $arrayidx56=(($bl_tree55+($48<<2))|0);
      var $fc57=(($arrayidx56)|0);
      var $code58=$fc57;
      var $50=HEAPU16[(($code58)>>1)];
      var $conv59=(($50)&65535);
      var $51=$s_addr;
      var $bi_valid60=(($51+5820)|0);
      var $52=HEAP32[(($bi_valid60)>>2)];
      var $shl61=$conv59 << $52;
      var $53=$s_addr;
      var $bi_buf62=(($53+5816)|0);
      var $54=HEAPU16[(($bi_buf62)>>1)];
      var $conv63=(($54)&65535);
      var $or64=$conv63 | $shl61;
      var $conv65=(($or64) & 65535);
      HEAP16[(($bi_buf62)>>1)]=$conv65;
      var $55=$len16;
      var $56=$s_addr;
      var $bi_valid66=(($56+5820)|0);
      var $57=HEAP32[(($bi_valid66)>>2)];
      var $add67=(($57+$55)|0);
      HEAP32[(($bi_valid66)>>2)]=$add67;
      __label__ = 12; break;
    case 12: // $if_end68
      __label__ = 13; break;
    case 13: // $do_cond
      var $58=$count;
      var $dec=(($58-1)|0);
      $count=$dec;
      var $cmp69=(($dec)|0)!=0;
      if ($cmp69) { __label__ = 9; break; } else { __label__ = 14; break; }
    case 14: // $do_end
      __label__ = 45; break;
    case 15: // $if_else71
      var $59=$curlen;
      var $cmp72=(($59)|0)!=0;
      if ($cmp72) { __label__ = 16; break; } else { __label__ = 28; break; }
    case 16: // $if_then74
      var $60=$curlen;
      var $61=$prevlen;
      var $cmp75=(($60)|0)!=(($61)|0);
      if ($cmp75) { __label__ = 17; break; } else { __label__ = 21; break; }
    case 17: // $if_then77
      var $62=$curlen;
      var $63=$s_addr;
      var $bl_tree79=(($63+2684)|0);
      var $arrayidx80=(($bl_tree79+($62<<2))|0);
      var $dl81=(($arrayidx80+2)|0);
      var $len82=$dl81;
      var $64=HEAPU16[(($len82)>>1)];
      var $conv83=(($64)&65535);
      $len78=$conv83;
      var $65=$s_addr;
      var $bi_valid84=(($65+5820)|0);
      var $66=HEAP32[(($bi_valid84)>>2)];
      var $67=$len78;
      var $sub85=((16-$67)|0);
      var $cmp86=(($66)|0) > (($sub85)|0);
      if ($cmp86) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: // $if_then88
      var $68=$curlen;
      var $69=$s_addr;
      var $bl_tree90=(($69+2684)|0);
      var $arrayidx91=(($bl_tree90+($68<<2))|0);
      var $fc92=(($arrayidx91)|0);
      var $code93=$fc92;
      var $70=HEAPU16[(($code93)>>1)];
      var $conv94=(($70)&65535);
      $val89=$conv94;
      var $71=$val89;
      var $conv95=(($71) & 65535);
      var $conv96=(($conv95)&65535);
      var $72=$s_addr;
      var $bi_valid97=(($72+5820)|0);
      var $73=HEAP32[(($bi_valid97)>>2)];
      var $shl98=$conv96 << $73;
      var $74=$s_addr;
      var $bi_buf99=(($74+5816)|0);
      var $75=HEAPU16[(($bi_buf99)>>1)];
      var $conv100=(($75)&65535);
      var $or101=$conv100 | $shl98;
      var $conv102=(($or101) & 65535);
      HEAP16[(($bi_buf99)>>1)]=$conv102;
      var $76=$s_addr;
      var $bi_buf103=(($76+5816)|0);
      var $77=HEAPU16[(($bi_buf103)>>1)];
      var $conv104=(($77)&65535);
      var $and105=$conv104 & 255;
      var $conv106=(($and105) & 255);
      var $78=$s_addr;
      var $pending107=(($78+20)|0);
      var $79=HEAPU32[(($pending107)>>2)];
      var $inc108=(($79+1)|0);
      HEAP32[(($pending107)>>2)]=$inc108;
      var $80=$s_addr;
      var $pending_buf109=(($80+8)|0);
      var $81=HEAP32[(($pending_buf109)>>2)];
      var $arrayidx110=(($81+$79)|0);
      HEAP8[($arrayidx110)]=$conv106;
      var $82=$s_addr;
      var $bi_buf111=(($82+5816)|0);
      var $83=HEAPU16[(($bi_buf111)>>1)];
      var $conv112=(($83)&65535);
      var $shr113=$conv112 >> 8;
      var $conv114=(($shr113) & 255);
      var $84=$s_addr;
      var $pending115=(($84+20)|0);
      var $85=HEAPU32[(($pending115)>>2)];
      var $inc116=(($85+1)|0);
      HEAP32[(($pending115)>>2)]=$inc116;
      var $86=$s_addr;
      var $pending_buf117=(($86+8)|0);
      var $87=HEAP32[(($pending_buf117)>>2)];
      var $arrayidx118=(($87+$85)|0);
      HEAP8[($arrayidx118)]=$conv114;
      var $88=$val89;
      var $conv119=(($88) & 65535);
      var $conv120=(($conv119)&65535);
      var $89=$s_addr;
      var $bi_valid121=(($89+5820)|0);
      var $90=HEAP32[(($bi_valid121)>>2)];
      var $sub122=((16-$90)|0);
      var $shr123=$conv120 >> (($sub122)|0);
      var $conv124=(($shr123) & 65535);
      var $91=$s_addr;
      var $bi_buf125=(($91+5816)|0);
      HEAP16[(($bi_buf125)>>1)]=$conv124;
      var $92=$len78;
      var $sub126=(($92-16)|0);
      var $93=$s_addr;
      var $bi_valid127=(($93+5820)|0);
      var $94=HEAP32[(($bi_valid127)>>2)];
      var $add128=(($94+$sub126)|0);
      HEAP32[(($bi_valid127)>>2)]=$add128;
      __label__ = 20; break;
    case 19: // $if_else129
      var $95=$curlen;
      var $96=$s_addr;
      var $bl_tree130=(($96+2684)|0);
      var $arrayidx131=(($bl_tree130+($95<<2))|0);
      var $fc132=(($arrayidx131)|0);
      var $code133=$fc132;
      var $97=HEAPU16[(($code133)>>1)];
      var $conv134=(($97)&65535);
      var $98=$s_addr;
      var $bi_valid135=(($98+5820)|0);
      var $99=HEAP32[(($bi_valid135)>>2)];
      var $shl136=$conv134 << $99;
      var $100=$s_addr;
      var $bi_buf137=(($100+5816)|0);
      var $101=HEAPU16[(($bi_buf137)>>1)];
      var $conv138=(($101)&65535);
      var $or139=$conv138 | $shl136;
      var $conv140=(($or139) & 65535);
      HEAP16[(($bi_buf137)>>1)]=$conv140;
      var $102=$len78;
      var $103=$s_addr;
      var $bi_valid141=(($103+5820)|0);
      var $104=HEAP32[(($bi_valid141)>>2)];
      var $add142=(($104+$102)|0);
      HEAP32[(($bi_valid141)>>2)]=$add142;
      __label__ = 20; break;
    case 20: // $if_end143
      var $105=$count;
      var $dec144=(($105-1)|0);
      $count=$dec144;
      __label__ = 21; break;
    case 21: // $if_end145
      var $106=$s_addr;
      var $bl_tree147=(($106+2684)|0);
      var $arrayidx148=(($bl_tree147+64)|0);
      var $dl149=(($arrayidx148+2)|0);
      var $len150=$dl149;
      var $107=HEAPU16[(($len150)>>1)];
      var $conv151=(($107)&65535);
      $len146=$conv151;
      var $108=$s_addr;
      var $bi_valid152=(($108+5820)|0);
      var $109=HEAP32[(($bi_valid152)>>2)];
      var $110=$len146;
      var $sub153=((16-$110)|0);
      var $cmp154=(($109)|0) > (($sub153)|0);
      if ($cmp154) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then156
      var $111=$s_addr;
      var $bl_tree158=(($111+2684)|0);
      var $arrayidx159=(($bl_tree158+64)|0);
      var $fc160=(($arrayidx159)|0);
      var $code161=$fc160;
      var $112=HEAPU16[(($code161)>>1)];
      var $conv162=(($112)&65535);
      $val157=$conv162;
      var $113=$val157;
      var $conv163=(($113) & 65535);
      var $conv164=(($conv163)&65535);
      var $114=$s_addr;
      var $bi_valid165=(($114+5820)|0);
      var $115=HEAP32[(($bi_valid165)>>2)];
      var $shl166=$conv164 << $115;
      var $116=$s_addr;
      var $bi_buf167=(($116+5816)|0);
      var $117=HEAPU16[(($bi_buf167)>>1)];
      var $conv168=(($117)&65535);
      var $or169=$conv168 | $shl166;
      var $conv170=(($or169) & 65535);
      HEAP16[(($bi_buf167)>>1)]=$conv170;
      var $118=$s_addr;
      var $bi_buf171=(($118+5816)|0);
      var $119=HEAPU16[(($bi_buf171)>>1)];
      var $conv172=(($119)&65535);
      var $and173=$conv172 & 255;
      var $conv174=(($and173) & 255);
      var $120=$s_addr;
      var $pending175=(($120+20)|0);
      var $121=HEAPU32[(($pending175)>>2)];
      var $inc176=(($121+1)|0);
      HEAP32[(($pending175)>>2)]=$inc176;
      var $122=$s_addr;
      var $pending_buf177=(($122+8)|0);
      var $123=HEAP32[(($pending_buf177)>>2)];
      var $arrayidx178=(($123+$121)|0);
      HEAP8[($arrayidx178)]=$conv174;
      var $124=$s_addr;
      var $bi_buf179=(($124+5816)|0);
      var $125=HEAPU16[(($bi_buf179)>>1)];
      var $conv180=(($125)&65535);
      var $shr181=$conv180 >> 8;
      var $conv182=(($shr181) & 255);
      var $126=$s_addr;
      var $pending183=(($126+20)|0);
      var $127=HEAPU32[(($pending183)>>2)];
      var $inc184=(($127+1)|0);
      HEAP32[(($pending183)>>2)]=$inc184;
      var $128=$s_addr;
      var $pending_buf185=(($128+8)|0);
      var $129=HEAP32[(($pending_buf185)>>2)];
      var $arrayidx186=(($129+$127)|0);
      HEAP8[($arrayidx186)]=$conv182;
      var $130=$val157;
      var $conv187=(($130) & 65535);
      var $conv188=(($conv187)&65535);
      var $131=$s_addr;
      var $bi_valid189=(($131+5820)|0);
      var $132=HEAP32[(($bi_valid189)>>2)];
      var $sub190=((16-$132)|0);
      var $shr191=$conv188 >> (($sub190)|0);
      var $conv192=(($shr191) & 65535);
      var $133=$s_addr;
      var $bi_buf193=(($133+5816)|0);
      HEAP16[(($bi_buf193)>>1)]=$conv192;
      var $134=$len146;
      var $sub194=(($134-16)|0);
      var $135=$s_addr;
      var $bi_valid195=(($135+5820)|0);
      var $136=HEAP32[(($bi_valid195)>>2)];
      var $add196=(($136+$sub194)|0);
      HEAP32[(($bi_valid195)>>2)]=$add196;
      __label__ = 24; break;
    case 23: // $if_else197
      var $137=$s_addr;
      var $bl_tree198=(($137+2684)|0);
      var $arrayidx199=(($bl_tree198+64)|0);
      var $fc200=(($arrayidx199)|0);
      var $code201=$fc200;
      var $138=HEAPU16[(($code201)>>1)];
      var $conv202=(($138)&65535);
      var $139=$s_addr;
      var $bi_valid203=(($139+5820)|0);
      var $140=HEAP32[(($bi_valid203)>>2)];
      var $shl204=$conv202 << $140;
      var $141=$s_addr;
      var $bi_buf205=(($141+5816)|0);
      var $142=HEAPU16[(($bi_buf205)>>1)];
      var $conv206=(($142)&65535);
      var $or207=$conv206 | $shl204;
      var $conv208=(($or207) & 65535);
      HEAP16[(($bi_buf205)>>1)]=$conv208;
      var $143=$len146;
      var $144=$s_addr;
      var $bi_valid209=(($144+5820)|0);
      var $145=HEAP32[(($bi_valid209)>>2)];
      var $add210=(($145+$143)|0);
      HEAP32[(($bi_valid209)>>2)]=$add210;
      __label__ = 24; break;
    case 24: // $if_end211
      $len212=2;
      var $146=$s_addr;
      var $bi_valid213=(($146+5820)|0);
      var $147=HEAP32[(($bi_valid213)>>2)];
      var $148=$len212;
      var $sub214=((16-$148)|0);
      var $cmp215=(($147)|0) > (($sub214)|0);
      if ($cmp215) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $if_then217
      var $149=$count;
      var $sub219=(($149-3)|0);
      $val218=$sub219;
      var $150=$val218;
      var $conv220=(($150) & 65535);
      var $conv221=(($conv220)&65535);
      var $151=$s_addr;
      var $bi_valid222=(($151+5820)|0);
      var $152=HEAP32[(($bi_valid222)>>2)];
      var $shl223=$conv221 << $152;
      var $153=$s_addr;
      var $bi_buf224=(($153+5816)|0);
      var $154=HEAPU16[(($bi_buf224)>>1)];
      var $conv225=(($154)&65535);
      var $or226=$conv225 | $shl223;
      var $conv227=(($or226) & 65535);
      HEAP16[(($bi_buf224)>>1)]=$conv227;
      var $155=$s_addr;
      var $bi_buf228=(($155+5816)|0);
      var $156=HEAPU16[(($bi_buf228)>>1)];
      var $conv229=(($156)&65535);
      var $and230=$conv229 & 255;
      var $conv231=(($and230) & 255);
      var $157=$s_addr;
      var $pending232=(($157+20)|0);
      var $158=HEAPU32[(($pending232)>>2)];
      var $inc233=(($158+1)|0);
      HEAP32[(($pending232)>>2)]=$inc233;
      var $159=$s_addr;
      var $pending_buf234=(($159+8)|0);
      var $160=HEAP32[(($pending_buf234)>>2)];
      var $arrayidx235=(($160+$158)|0);
      HEAP8[($arrayidx235)]=$conv231;
      var $161=$s_addr;
      var $bi_buf236=(($161+5816)|0);
      var $162=HEAPU16[(($bi_buf236)>>1)];
      var $conv237=(($162)&65535);
      var $shr238=$conv237 >> 8;
      var $conv239=(($shr238) & 255);
      var $163=$s_addr;
      var $pending240=(($163+20)|0);
      var $164=HEAPU32[(($pending240)>>2)];
      var $inc241=(($164+1)|0);
      HEAP32[(($pending240)>>2)]=$inc241;
      var $165=$s_addr;
      var $pending_buf242=(($165+8)|0);
      var $166=HEAP32[(($pending_buf242)>>2)];
      var $arrayidx243=(($166+$164)|0);
      HEAP8[($arrayidx243)]=$conv239;
      var $167=$val218;
      var $conv244=(($167) & 65535);
      var $conv245=(($conv244)&65535);
      var $168=$s_addr;
      var $bi_valid246=(($168+5820)|0);
      var $169=HEAP32[(($bi_valid246)>>2)];
      var $sub247=((16-$169)|0);
      var $shr248=$conv245 >> (($sub247)|0);
      var $conv249=(($shr248) & 65535);
      var $170=$s_addr;
      var $bi_buf250=(($170+5816)|0);
      HEAP16[(($bi_buf250)>>1)]=$conv249;
      var $171=$len212;
      var $sub251=(($171-16)|0);
      var $172=$s_addr;
      var $bi_valid252=(($172+5820)|0);
      var $173=HEAP32[(($bi_valid252)>>2)];
      var $add253=(($173+$sub251)|0);
      HEAP32[(($bi_valid252)>>2)]=$add253;
      __label__ = 27; break;
    case 26: // $if_else254
      var $174=$count;
      var $sub255=(($174-3)|0);
      var $conv256=(($sub255) & 65535);
      var $conv257=(($conv256)&65535);
      var $175=$s_addr;
      var $bi_valid258=(($175+5820)|0);
      var $176=HEAP32[(($bi_valid258)>>2)];
      var $shl259=$conv257 << $176;
      var $177=$s_addr;
      var $bi_buf260=(($177+5816)|0);
      var $178=HEAPU16[(($bi_buf260)>>1)];
      var $conv261=(($178)&65535);
      var $or262=$conv261 | $shl259;
      var $conv263=(($or262) & 65535);
      HEAP16[(($bi_buf260)>>1)]=$conv263;
      var $179=$len212;
      var $180=$s_addr;
      var $bi_valid264=(($180+5820)|0);
      var $181=HEAP32[(($bi_valid264)>>2)];
      var $add265=(($181+$179)|0);
      HEAP32[(($bi_valid264)>>2)]=$add265;
      __label__ = 27; break;
    case 27: // $if_end266
      __label__ = 44; break;
    case 28: // $if_else267
      var $182=$count;
      var $cmp268=(($182)|0) <= 10;
      if ($cmp268) { __label__ = 29; break; } else { __label__ = 36; break; }
    case 29: // $if_then270
      var $183=$s_addr;
      var $bl_tree272=(($183+2684)|0);
      var $arrayidx273=(($bl_tree272+68)|0);
      var $dl274=(($arrayidx273+2)|0);
      var $len275=$dl274;
      var $184=HEAPU16[(($len275)>>1)];
      var $conv276=(($184)&65535);
      $len271=$conv276;
      var $185=$s_addr;
      var $bi_valid277=(($185+5820)|0);
      var $186=HEAP32[(($bi_valid277)>>2)];
      var $187=$len271;
      var $sub278=((16-$187)|0);
      var $cmp279=(($186)|0) > (($sub278)|0);
      if ($cmp279) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then281
      var $188=$s_addr;
      var $bl_tree283=(($188+2684)|0);
      var $arrayidx284=(($bl_tree283+68)|0);
      var $fc285=(($arrayidx284)|0);
      var $code286=$fc285;
      var $189=HEAPU16[(($code286)>>1)];
      var $conv287=(($189)&65535);
      $val282=$conv287;
      var $190=$val282;
      var $conv288=(($190) & 65535);
      var $conv289=(($conv288)&65535);
      var $191=$s_addr;
      var $bi_valid290=(($191+5820)|0);
      var $192=HEAP32[(($bi_valid290)>>2)];
      var $shl291=$conv289 << $192;
      var $193=$s_addr;
      var $bi_buf292=(($193+5816)|0);
      var $194=HEAPU16[(($bi_buf292)>>1)];
      var $conv293=(($194)&65535);
      var $or294=$conv293 | $shl291;
      var $conv295=(($or294) & 65535);
      HEAP16[(($bi_buf292)>>1)]=$conv295;
      var $195=$s_addr;
      var $bi_buf296=(($195+5816)|0);
      var $196=HEAPU16[(($bi_buf296)>>1)];
      var $conv297=(($196)&65535);
      var $and298=$conv297 & 255;
      var $conv299=(($and298) & 255);
      var $197=$s_addr;
      var $pending300=(($197+20)|0);
      var $198=HEAPU32[(($pending300)>>2)];
      var $inc301=(($198+1)|0);
      HEAP32[(($pending300)>>2)]=$inc301;
      var $199=$s_addr;
      var $pending_buf302=(($199+8)|0);
      var $200=HEAP32[(($pending_buf302)>>2)];
      var $arrayidx303=(($200+$198)|0);
      HEAP8[($arrayidx303)]=$conv299;
      var $201=$s_addr;
      var $bi_buf304=(($201+5816)|0);
      var $202=HEAPU16[(($bi_buf304)>>1)];
      var $conv305=(($202)&65535);
      var $shr306=$conv305 >> 8;
      var $conv307=(($shr306) & 255);
      var $203=$s_addr;
      var $pending308=(($203+20)|0);
      var $204=HEAPU32[(($pending308)>>2)];
      var $inc309=(($204+1)|0);
      HEAP32[(($pending308)>>2)]=$inc309;
      var $205=$s_addr;
      var $pending_buf310=(($205+8)|0);
      var $206=HEAP32[(($pending_buf310)>>2)];
      var $arrayidx311=(($206+$204)|0);
      HEAP8[($arrayidx311)]=$conv307;
      var $207=$val282;
      var $conv312=(($207) & 65535);
      var $conv313=(($conv312)&65535);
      var $208=$s_addr;
      var $bi_valid314=(($208+5820)|0);
      var $209=HEAP32[(($bi_valid314)>>2)];
      var $sub315=((16-$209)|0);
      var $shr316=$conv313 >> (($sub315)|0);
      var $conv317=(($shr316) & 65535);
      var $210=$s_addr;
      var $bi_buf318=(($210+5816)|0);
      HEAP16[(($bi_buf318)>>1)]=$conv317;
      var $211=$len271;
      var $sub319=(($211-16)|0);
      var $212=$s_addr;
      var $bi_valid320=(($212+5820)|0);
      var $213=HEAP32[(($bi_valid320)>>2)];
      var $add321=(($213+$sub319)|0);
      HEAP32[(($bi_valid320)>>2)]=$add321;
      __label__ = 32; break;
    case 31: // $if_else322
      var $214=$s_addr;
      var $bl_tree323=(($214+2684)|0);
      var $arrayidx324=(($bl_tree323+68)|0);
      var $fc325=(($arrayidx324)|0);
      var $code326=$fc325;
      var $215=HEAPU16[(($code326)>>1)];
      var $conv327=(($215)&65535);
      var $216=$s_addr;
      var $bi_valid328=(($216+5820)|0);
      var $217=HEAP32[(($bi_valid328)>>2)];
      var $shl329=$conv327 << $217;
      var $218=$s_addr;
      var $bi_buf330=(($218+5816)|0);
      var $219=HEAPU16[(($bi_buf330)>>1)];
      var $conv331=(($219)&65535);
      var $or332=$conv331 | $shl329;
      var $conv333=(($or332) & 65535);
      HEAP16[(($bi_buf330)>>1)]=$conv333;
      var $220=$len271;
      var $221=$s_addr;
      var $bi_valid334=(($221+5820)|0);
      var $222=HEAP32[(($bi_valid334)>>2)];
      var $add335=(($222+$220)|0);
      HEAP32[(($bi_valid334)>>2)]=$add335;
      __label__ = 32; break;
    case 32: // $if_end336
      $len337=3;
      var $223=$s_addr;
      var $bi_valid338=(($223+5820)|0);
      var $224=HEAP32[(($bi_valid338)>>2)];
      var $225=$len337;
      var $sub339=((16-$225)|0);
      var $cmp340=(($224)|0) > (($sub339)|0);
      if ($cmp340) { __label__ = 33; break; } else { __label__ = 34; break; }
    case 33: // $if_then342
      var $226=$count;
      var $sub344=(($226-3)|0);
      $val343=$sub344;
      var $227=$val343;
      var $conv345=(($227) & 65535);
      var $conv346=(($conv345)&65535);
      var $228=$s_addr;
      var $bi_valid347=(($228+5820)|0);
      var $229=HEAP32[(($bi_valid347)>>2)];
      var $shl348=$conv346 << $229;
      var $230=$s_addr;
      var $bi_buf349=(($230+5816)|0);
      var $231=HEAPU16[(($bi_buf349)>>1)];
      var $conv350=(($231)&65535);
      var $or351=$conv350 | $shl348;
      var $conv352=(($or351) & 65535);
      HEAP16[(($bi_buf349)>>1)]=$conv352;
      var $232=$s_addr;
      var $bi_buf353=(($232+5816)|0);
      var $233=HEAPU16[(($bi_buf353)>>1)];
      var $conv354=(($233)&65535);
      var $and355=$conv354 & 255;
      var $conv356=(($and355) & 255);
      var $234=$s_addr;
      var $pending357=(($234+20)|0);
      var $235=HEAPU32[(($pending357)>>2)];
      var $inc358=(($235+1)|0);
      HEAP32[(($pending357)>>2)]=$inc358;
      var $236=$s_addr;
      var $pending_buf359=(($236+8)|0);
      var $237=HEAP32[(($pending_buf359)>>2)];
      var $arrayidx360=(($237+$235)|0);
      HEAP8[($arrayidx360)]=$conv356;
      var $238=$s_addr;
      var $bi_buf361=(($238+5816)|0);
      var $239=HEAPU16[(($bi_buf361)>>1)];
      var $conv362=(($239)&65535);
      var $shr363=$conv362 >> 8;
      var $conv364=(($shr363) & 255);
      var $240=$s_addr;
      var $pending365=(($240+20)|0);
      var $241=HEAPU32[(($pending365)>>2)];
      var $inc366=(($241+1)|0);
      HEAP32[(($pending365)>>2)]=$inc366;
      var $242=$s_addr;
      var $pending_buf367=(($242+8)|0);
      var $243=HEAP32[(($pending_buf367)>>2)];
      var $arrayidx368=(($243+$241)|0);
      HEAP8[($arrayidx368)]=$conv364;
      var $244=$val343;
      var $conv369=(($244) & 65535);
      var $conv370=(($conv369)&65535);
      var $245=$s_addr;
      var $bi_valid371=(($245+5820)|0);
      var $246=HEAP32[(($bi_valid371)>>2)];
      var $sub372=((16-$246)|0);
      var $shr373=$conv370 >> (($sub372)|0);
      var $conv374=(($shr373) & 65535);
      var $247=$s_addr;
      var $bi_buf375=(($247+5816)|0);
      HEAP16[(($bi_buf375)>>1)]=$conv374;
      var $248=$len337;
      var $sub376=(($248-16)|0);
      var $249=$s_addr;
      var $bi_valid377=(($249+5820)|0);
      var $250=HEAP32[(($bi_valid377)>>2)];
      var $add378=(($250+$sub376)|0);
      HEAP32[(($bi_valid377)>>2)]=$add378;
      __label__ = 35; break;
    case 34: // $if_else379
      var $251=$count;
      var $sub380=(($251-3)|0);
      var $conv381=(($sub380) & 65535);
      var $conv382=(($conv381)&65535);
      var $252=$s_addr;
      var $bi_valid383=(($252+5820)|0);
      var $253=HEAP32[(($bi_valid383)>>2)];
      var $shl384=$conv382 << $253;
      var $254=$s_addr;
      var $bi_buf385=(($254+5816)|0);
      var $255=HEAPU16[(($bi_buf385)>>1)];
      var $conv386=(($255)&65535);
      var $or387=$conv386 | $shl384;
      var $conv388=(($or387) & 65535);
      HEAP16[(($bi_buf385)>>1)]=$conv388;
      var $256=$len337;
      var $257=$s_addr;
      var $bi_valid389=(($257+5820)|0);
      var $258=HEAP32[(($bi_valid389)>>2)];
      var $add390=(($258+$256)|0);
      HEAP32[(($bi_valid389)>>2)]=$add390;
      __label__ = 35; break;
    case 35: // $if_end391
      __label__ = 43; break;
    case 36: // $if_else392
      var $259=$s_addr;
      var $bl_tree394=(($259+2684)|0);
      var $arrayidx395=(($bl_tree394+72)|0);
      var $dl396=(($arrayidx395+2)|0);
      var $len397=$dl396;
      var $260=HEAPU16[(($len397)>>1)];
      var $conv398=(($260)&65535);
      $len393=$conv398;
      var $261=$s_addr;
      var $bi_valid399=(($261+5820)|0);
      var $262=HEAP32[(($bi_valid399)>>2)];
      var $263=$len393;
      var $sub400=((16-$263)|0);
      var $cmp401=(($262)|0) > (($sub400)|0);
      if ($cmp401) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: // $if_then403
      var $264=$s_addr;
      var $bl_tree405=(($264+2684)|0);
      var $arrayidx406=(($bl_tree405+72)|0);
      var $fc407=(($arrayidx406)|0);
      var $code408=$fc407;
      var $265=HEAPU16[(($code408)>>1)];
      var $conv409=(($265)&65535);
      $val404=$conv409;
      var $266=$val404;
      var $conv410=(($266) & 65535);
      var $conv411=(($conv410)&65535);
      var $267=$s_addr;
      var $bi_valid412=(($267+5820)|0);
      var $268=HEAP32[(($bi_valid412)>>2)];
      var $shl413=$conv411 << $268;
      var $269=$s_addr;
      var $bi_buf414=(($269+5816)|0);
      var $270=HEAPU16[(($bi_buf414)>>1)];
      var $conv415=(($270)&65535);
      var $or416=$conv415 | $shl413;
      var $conv417=(($or416) & 65535);
      HEAP16[(($bi_buf414)>>1)]=$conv417;
      var $271=$s_addr;
      var $bi_buf418=(($271+5816)|0);
      var $272=HEAPU16[(($bi_buf418)>>1)];
      var $conv419=(($272)&65535);
      var $and420=$conv419 & 255;
      var $conv421=(($and420) & 255);
      var $273=$s_addr;
      var $pending422=(($273+20)|0);
      var $274=HEAPU32[(($pending422)>>2)];
      var $inc423=(($274+1)|0);
      HEAP32[(($pending422)>>2)]=$inc423;
      var $275=$s_addr;
      var $pending_buf424=(($275+8)|0);
      var $276=HEAP32[(($pending_buf424)>>2)];
      var $arrayidx425=(($276+$274)|0);
      HEAP8[($arrayidx425)]=$conv421;
      var $277=$s_addr;
      var $bi_buf426=(($277+5816)|0);
      var $278=HEAPU16[(($bi_buf426)>>1)];
      var $conv427=(($278)&65535);
      var $shr428=$conv427 >> 8;
      var $conv429=(($shr428) & 255);
      var $279=$s_addr;
      var $pending430=(($279+20)|0);
      var $280=HEAPU32[(($pending430)>>2)];
      var $inc431=(($280+1)|0);
      HEAP32[(($pending430)>>2)]=$inc431;
      var $281=$s_addr;
      var $pending_buf432=(($281+8)|0);
      var $282=HEAP32[(($pending_buf432)>>2)];
      var $arrayidx433=(($282+$280)|0);
      HEAP8[($arrayidx433)]=$conv429;
      var $283=$val404;
      var $conv434=(($283) & 65535);
      var $conv435=(($conv434)&65535);
      var $284=$s_addr;
      var $bi_valid436=(($284+5820)|0);
      var $285=HEAP32[(($bi_valid436)>>2)];
      var $sub437=((16-$285)|0);
      var $shr438=$conv435 >> (($sub437)|0);
      var $conv439=(($shr438) & 65535);
      var $286=$s_addr;
      var $bi_buf440=(($286+5816)|0);
      HEAP16[(($bi_buf440)>>1)]=$conv439;
      var $287=$len393;
      var $sub441=(($287-16)|0);
      var $288=$s_addr;
      var $bi_valid442=(($288+5820)|0);
      var $289=HEAP32[(($bi_valid442)>>2)];
      var $add443=(($289+$sub441)|0);
      HEAP32[(($bi_valid442)>>2)]=$add443;
      __label__ = 39; break;
    case 38: // $if_else444
      var $290=$s_addr;
      var $bl_tree445=(($290+2684)|0);
      var $arrayidx446=(($bl_tree445+72)|0);
      var $fc447=(($arrayidx446)|0);
      var $code448=$fc447;
      var $291=HEAPU16[(($code448)>>1)];
      var $conv449=(($291)&65535);
      var $292=$s_addr;
      var $bi_valid450=(($292+5820)|0);
      var $293=HEAP32[(($bi_valid450)>>2)];
      var $shl451=$conv449 << $293;
      var $294=$s_addr;
      var $bi_buf452=(($294+5816)|0);
      var $295=HEAPU16[(($bi_buf452)>>1)];
      var $conv453=(($295)&65535);
      var $or454=$conv453 | $shl451;
      var $conv455=(($or454) & 65535);
      HEAP16[(($bi_buf452)>>1)]=$conv455;
      var $296=$len393;
      var $297=$s_addr;
      var $bi_valid456=(($297+5820)|0);
      var $298=HEAP32[(($bi_valid456)>>2)];
      var $add457=(($298+$296)|0);
      HEAP32[(($bi_valid456)>>2)]=$add457;
      __label__ = 39; break;
    case 39: // $if_end458
      $len459=7;
      var $299=$s_addr;
      var $bi_valid460=(($299+5820)|0);
      var $300=HEAP32[(($bi_valid460)>>2)];
      var $301=$len459;
      var $sub461=((16-$301)|0);
      var $cmp462=(($300)|0) > (($sub461)|0);
      if ($cmp462) { __label__ = 40; break; } else { __label__ = 41; break; }
    case 40: // $if_then464
      var $302=$count;
      var $sub466=(($302-11)|0);
      $val465=$sub466;
      var $303=$val465;
      var $conv467=(($303) & 65535);
      var $conv468=(($conv467)&65535);
      var $304=$s_addr;
      var $bi_valid469=(($304+5820)|0);
      var $305=HEAP32[(($bi_valid469)>>2)];
      var $shl470=$conv468 << $305;
      var $306=$s_addr;
      var $bi_buf471=(($306+5816)|0);
      var $307=HEAPU16[(($bi_buf471)>>1)];
      var $conv472=(($307)&65535);
      var $or473=$conv472 | $shl470;
      var $conv474=(($or473) & 65535);
      HEAP16[(($bi_buf471)>>1)]=$conv474;
      var $308=$s_addr;
      var $bi_buf475=(($308+5816)|0);
      var $309=HEAPU16[(($bi_buf475)>>1)];
      var $conv476=(($309)&65535);
      var $and477=$conv476 & 255;
      var $conv478=(($and477) & 255);
      var $310=$s_addr;
      var $pending479=(($310+20)|0);
      var $311=HEAPU32[(($pending479)>>2)];
      var $inc480=(($311+1)|0);
      HEAP32[(($pending479)>>2)]=$inc480;
      var $312=$s_addr;
      var $pending_buf481=(($312+8)|0);
      var $313=HEAP32[(($pending_buf481)>>2)];
      var $arrayidx482=(($313+$311)|0);
      HEAP8[($arrayidx482)]=$conv478;
      var $314=$s_addr;
      var $bi_buf483=(($314+5816)|0);
      var $315=HEAPU16[(($bi_buf483)>>1)];
      var $conv484=(($315)&65535);
      var $shr485=$conv484 >> 8;
      var $conv486=(($shr485) & 255);
      var $316=$s_addr;
      var $pending487=(($316+20)|0);
      var $317=HEAPU32[(($pending487)>>2)];
      var $inc488=(($317+1)|0);
      HEAP32[(($pending487)>>2)]=$inc488;
      var $318=$s_addr;
      var $pending_buf489=(($318+8)|0);
      var $319=HEAP32[(($pending_buf489)>>2)];
      var $arrayidx490=(($319+$317)|0);
      HEAP8[($arrayidx490)]=$conv486;
      var $320=$val465;
      var $conv491=(($320) & 65535);
      var $conv492=(($conv491)&65535);
      var $321=$s_addr;
      var $bi_valid493=(($321+5820)|0);
      var $322=HEAP32[(($bi_valid493)>>2)];
      var $sub494=((16-$322)|0);
      var $shr495=$conv492 >> (($sub494)|0);
      var $conv496=(($shr495) & 65535);
      var $323=$s_addr;
      var $bi_buf497=(($323+5816)|0);
      HEAP16[(($bi_buf497)>>1)]=$conv496;
      var $324=$len459;
      var $sub498=(($324-16)|0);
      var $325=$s_addr;
      var $bi_valid499=(($325+5820)|0);
      var $326=HEAP32[(($bi_valid499)>>2)];
      var $add500=(($326+$sub498)|0);
      HEAP32[(($bi_valid499)>>2)]=$add500;
      __label__ = 42; break;
    case 41: // $if_else501
      var $327=$count;
      var $sub502=(($327-11)|0);
      var $conv503=(($sub502) & 65535);
      var $conv504=(($conv503)&65535);
      var $328=$s_addr;
      var $bi_valid505=(($328+5820)|0);
      var $329=HEAP32[(($bi_valid505)>>2)];
      var $shl506=$conv504 << $329;
      var $330=$s_addr;
      var $bi_buf507=(($330+5816)|0);
      var $331=HEAPU16[(($bi_buf507)>>1)];
      var $conv508=(($331)&65535);
      var $or509=$conv508 | $shl506;
      var $conv510=(($or509) & 65535);
      HEAP16[(($bi_buf507)>>1)]=$conv510;
      var $332=$len459;
      var $333=$s_addr;
      var $bi_valid511=(($333+5820)|0);
      var $334=HEAP32[(($bi_valid511)>>2)];
      var $add512=(($334+$332)|0);
      HEAP32[(($bi_valid511)>>2)]=$add512;
      __label__ = 42; break;
    case 42: // $if_end513
      __label__ = 43; break;
    case 43: // $if_end514
      __label__ = 44; break;
    case 44: // $if_end515
      __label__ = 45; break;
    case 45: // $if_end516
      __label__ = 46; break;
    case 46: // $if_end517
      $count=0;
      var $335=$curlen;
      $prevlen=$335;
      var $336=$nextlen;
      var $cmp518=(($336)|0)==0;
      if ($cmp518) { __label__ = 47; break; } else { __label__ = 48; break; }
    case 47: // $if_then520
      $max_count=138;
      $min_count=3;
      __label__ = 52; break;
    case 48: // $if_else521
      var $337=$curlen;
      var $338=$nextlen;
      var $cmp522=(($337)|0)==(($338)|0);
      if ($cmp522) { __label__ = 49; break; } else { __label__ = 50; break; }
    case 49: // $if_then524
      $max_count=6;
      $min_count=3;
      __label__ = 51; break;
    case 50: // $if_else525
      $max_count=7;
      $min_count=4;
      __label__ = 51; break;
    case 51: // $if_end526
      __label__ = 52; break;
    case 52: // $if_end527
      __label__ = 53; break;
    case 53: // $for_inc
      var $339=$n;
      var $inc528=(($339+1)|0);
      $n=$inc528;
      __label__ = 3; break;
    case 54: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_send_tree["X"]=1;

function _bi_reverse($code, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $code_addr;
      var $len_addr;
      var $res;
      $code_addr=$code;
      $len_addr=$len;
      $res=0;
      __label__ = 1; break;
    case 1: // $do_body
      var $0=$code_addr;
      var $and=$0 & 1;
      var $1=$res;
      var $or=$1 | $and;
      $res=$or;
      var $2=$code_addr;
      var $shr=$2 >>> 1;
      $code_addr=$shr;
      var $3=$res;
      var $shl=$3 << 1;
      $res=$shl;
      __label__ = 2; break;
    case 2: // $do_cond
      var $4=$len_addr;
      var $dec=(($4-1)|0);
      $len_addr=$dec;
      var $cmp=(($dec)|0) > 0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 3; break; }
    case 3: // $do_end
      var $5=$res;
      var $shr1=$5 >>> 1;
      ;
      return $shr1;
    default: assert(0, "bad label: " + __label__);
  }
}


function _scan_tree($s, $tree, $max_code) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $tree_addr;
      var $max_code_addr;
      var $n;
      var $prevlen;
      var $curlen;
      var $nextlen;
      var $count;
      var $max_count;
      var $min_count;
      $s_addr=$s;
      $tree_addr=$tree;
      $max_code_addr=$max_code;
      $prevlen=-1;
      var $0=$tree_addr;
      var $arrayidx=(($0)|0);
      var $dl=(($arrayidx+2)|0);
      var $len=$dl;
      var $1=HEAPU16[(($len)>>1)];
      var $conv=(($1)&65535);
      $nextlen=$conv;
      $count=0;
      $max_count=7;
      $min_count=4;
      var $2=$nextlen;
      var $cmp=(($2)|0)==0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $max_count=138;
      $min_count=3;
      __label__ = 2; break;
    case 2: // $if_end
      var $3=$max_code_addr;
      var $add=(($3+1)|0);
      var $4=$tree_addr;
      var $arrayidx2=(($4+($add<<2))|0);
      var $dl3=(($arrayidx2+2)|0);
      var $len4=$dl3;
      HEAP16[(($len4)>>1)]=-1;
      $n=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $5=$n;
      var $6=$max_code_addr;
      var $cmp5=(($5)|0) <= (($6)|0);
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 27; break; }
    case 4: // $for_body
      var $7=$nextlen;
      $curlen=$7;
      var $8=$n;
      var $add7=(($8+1)|0);
      var $9=$tree_addr;
      var $arrayidx8=(($9+($add7<<2))|0);
      var $dl9=(($arrayidx8+2)|0);
      var $len10=$dl9;
      var $10=HEAPU16[(($len10)>>1)];
      var $conv11=(($10)&65535);
      $nextlen=$conv11;
      var $11=$count;
      var $inc=(($11+1)|0);
      $count=$inc;
      var $12=$max_count;
      var $cmp12=(($inc)|0) < (($12)|0);
      if ($cmp12) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: // $land_lhs_true
      var $13=$curlen;
      var $14=$nextlen;
      var $cmp14=(($13)|0)==(($14)|0);
      if ($cmp14) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then16
      __label__ = 26; break;
    case 7: // $if_else
      var $15=$count;
      var $16=$min_count;
      var $cmp17=(($15)|0) < (($16)|0);
      if ($cmp17) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then19
      var $17=$count;
      var $18=$curlen;
      var $19=$s_addr;
      var $bl_tree=(($19+2684)|0);
      var $arrayidx20=(($bl_tree+($18<<2))|0);
      var $fc=(($arrayidx20)|0);
      var $freq=$fc;
      var $20=HEAPU16[(($freq)>>1)];
      var $conv21=(($20)&65535);
      var $add22=(($conv21+$17)|0);
      var $conv23=(($add22) & 65535);
      HEAP16[(($freq)>>1)]=$conv23;
      __label__ = 18; break;
    case 9: // $if_else24
      var $21=$curlen;
      var $cmp25=(($21)|0)!=0;
      if ($cmp25) { __label__ = 10; break; } else { __label__ = 13; break; }
    case 10: // $if_then27
      var $22=$curlen;
      var $23=$prevlen;
      var $cmp28=(($22)|0)!=(($23)|0);
      if ($cmp28) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then30
      var $24=$curlen;
      var $25=$s_addr;
      var $bl_tree31=(($25+2684)|0);
      var $arrayidx32=(($bl_tree31+($24<<2))|0);
      var $fc33=(($arrayidx32)|0);
      var $freq34=$fc33;
      var $26=HEAP16[(($freq34)>>1)];
      var $inc35=(($26+1)&65535);
      HEAP16[(($freq34)>>1)]=$inc35;
      __label__ = 12; break;
    case 12: // $if_end36
      var $27=$s_addr;
      var $bl_tree37=(($27+2684)|0);
      var $arrayidx38=(($bl_tree37+64)|0);
      var $fc39=(($arrayidx38)|0);
      var $freq40=$fc39;
      var $28=HEAP16[(($freq40)>>1)];
      var $inc41=(($28+1)&65535);
      HEAP16[(($freq40)>>1)]=$inc41;
      __label__ = 17; break;
    case 13: // $if_else42
      var $29=$count;
      var $cmp43=(($29)|0) <= 10;
      if ($cmp43) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then45
      var $30=$s_addr;
      var $bl_tree46=(($30+2684)|0);
      var $arrayidx47=(($bl_tree46+68)|0);
      var $fc48=(($arrayidx47)|0);
      var $freq49=$fc48;
      var $31=HEAP16[(($freq49)>>1)];
      var $inc50=(($31+1)&65535);
      HEAP16[(($freq49)>>1)]=$inc50;
      __label__ = 16; break;
    case 15: // $if_else51
      var $32=$s_addr;
      var $bl_tree52=(($32+2684)|0);
      var $arrayidx53=(($bl_tree52+72)|0);
      var $fc54=(($arrayidx53)|0);
      var $freq55=$fc54;
      var $33=HEAP16[(($freq55)>>1)];
      var $inc56=(($33+1)&65535);
      HEAP16[(($freq55)>>1)]=$inc56;
      __label__ = 16; break;
    case 16: // $if_end57
      __label__ = 17; break;
    case 17: // $if_end58
      __label__ = 18; break;
    case 18: // $if_end59
      __label__ = 19; break;
    case 19: // $if_end60
      $count=0;
      var $34=$curlen;
      $prevlen=$34;
      var $35=$nextlen;
      var $cmp61=(($35)|0)==0;
      if ($cmp61) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: // $if_then63
      $max_count=138;
      $min_count=3;
      __label__ = 25; break;
    case 21: // $if_else64
      var $36=$curlen;
      var $37=$nextlen;
      var $cmp65=(($36)|0)==(($37)|0);
      if ($cmp65) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then67
      $max_count=6;
      $min_count=3;
      __label__ = 24; break;
    case 23: // $if_else68
      $max_count=7;
      $min_count=4;
      __label__ = 24; break;
    case 24: // $if_end69
      __label__ = 25; break;
    case 25: // $if_end70
      __label__ = 26; break;
    case 26: // $for_inc
      var $38=$n;
      var $inc71=(($38+1)|0);
      $n=$inc71;
      __label__ = 3; break;
    case 27: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_scan_tree["X"]=1;

function _pqdownheap($s, $tree, $k) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $tree_addr;
      var $k_addr;
      var $v;
      var $j;
      $s_addr=$s;
      $tree_addr=$tree;
      $k_addr=$k;
      var $0=$k_addr;
      var $1=$s_addr;
      var $heap=(($1+2908)|0);
      var $arrayidx=(($heap+($0<<2))|0);
      var $2=HEAP32[(($arrayidx)>>2)];
      $v=$2;
      var $3=$k_addr;
      var $shl=$3 << 1;
      $j=$shl;
      __label__ = 1; break;
    case 1: // $while_cond
      var $4=$j;
      var $5=$s_addr;
      var $heap_len=(($5+5200)|0);
      var $6=HEAP32[(($heap_len)>>2)];
      var $cmp=(($4)|0) <= (($6)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 12; break; }
    case 2: // $while_body
      var $7=$j;
      var $8=$s_addr;
      var $heap_len1=(($8+5200)|0);
      var $9=HEAP32[(($heap_len1)>>2)];
      var $cmp2=(($7)|0) < (($9)|0);
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 7; break; }
    case 3: // $land_lhs_true
      var $10=$j;
      var $add=(($10+1)|0);
      var $11=$s_addr;
      var $heap3=(($11+2908)|0);
      var $arrayidx4=(($heap3+($add<<2))|0);
      var $12=HEAP32[(($arrayidx4)>>2)];
      var $13=$tree_addr;
      var $arrayidx5=(($13+($12<<2))|0);
      var $fc=(($arrayidx5)|0);
      var $freq=$fc;
      var $14=HEAPU16[(($freq)>>1)];
      var $conv=(($14)&65535);
      var $15=$j;
      var $16=$s_addr;
      var $heap6=(($16+2908)|0);
      var $arrayidx7=(($heap6+($15<<2))|0);
      var $17=HEAP32[(($arrayidx7)>>2)];
      var $18=$tree_addr;
      var $arrayidx8=(($18+($17<<2))|0);
      var $fc9=(($arrayidx8)|0);
      var $freq10=$fc9;
      var $19=HEAPU16[(($freq10)>>1)];
      var $conv11=(($19)&65535);
      var $cmp12=(($conv)|0) < (($conv11)|0);
      if ($cmp12) { __label__ = 6; break; } else { __label__ = 4; break; }
    case 4: // $lor_lhs_false
      var $20=$j;
      var $add14=(($20+1)|0);
      var $21=$s_addr;
      var $heap15=(($21+2908)|0);
      var $arrayidx16=(($heap15+($add14<<2))|0);
      var $22=HEAP32[(($arrayidx16)>>2)];
      var $23=$tree_addr;
      var $arrayidx17=(($23+($22<<2))|0);
      var $fc18=(($arrayidx17)|0);
      var $freq19=$fc18;
      var $24=HEAPU16[(($freq19)>>1)];
      var $conv20=(($24)&65535);
      var $25=$j;
      var $26=$s_addr;
      var $heap21=(($26+2908)|0);
      var $arrayidx22=(($heap21+($25<<2))|0);
      var $27=HEAP32[(($arrayidx22)>>2)];
      var $28=$tree_addr;
      var $arrayidx23=(($28+($27<<2))|0);
      var $fc24=(($arrayidx23)|0);
      var $freq25=$fc24;
      var $29=HEAPU16[(($freq25)>>1)];
      var $conv26=(($29)&65535);
      var $cmp27=(($conv20)|0)==(($conv26)|0);
      if ($cmp27) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: // $land_lhs_true29
      var $30=$j;
      var $add30=(($30+1)|0);
      var $31=$s_addr;
      var $heap31=(($31+2908)|0);
      var $arrayidx32=(($heap31+($add30<<2))|0);
      var $32=HEAP32[(($arrayidx32)>>2)];
      var $33=$s_addr;
      var $depth=(($33+5208)|0);
      var $arrayidx33=(($depth+$32)|0);
      var $34=HEAPU8[($arrayidx33)];
      var $conv34=(($34)&255);
      var $35=$j;
      var $36=$s_addr;
      var $heap35=(($36+2908)|0);
      var $arrayidx36=(($heap35+($35<<2))|0);
      var $37=HEAP32[(($arrayidx36)>>2)];
      var $38=$s_addr;
      var $depth37=(($38+5208)|0);
      var $arrayidx38=(($depth37+$37)|0);
      var $39=HEAPU8[($arrayidx38)];
      var $conv39=(($39)&255);
      var $cmp40=(($conv34)|0) <= (($conv39)|0);
      if ($cmp40) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then
      var $40=$j;
      var $inc=(($40+1)|0);
      $j=$inc;
      __label__ = 7; break;
    case 7: // $if_end
      var $41=$v;
      var $42=$tree_addr;
      var $arrayidx42=(($42+($41<<2))|0);
      var $fc43=(($arrayidx42)|0);
      var $freq44=$fc43;
      var $43=HEAPU16[(($freq44)>>1)];
      var $conv45=(($43)&65535);
      var $44=$j;
      var $45=$s_addr;
      var $heap46=(($45+2908)|0);
      var $arrayidx47=(($heap46+($44<<2))|0);
      var $46=HEAP32[(($arrayidx47)>>2)];
      var $47=$tree_addr;
      var $arrayidx48=(($47+($46<<2))|0);
      var $fc49=(($arrayidx48)|0);
      var $freq50=$fc49;
      var $48=HEAPU16[(($freq50)>>1)];
      var $conv51=(($48)&65535);
      var $cmp52=(($conv45)|0) < (($conv51)|0);
      if ($cmp52) { __label__ = 10; break; } else { __label__ = 8; break; }
    case 8: // $lor_lhs_false54
      var $49=$v;
      var $50=$tree_addr;
      var $arrayidx55=(($50+($49<<2))|0);
      var $fc56=(($arrayidx55)|0);
      var $freq57=$fc56;
      var $51=HEAPU16[(($freq57)>>1)];
      var $conv58=(($51)&65535);
      var $52=$j;
      var $53=$s_addr;
      var $heap59=(($53+2908)|0);
      var $arrayidx60=(($heap59+($52<<2))|0);
      var $54=HEAP32[(($arrayidx60)>>2)];
      var $55=$tree_addr;
      var $arrayidx61=(($55+($54<<2))|0);
      var $fc62=(($arrayidx61)|0);
      var $freq63=$fc62;
      var $56=HEAPU16[(($freq63)>>1)];
      var $conv64=(($56)&65535);
      var $cmp65=(($conv58)|0)==(($conv64)|0);
      if ($cmp65) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 9: // $land_lhs_true67
      var $57=$v;
      var $58=$s_addr;
      var $depth68=(($58+5208)|0);
      var $arrayidx69=(($depth68+$57)|0);
      var $59=HEAPU8[($arrayidx69)];
      var $conv70=(($59)&255);
      var $60=$j;
      var $61=$s_addr;
      var $heap71=(($61+2908)|0);
      var $arrayidx72=(($heap71+($60<<2))|0);
      var $62=HEAP32[(($arrayidx72)>>2)];
      var $63=$s_addr;
      var $depth73=(($63+5208)|0);
      var $arrayidx74=(($depth73+$62)|0);
      var $64=HEAPU8[($arrayidx74)];
      var $conv75=(($64)&255);
      var $cmp76=(($conv70)|0) <= (($conv75)|0);
      if ($cmp76) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then78
      __label__ = 12; break;
    case 11: // $if_end79
      var $65=$j;
      var $66=$s_addr;
      var $heap80=(($66+2908)|0);
      var $arrayidx81=(($heap80+($65<<2))|0);
      var $67=HEAP32[(($arrayidx81)>>2)];
      var $68=$k_addr;
      var $69=$s_addr;
      var $heap82=(($69+2908)|0);
      var $arrayidx83=(($heap82+($68<<2))|0);
      HEAP32[(($arrayidx83)>>2)]=$67;
      var $70=$j;
      $k_addr=$70;
      var $71=$j;
      var $shl84=$71 << 1;
      $j=$shl84;
      __label__ = 1; break;
    case 12: // $while_end
      var $72=$v;
      var $73=$k_addr;
      var $74=$s_addr;
      var $heap85=(($74+2908)|0);
      var $arrayidx86=(($heap85+($73<<2))|0);
      HEAP32[(($arrayidx86)>>2)]=$72;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_pqdownheap["X"]=1;

function _gen_bitlen($s, $desc) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $s_addr;
      var $desc_addr;
      var $tree;
      var $max_code;
      var $stree;
      var $extra;
      var $base;
      var $max_length;
      var $h;
      var $n;
      var $m;
      var $bits;
      var $xbits;
      var $f;
      var $overflow;
      $s_addr=$s;
      $desc_addr=$desc;
      var $0=$desc_addr;
      var $dyn_tree=(($0)|0);
      var $1=HEAP32[(($dyn_tree)>>2)];
      $tree=$1;
      var $2=$desc_addr;
      var $max_code1=(($2+4)|0);
      var $3=HEAP32[(($max_code1)>>2)];
      $max_code=$3;
      var $4=$desc_addr;
      var $stat_desc=(($4+8)|0);
      var $5=HEAP32[(($stat_desc)>>2)];
      var $static_tree=(($5)|0);
      var $6=HEAP32[(($static_tree)>>2)];
      $stree=$6;
      var $7=$desc_addr;
      var $stat_desc2=(($7+8)|0);
      var $8=HEAP32[(($stat_desc2)>>2)];
      var $extra_bits=(($8+4)|0);
      var $9=HEAP32[(($extra_bits)>>2)];
      $extra=$9;
      var $10=$desc_addr;
      var $stat_desc3=(($10+8)|0);
      var $11=HEAP32[(($stat_desc3)>>2)];
      var $extra_base=(($11+8)|0);
      var $12=HEAP32[(($extra_base)>>2)];
      $base=$12;
      var $13=$desc_addr;
      var $stat_desc4=(($13+8)|0);
      var $14=HEAP32[(($stat_desc4)>>2)];
      var $max_length5=(($14+16)|0);
      var $15=HEAP32[(($max_length5)>>2)];
      $max_length=$15;
      $overflow=0;
      $bits=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $16=$bits;
      var $cmp=(($16)|0) <= 15;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $17=$bits;
      var $18=$s_addr;
      var $bl_count=(($18+2876)|0);
      var $arrayidx=(($bl_count+($17<<1))|0);
      HEAP16[(($arrayidx)>>1)]=0;
      __label__ = 3; break;
    case 3: // $for_inc
      var $19=$bits;
      var $inc=(($19+1)|0);
      $bits=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $20=$s_addr;
      var $heap_max=(($20+5204)|0);
      var $21=HEAP32[(($heap_max)>>2)];
      var $22=$s_addr;
      var $heap=(($22+2908)|0);
      var $arrayidx6=(($heap+($21<<2))|0);
      var $23=HEAP32[(($arrayidx6)>>2)];
      var $24=$tree;
      var $arrayidx7=(($24+($23<<2))|0);
      var $dl=(($arrayidx7+2)|0);
      var $len=$dl;
      HEAP16[(($len)>>1)]=0;
      var $25=$s_addr;
      var $heap_max8=(($25+5204)|0);
      var $26=HEAP32[(($heap_max8)>>2)];
      var $add=(($26+1)|0);
      $h=$add;
      __label__ = 5; break;
    case 5: // $for_cond9
      var $27=$h;
      var $cmp10=(($27)|0) < 573;
      if ($cmp10) { __label__ = 6; break; } else { __label__ = 16; break; }
    case 6: // $for_body11
      var $28=$h;
      var $29=$s_addr;
      var $heap12=(($29+2908)|0);
      var $arrayidx13=(($heap12+($28<<2))|0);
      var $30=HEAP32[(($arrayidx13)>>2)];
      $n=$30;
      var $31=$n;
      var $32=$tree;
      var $arrayidx14=(($32+($31<<2))|0);
      var $dl15=(($arrayidx14+2)|0);
      var $dad=$dl15;
      var $33=HEAPU16[(($dad)>>1)];
      var $idxprom=(($33)&65535);
      var $34=$tree;
      var $arrayidx16=(($34+($idxprom<<2))|0);
      var $dl17=(($arrayidx16+2)|0);
      var $len18=$dl17;
      var $35=HEAPU16[(($len18)>>1)];
      var $conv=(($35)&65535);
      var $add19=(($conv+1)|0);
      $bits=$add19;
      var $36=$bits;
      var $37=$max_length;
      var $cmp20=(($36)|0) > (($37)|0);
      if ($cmp20) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      var $38=$max_length;
      $bits=$38;
      var $39=$overflow;
      var $inc22=(($39+1)|0);
      $overflow=$inc22;
      __label__ = 8; break;
    case 8: // $if_end
      var $40=$bits;
      var $conv23=(($40) & 65535);
      var $41=$n;
      var $42=$tree;
      var $arrayidx24=(($42+($41<<2))|0);
      var $dl25=(($arrayidx24+2)|0);
      var $len26=$dl25;
      HEAP16[(($len26)>>1)]=$conv23;
      var $43=$n;
      var $44=$max_code;
      var $cmp27=(($43)|0) > (($44)|0);
      if ($cmp27) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then29
      __label__ = 15; break;
    case 10: // $if_end30
      var $45=$bits;
      var $46=$s_addr;
      var $bl_count31=(($46+2876)|0);
      var $arrayidx32=(($bl_count31+($45<<1))|0);
      var $47=HEAP16[(($arrayidx32)>>1)];
      var $inc33=(($47+1)&65535);
      HEAP16[(($arrayidx32)>>1)]=$inc33;
      $xbits=0;
      var $48=$n;
      var $49=$base;
      var $cmp34=(($48)|0) >= (($49)|0);
      if ($cmp34) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then36
      var $50=$n;
      var $51=$base;
      var $sub=(($50-$51)|0);
      var $52=$extra;
      var $arrayidx37=(($52+($sub<<2))|0);
      var $53=HEAP32[(($arrayidx37)>>2)];
      $xbits=$53;
      __label__ = 12; break;
    case 12: // $if_end38
      var $54=$n;
      var $55=$tree;
      var $arrayidx39=(($55+($54<<2))|0);
      var $fc=(($arrayidx39)|0);
      var $freq=$fc;
      var $56=HEAP16[(($freq)>>1)];
      $f=$56;
      var $57=$f;
      var $conv40=(($57)&65535);
      var $58=$bits;
      var $59=$xbits;
      var $add41=(($58+$59)|0);
      var $mul=(($conv40*$add41)|0);
      var $60=$s_addr;
      var $opt_len=(($60+5800)|0);
      var $61=HEAP32[(($opt_len)>>2)];
      var $add42=(($61+$mul)|0);
      HEAP32[(($opt_len)>>2)]=$add42;
      var $62=$stree;
      var $tobool=(($62)|0)!=0;
      if ($tobool) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then43
      var $63=$f;
      var $conv44=(($63)&65535);
      var $64=$n;
      var $65=$stree;
      var $arrayidx45=(($65+($64<<2))|0);
      var $dl46=(($arrayidx45+2)|0);
      var $len47=$dl46;
      var $66=HEAPU16[(($len47)>>1)];
      var $conv48=(($66)&65535);
      var $67=$xbits;
      var $add49=(($conv48+$67)|0);
      var $mul50=(($conv44*$add49)|0);
      var $68=$s_addr;
      var $static_len=(($68+5804)|0);
      var $69=HEAP32[(($static_len)>>2)];
      var $add51=(($69+$mul50)|0);
      HEAP32[(($static_len)>>2)]=$add51;
      __label__ = 14; break;
    case 14: // $if_end52
      __label__ = 15; break;
    case 15: // $for_inc53
      var $70=$h;
      var $inc54=(($70+1)|0);
      $h=$inc54;
      __label__ = 5; break;
    case 16: // $for_end55
      var $71=$overflow;
      var $cmp56=(($71)|0)==0;
      if ($cmp56) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then58
      __label__ = 35; break;
    case 18: // $if_end59
      __label__ = 19; break;
    case 19: // $do_body
      var $72=$max_length;
      var $sub60=(($72-1)|0);
      $bits=$sub60;
      __label__ = 20; break;
    case 20: // $while_cond
      var $73=$bits;
      var $74=$s_addr;
      var $bl_count61=(($74+2876)|0);
      var $arrayidx62=(($bl_count61+($73<<1))|0);
      var $75=HEAPU16[(($arrayidx62)>>1)];
      var $conv63=(($75)&65535);
      var $cmp64=(($conv63)|0)==0;
      if ($cmp64) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: // $while_body
      var $76=$bits;
      var $dec=(($76-1)|0);
      $bits=$dec;
      __label__ = 20; break;
    case 22: // $while_end
      var $77=$bits;
      var $78=$s_addr;
      var $bl_count66=(($78+2876)|0);
      var $arrayidx67=(($bl_count66+($77<<1))|0);
      var $79=HEAP16[(($arrayidx67)>>1)];
      var $dec68=(($79-1)&65535);
      HEAP16[(($arrayidx67)>>1)]=$dec68;
      var $80=$bits;
      var $add69=(($80+1)|0);
      var $81=$s_addr;
      var $bl_count70=(($81+2876)|0);
      var $arrayidx71=(($bl_count70+($add69<<1))|0);
      var $82=HEAPU16[(($arrayidx71)>>1)];
      var $conv72=(($82)&65535);
      var $add73=(($conv72+2)|0);
      var $conv74=(($add73) & 65535);
      HEAP16[(($arrayidx71)>>1)]=$conv74;
      var $83=$max_length;
      var $84=$s_addr;
      var $bl_count75=(($84+2876)|0);
      var $arrayidx76=(($bl_count75+($83<<1))|0);
      var $85=HEAP16[(($arrayidx76)>>1)];
      var $dec77=(($85-1)&65535);
      HEAP16[(($arrayidx76)>>1)]=$dec77;
      var $86=$overflow;
      var $sub78=(($86-2)|0);
      $overflow=$sub78;
      __label__ = 23; break;
    case 23: // $do_cond
      var $87=$overflow;
      var $cmp79=(($87)|0) > 0;
      if ($cmp79) { __label__ = 19; break; } else { __label__ = 24; break; }
    case 24: // $do_end
      var $88=$max_length;
      $bits=$88;
      __label__ = 25; break;
    case 25: // $for_cond81
      var $89=$bits;
      var $cmp82=(($89)|0)!=0;
      if ($cmp82) { __label__ = 26; break; } else { __label__ = 35; break; }
    case 26: // $for_body84
      var $90=$bits;
      var $91=$s_addr;
      var $bl_count85=(($91+2876)|0);
      var $arrayidx86=(($bl_count85+($90<<1))|0);
      var $92=HEAPU16[(($arrayidx86)>>1)];
      var $conv87=(($92)&65535);
      $n=$conv87;
      __label__ = 27; break;
    case 27: // $while_cond88
      var $93=$n;
      var $cmp89=(($93)|0)!=0;
      if ($cmp89) { __label__ = 28; break; } else { __label__ = 33; break; }
    case 28: // $while_body91
      var $94=$h;
      var $dec92=(($94-1)|0);
      $h=$dec92;
      var $95=$s_addr;
      var $heap93=(($95+2908)|0);
      var $arrayidx94=(($heap93+($dec92<<2))|0);
      var $96=HEAP32[(($arrayidx94)>>2)];
      $m=$96;
      var $97=$m;
      var $98=$max_code;
      var $cmp95=(($97)|0) > (($98)|0);
      if ($cmp95) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: // $if_then97
      __label__ = 27; break;
    case 30: // $if_end98
      var $99=$m;
      var $100=$tree;
      var $arrayidx99=(($100+($99<<2))|0);
      var $dl100=(($arrayidx99+2)|0);
      var $len101=$dl100;
      var $101=HEAPU16[(($len101)>>1)];
      var $conv102=(($101)&65535);
      var $102=$bits;
      var $cmp103=(($conv102)|0)!=(($102)|0);
      if ($cmp103) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $if_then105
      var $103=$bits;
      var $104=$m;
      var $105=$tree;
      var $arrayidx106=(($105+($104<<2))|0);
      var $dl107=(($arrayidx106+2)|0);
      var $len108=$dl107;
      var $106=HEAPU16[(($len108)>>1)];
      var $conv109=(($106)&65535);
      var $sub110=(($103-$conv109)|0);
      var $107=$m;
      var $108=$tree;
      var $arrayidx111=(($108+($107<<2))|0);
      var $fc112=(($arrayidx111)|0);
      var $freq113=$fc112;
      var $109=HEAPU16[(($freq113)>>1)];
      var $conv114=(($109)&65535);
      var $mul115=(($sub110*$conv114)|0);
      var $110=$s_addr;
      var $opt_len116=(($110+5800)|0);
      var $111=HEAP32[(($opt_len116)>>2)];
      var $add117=(($111+$mul115)|0);
      HEAP32[(($opt_len116)>>2)]=$add117;
      var $112=$bits;
      var $conv118=(($112) & 65535);
      var $113=$m;
      var $114=$tree;
      var $arrayidx119=(($114+($113<<2))|0);
      var $dl120=(($arrayidx119+2)|0);
      var $len121=$dl120;
      HEAP16[(($len121)>>1)]=$conv118;
      __label__ = 32; break;
    case 32: // $if_end122
      var $115=$n;
      var $dec123=(($115-1)|0);
      $n=$dec123;
      __label__ = 27; break;
    case 33: // $while_end124
      __label__ = 34; break;
    case 34: // $for_inc125
      var $116=$bits;
      var $dec126=(($116-1)|0);
      $bits=$dec126;
      __label__ = 25; break;
    case 35: // $for_end127
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_gen_bitlen["X"]=1;

function _gen_codes($tree, $max_code, $bl_count) {
  var __stackBase__  = STACKTOP; STACKTOP += 32; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $tree_addr;
      var $max_code_addr;
      var $bl_count_addr;
      var $next_code=__stackBase__;
      var $code;
      var $bits;
      var $n;
      var $len;
      $tree_addr=$tree;
      $max_code_addr=$max_code;
      $bl_count_addr=$bl_count;
      $code=0;
      $bits=1;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$bits;
      var $cmp=(($0)|0) <= 15;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $1=$code;
      var $conv=(($1)&65535);
      var $2=$bits;
      var $sub=(($2-1)|0);
      var $3=$bl_count_addr;
      var $arrayidx=(($3+($sub<<1))|0);
      var $4=HEAPU16[(($arrayidx)>>1)];
      var $conv1=(($4)&65535);
      var $add=(($conv+$conv1)|0);
      var $shl=$add << 1;
      var $conv2=(($shl) & 65535);
      $code=$conv2;
      var $5=$bits;
      var $arrayidx3=(($next_code+($5<<1))|0);
      HEAP16[(($arrayidx3)>>1)]=$conv2;
      __label__ = 3; break;
    case 3: // $for_inc
      var $6=$bits;
      var $inc=(($6+1)|0);
      $bits=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $n=0;
      __label__ = 5; break;
    case 5: // $for_cond4
      var $7=$n;
      var $8=$max_code_addr;
      var $cmp5=(($7)|0) <= (($8)|0);
      if ($cmp5) { __label__ = 6; break; } else { __label__ = 10; break; }
    case 6: // $for_body7
      var $9=$n;
      var $10=$tree_addr;
      var $arrayidx8=(($10+($9<<2))|0);
      var $dl=(($arrayidx8+2)|0);
      var $len9=$dl;
      var $11=HEAPU16[(($len9)>>1)];
      var $conv10=(($11)&65535);
      $len=$conv10;
      var $12=$len;
      var $cmp11=(($12)|0)==0;
      if ($cmp11) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      __label__ = 9; break;
    case 8: // $if_end
      var $13=$len;
      var $arrayidx13=(($next_code+($13<<1))|0);
      var $14=HEAPU16[(($arrayidx13)>>1)];
      var $inc14=(($14+1)&65535);
      HEAP16[(($arrayidx13)>>1)]=$inc14;
      var $conv15=(($14)&65535);
      var $15=$len;
      var $call=_bi_reverse($conv15, $15);
      var $conv16=(($call) & 65535);
      var $16=$n;
      var $17=$tree_addr;
      var $arrayidx17=(($17+($16<<2))|0);
      var $fc=(($arrayidx17)|0);
      var $code18=$fc;
      HEAP16[(($code18)>>1)]=$conv16;
      __label__ = 9; break;
    case 9: // $for_inc19
      var $18=$n;
      var $inc20=(($18+1)|0);
      $n=$inc20;
      __label__ = 5; break;
    case 10: // $for_end21
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_gen_codes["X"]=1;

function _adler32($adler, $buf, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $adler_addr;
      var $buf_addr;
      var $len_addr;
      var $sum2;
      var $n;
      $adler_addr=$adler;
      $buf_addr=$buf;
      $len_addr=$len;
      var $0=$adler_addr;
      var $shr=$0 >>> 16;
      var $and=$shr & 65535;
      $sum2=$and;
      var $1=$adler_addr;
      var $and1=$1 & 65535;
      $adler_addr=$and1;
      var $2=$len_addr;
      var $cmp=(($2)|0)==1;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 6; break; }
    case 1: // $if_then
      var $3=$buf_addr;
      var $arrayidx=(($3)|0);
      var $4=HEAPU8[($arrayidx)];
      var $conv=(($4)&255);
      var $5=$adler_addr;
      var $add=(($5+$conv)|0);
      $adler_addr=$add;
      var $6=$adler_addr;
      var $cmp2=(($6)>>>0) >= 65521;
      if ($cmp2) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then4
      var $7=$adler_addr;
      var $sub=(($7-65521)|0);
      $adler_addr=$sub;
      __label__ = 3; break;
    case 3: // $if_end
      var $8=$adler_addr;
      var $9=$sum2;
      var $add5=(($9+$8)|0);
      $sum2=$add5;
      var $10=$sum2;
      var $cmp6=(($10)>>>0) >= 65521;
      if ($cmp6) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then8
      var $11=$sum2;
      var $sub9=(($11-65521)|0);
      $sum2=$sub9;
      __label__ = 5; break;
    case 5: // $if_end10
      var $12=$adler_addr;
      var $13=$sum2;
      var $shl=$13 << 16;
      var $or=$12 | $shl;
      $retval=$or;
      __label__ = 30; break;
    case 6: // $if_end11
      var $14=$buf_addr;
      var $cmp12=(($14)|0)==0;
      if ($cmp12) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then14
      $retval=1;
      __label__ = 30; break;
    case 8: // $if_end15
      var $15=$len_addr;
      var $cmp16=(($15)>>>0) < 16;
      if ($cmp16) { __label__ = 9; break; } else { __label__ = 15; break; }
    case 9: // $if_then18
      __label__ = 10; break;
    case 10: // $while_cond
      var $16=$len_addr;
      var $dec=(($16-1)|0);
      $len_addr=$dec;
      var $tobool=(($16)|0)!=0;
      if ($tobool) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $while_body
      var $17=$buf_addr;
      var $incdec_ptr=(($17+1)|0);
      $buf_addr=$incdec_ptr;
      var $18=HEAPU8[($17)];
      var $conv19=(($18)&255);
      var $19=$adler_addr;
      var $add20=(($19+$conv19)|0);
      $adler_addr=$add20;
      var $20=$adler_addr;
      var $21=$sum2;
      var $add21=(($21+$20)|0);
      $sum2=$add21;
      __label__ = 10; break;
    case 12: // $while_end
      var $22=$adler_addr;
      var $cmp22=(($22)>>>0) >= 65521;
      if ($cmp22) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then24
      var $23=$adler_addr;
      var $sub25=(($23-65521)|0);
      $adler_addr=$sub25;
      __label__ = 14; break;
    case 14: // $if_end26
      var $24=$sum2;
      var $rem=(($24)>>>0)%65521;
      $sum2=$rem;
      var $25=$adler_addr;
      var $26=$sum2;
      var $shl27=$26 << 16;
      var $or28=$25 | $shl27;
      $retval=$or28;
      __label__ = 30; break;
    case 15: // $if_end29
      __label__ = 16; break;
    case 16: // $while_cond30
      var $27=$len_addr;
      var $cmp31=(($27)>>>0) >= 5552;
      if ($cmp31) { __label__ = 17; break; } else { __label__ = 21; break; }
    case 17: // $while_body33
      var $28=$len_addr;
      var $sub34=(($28-5552)|0);
      $len_addr=$sub34;
      $n=347;
      __label__ = 18; break;
    case 18: // $do_body
      var $29=$buf_addr;
      var $arrayidx35=(($29)|0);
      var $30=HEAPU8[($arrayidx35)];
      var $conv36=(($30)&255);
      var $31=$adler_addr;
      var $add37=(($31+$conv36)|0);
      $adler_addr=$add37;
      var $32=$adler_addr;
      var $33=$sum2;
      var $add38=(($33+$32)|0);
      $sum2=$add38;
      var $34=$buf_addr;
      var $arrayidx39=(($34+1)|0);
      var $35=HEAPU8[($arrayidx39)];
      var $conv40=(($35)&255);
      var $36=$adler_addr;
      var $add41=(($36+$conv40)|0);
      $adler_addr=$add41;
      var $37=$adler_addr;
      var $38=$sum2;
      var $add42=(($38+$37)|0);
      $sum2=$add42;
      var $39=$buf_addr;
      var $arrayidx43=(($39+2)|0);
      var $40=HEAPU8[($arrayidx43)];
      var $conv44=(($40)&255);
      var $41=$adler_addr;
      var $add45=(($41+$conv44)|0);
      $adler_addr=$add45;
      var $42=$adler_addr;
      var $43=$sum2;
      var $add46=(($43+$42)|0);
      $sum2=$add46;
      var $44=$buf_addr;
      var $arrayidx47=(($44+3)|0);
      var $45=HEAPU8[($arrayidx47)];
      var $conv48=(($45)&255);
      var $46=$adler_addr;
      var $add49=(($46+$conv48)|0);
      $adler_addr=$add49;
      var $47=$adler_addr;
      var $48=$sum2;
      var $add50=(($48+$47)|0);
      $sum2=$add50;
      var $49=$buf_addr;
      var $arrayidx51=(($49+4)|0);
      var $50=HEAPU8[($arrayidx51)];
      var $conv52=(($50)&255);
      var $51=$adler_addr;
      var $add53=(($51+$conv52)|0);
      $adler_addr=$add53;
      var $52=$adler_addr;
      var $53=$sum2;
      var $add54=(($53+$52)|0);
      $sum2=$add54;
      var $54=$buf_addr;
      var $arrayidx55=(($54+5)|0);
      var $55=HEAPU8[($arrayidx55)];
      var $conv56=(($55)&255);
      var $56=$adler_addr;
      var $add57=(($56+$conv56)|0);
      $adler_addr=$add57;
      var $57=$adler_addr;
      var $58=$sum2;
      var $add58=(($58+$57)|0);
      $sum2=$add58;
      var $59=$buf_addr;
      var $arrayidx59=(($59+6)|0);
      var $60=HEAPU8[($arrayidx59)];
      var $conv60=(($60)&255);
      var $61=$adler_addr;
      var $add61=(($61+$conv60)|0);
      $adler_addr=$add61;
      var $62=$adler_addr;
      var $63=$sum2;
      var $add62=(($63+$62)|0);
      $sum2=$add62;
      var $64=$buf_addr;
      var $arrayidx63=(($64+7)|0);
      var $65=HEAPU8[($arrayidx63)];
      var $conv64=(($65)&255);
      var $66=$adler_addr;
      var $add65=(($66+$conv64)|0);
      $adler_addr=$add65;
      var $67=$adler_addr;
      var $68=$sum2;
      var $add66=(($68+$67)|0);
      $sum2=$add66;
      var $69=$buf_addr;
      var $arrayidx67=(($69+8)|0);
      var $70=HEAPU8[($arrayidx67)];
      var $conv68=(($70)&255);
      var $71=$adler_addr;
      var $add69=(($71+$conv68)|0);
      $adler_addr=$add69;
      var $72=$adler_addr;
      var $73=$sum2;
      var $add70=(($73+$72)|0);
      $sum2=$add70;
      var $74=$buf_addr;
      var $arrayidx71=(($74+9)|0);
      var $75=HEAPU8[($arrayidx71)];
      var $conv72=(($75)&255);
      var $76=$adler_addr;
      var $add73=(($76+$conv72)|0);
      $adler_addr=$add73;
      var $77=$adler_addr;
      var $78=$sum2;
      var $add74=(($78+$77)|0);
      $sum2=$add74;
      var $79=$buf_addr;
      var $arrayidx75=(($79+10)|0);
      var $80=HEAPU8[($arrayidx75)];
      var $conv76=(($80)&255);
      var $81=$adler_addr;
      var $add77=(($81+$conv76)|0);
      $adler_addr=$add77;
      var $82=$adler_addr;
      var $83=$sum2;
      var $add78=(($83+$82)|0);
      $sum2=$add78;
      var $84=$buf_addr;
      var $arrayidx79=(($84+11)|0);
      var $85=HEAPU8[($arrayidx79)];
      var $conv80=(($85)&255);
      var $86=$adler_addr;
      var $add81=(($86+$conv80)|0);
      $adler_addr=$add81;
      var $87=$adler_addr;
      var $88=$sum2;
      var $add82=(($88+$87)|0);
      $sum2=$add82;
      var $89=$buf_addr;
      var $arrayidx83=(($89+12)|0);
      var $90=HEAPU8[($arrayidx83)];
      var $conv84=(($90)&255);
      var $91=$adler_addr;
      var $add85=(($91+$conv84)|0);
      $adler_addr=$add85;
      var $92=$adler_addr;
      var $93=$sum2;
      var $add86=(($93+$92)|0);
      $sum2=$add86;
      var $94=$buf_addr;
      var $arrayidx87=(($94+13)|0);
      var $95=HEAPU8[($arrayidx87)];
      var $conv88=(($95)&255);
      var $96=$adler_addr;
      var $add89=(($96+$conv88)|0);
      $adler_addr=$add89;
      var $97=$adler_addr;
      var $98=$sum2;
      var $add90=(($98+$97)|0);
      $sum2=$add90;
      var $99=$buf_addr;
      var $arrayidx91=(($99+14)|0);
      var $100=HEAPU8[($arrayidx91)];
      var $conv92=(($100)&255);
      var $101=$adler_addr;
      var $add93=(($101+$conv92)|0);
      $adler_addr=$add93;
      var $102=$adler_addr;
      var $103=$sum2;
      var $add94=(($103+$102)|0);
      $sum2=$add94;
      var $104=$buf_addr;
      var $arrayidx95=(($104+15)|0);
      var $105=HEAPU8[($arrayidx95)];
      var $conv96=(($105)&255);
      var $106=$adler_addr;
      var $add97=(($106+$conv96)|0);
      $adler_addr=$add97;
      var $107=$adler_addr;
      var $108=$sum2;
      var $add98=(($108+$107)|0);
      $sum2=$add98;
      var $109=$buf_addr;
      var $add_ptr=(($109+16)|0);
      $buf_addr=$add_ptr;
      __label__ = 19; break;
    case 19: // $do_cond
      var $110=$n;
      var $dec99=(($110-1)|0);
      $n=$dec99;
      var $tobool100=(($dec99)|0)!=0;
      if ($tobool100) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 20: // $do_end
      var $111=$adler_addr;
      var $rem101=(($111)>>>0)%65521;
      $adler_addr=$rem101;
      var $112=$sum2;
      var $rem102=(($112)>>>0)%65521;
      $sum2=$rem102;
      __label__ = 16; break;
    case 21: // $while_end103
      var $113=$len_addr;
      var $tobool104=(($113)|0)!=0;
      if ($tobool104) { __label__ = 22; break; } else { __label__ = 29; break; }
    case 22: // $if_then105
      __label__ = 23; break;
    case 23: // $while_cond106
      var $114=$len_addr;
      var $cmp107=(($114)>>>0) >= 16;
      if ($cmp107) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: // $while_body109
      var $115=$len_addr;
      var $sub110=(($115-16)|0);
      $len_addr=$sub110;
      var $116=$buf_addr;
      var $arrayidx111=(($116)|0);
      var $117=HEAPU8[($arrayidx111)];
      var $conv112=(($117)&255);
      var $118=$adler_addr;
      var $add113=(($118+$conv112)|0);
      $adler_addr=$add113;
      var $119=$adler_addr;
      var $120=$sum2;
      var $add114=(($120+$119)|0);
      $sum2=$add114;
      var $121=$buf_addr;
      var $arrayidx115=(($121+1)|0);
      var $122=HEAPU8[($arrayidx115)];
      var $conv116=(($122)&255);
      var $123=$adler_addr;
      var $add117=(($123+$conv116)|0);
      $adler_addr=$add117;
      var $124=$adler_addr;
      var $125=$sum2;
      var $add118=(($125+$124)|0);
      $sum2=$add118;
      var $126=$buf_addr;
      var $arrayidx119=(($126+2)|0);
      var $127=HEAPU8[($arrayidx119)];
      var $conv120=(($127)&255);
      var $128=$adler_addr;
      var $add121=(($128+$conv120)|0);
      $adler_addr=$add121;
      var $129=$adler_addr;
      var $130=$sum2;
      var $add122=(($130+$129)|0);
      $sum2=$add122;
      var $131=$buf_addr;
      var $arrayidx123=(($131+3)|0);
      var $132=HEAPU8[($arrayidx123)];
      var $conv124=(($132)&255);
      var $133=$adler_addr;
      var $add125=(($133+$conv124)|0);
      $adler_addr=$add125;
      var $134=$adler_addr;
      var $135=$sum2;
      var $add126=(($135+$134)|0);
      $sum2=$add126;
      var $136=$buf_addr;
      var $arrayidx127=(($136+4)|0);
      var $137=HEAPU8[($arrayidx127)];
      var $conv128=(($137)&255);
      var $138=$adler_addr;
      var $add129=(($138+$conv128)|0);
      $adler_addr=$add129;
      var $139=$adler_addr;
      var $140=$sum2;
      var $add130=(($140+$139)|0);
      $sum2=$add130;
      var $141=$buf_addr;
      var $arrayidx131=(($141+5)|0);
      var $142=HEAPU8[($arrayidx131)];
      var $conv132=(($142)&255);
      var $143=$adler_addr;
      var $add133=(($143+$conv132)|0);
      $adler_addr=$add133;
      var $144=$adler_addr;
      var $145=$sum2;
      var $add134=(($145+$144)|0);
      $sum2=$add134;
      var $146=$buf_addr;
      var $arrayidx135=(($146+6)|0);
      var $147=HEAPU8[($arrayidx135)];
      var $conv136=(($147)&255);
      var $148=$adler_addr;
      var $add137=(($148+$conv136)|0);
      $adler_addr=$add137;
      var $149=$adler_addr;
      var $150=$sum2;
      var $add138=(($150+$149)|0);
      $sum2=$add138;
      var $151=$buf_addr;
      var $arrayidx139=(($151+7)|0);
      var $152=HEAPU8[($arrayidx139)];
      var $conv140=(($152)&255);
      var $153=$adler_addr;
      var $add141=(($153+$conv140)|0);
      $adler_addr=$add141;
      var $154=$adler_addr;
      var $155=$sum2;
      var $add142=(($155+$154)|0);
      $sum2=$add142;
      var $156=$buf_addr;
      var $arrayidx143=(($156+8)|0);
      var $157=HEAPU8[($arrayidx143)];
      var $conv144=(($157)&255);
      var $158=$adler_addr;
      var $add145=(($158+$conv144)|0);
      $adler_addr=$add145;
      var $159=$adler_addr;
      var $160=$sum2;
      var $add146=(($160+$159)|0);
      $sum2=$add146;
      var $161=$buf_addr;
      var $arrayidx147=(($161+9)|0);
      var $162=HEAPU8[($arrayidx147)];
      var $conv148=(($162)&255);
      var $163=$adler_addr;
      var $add149=(($163+$conv148)|0);
      $adler_addr=$add149;
      var $164=$adler_addr;
      var $165=$sum2;
      var $add150=(($165+$164)|0);
      $sum2=$add150;
      var $166=$buf_addr;
      var $arrayidx151=(($166+10)|0);
      var $167=HEAPU8[($arrayidx151)];
      var $conv152=(($167)&255);
      var $168=$adler_addr;
      var $add153=(($168+$conv152)|0);
      $adler_addr=$add153;
      var $169=$adler_addr;
      var $170=$sum2;
      var $add154=(($170+$169)|0);
      $sum2=$add154;
      var $171=$buf_addr;
      var $arrayidx155=(($171+11)|0);
      var $172=HEAPU8[($arrayidx155)];
      var $conv156=(($172)&255);
      var $173=$adler_addr;
      var $add157=(($173+$conv156)|0);
      $adler_addr=$add157;
      var $174=$adler_addr;
      var $175=$sum2;
      var $add158=(($175+$174)|0);
      $sum2=$add158;
      var $176=$buf_addr;
      var $arrayidx159=(($176+12)|0);
      var $177=HEAPU8[($arrayidx159)];
      var $conv160=(($177)&255);
      var $178=$adler_addr;
      var $add161=(($178+$conv160)|0);
      $adler_addr=$add161;
      var $179=$adler_addr;
      var $180=$sum2;
      var $add162=(($180+$179)|0);
      $sum2=$add162;
      var $181=$buf_addr;
      var $arrayidx163=(($181+13)|0);
      var $182=HEAPU8[($arrayidx163)];
      var $conv164=(($182)&255);
      var $183=$adler_addr;
      var $add165=(($183+$conv164)|0);
      $adler_addr=$add165;
      var $184=$adler_addr;
      var $185=$sum2;
      var $add166=(($185+$184)|0);
      $sum2=$add166;
      var $186=$buf_addr;
      var $arrayidx167=(($186+14)|0);
      var $187=HEAPU8[($arrayidx167)];
      var $conv168=(($187)&255);
      var $188=$adler_addr;
      var $add169=(($188+$conv168)|0);
      $adler_addr=$add169;
      var $189=$adler_addr;
      var $190=$sum2;
      var $add170=(($190+$189)|0);
      $sum2=$add170;
      var $191=$buf_addr;
      var $arrayidx171=(($191+15)|0);
      var $192=HEAPU8[($arrayidx171)];
      var $conv172=(($192)&255);
      var $193=$adler_addr;
      var $add173=(($193+$conv172)|0);
      $adler_addr=$add173;
      var $194=$adler_addr;
      var $195=$sum2;
      var $add174=(($195+$194)|0);
      $sum2=$add174;
      var $196=$buf_addr;
      var $add_ptr175=(($196+16)|0);
      $buf_addr=$add_ptr175;
      __label__ = 23; break;
    case 25: // $while_end176
      __label__ = 26; break;
    case 26: // $while_cond177
      var $197=$len_addr;
      var $dec178=(($197-1)|0);
      $len_addr=$dec178;
      var $tobool179=(($197)|0)!=0;
      if ($tobool179) { __label__ = 27; break; } else { __label__ = 28; break; }
    case 27: // $while_body180
      var $198=$buf_addr;
      var $incdec_ptr181=(($198+1)|0);
      $buf_addr=$incdec_ptr181;
      var $199=HEAPU8[($198)];
      var $conv182=(($199)&255);
      var $200=$adler_addr;
      var $add183=(($200+$conv182)|0);
      $adler_addr=$add183;
      var $201=$adler_addr;
      var $202=$sum2;
      var $add184=(($202+$201)|0);
      $sum2=$add184;
      __label__ = 26; break;
    case 28: // $while_end185
      var $203=$adler_addr;
      var $rem186=(($203)>>>0)%65521;
      $adler_addr=$rem186;
      var $204=$sum2;
      var $rem187=(($204)>>>0)%65521;
      $sum2=$rem187;
      __label__ = 29; break;
    case 29: // $if_end188
      var $205=$adler_addr;
      var $206=$sum2;
      var $shl189=$206 << 16;
      var $or190=$205 | $shl189;
      $retval=$or190;
      __label__ = 30; break;
    case 30: // $return
      var $207=$retval;
      ;
      return $207;
    default: assert(0, "bad label: " + __label__);
  }
}
_adler32["X"]=1;

function _crc32($crc, $buf, $len) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $crc_addr;
      var $buf_addr;
      var $len_addr;
      var $endian=__stackBase__;
      $crc_addr=$crc;
      $buf_addr=$buf;
      $len_addr=$len;
      var $0=$buf_addr;
      var $cmp=(($0)|0)==0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $retval=0;
      __label__ = 5; break;
    case 2: // $if_end
      HEAP32[(($endian)>>2)]=1;
      var $1=$endian;
      var $2=HEAP8[($1)];
      var $tobool=(($2 << 24) >> 24)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then1
      var $3=$crc_addr;
      var $4=$buf_addr;
      var $5=$len_addr;
      var $call=_crc32_little($3, $4, $5);
      $retval=$call;
      __label__ = 5; break;
    case 4: // $if_else
      var $6=$crc_addr;
      var $7=$buf_addr;
      var $8=$len_addr;
      var $call2=_crc32_big($6, $7, $8);
      $retval=$call2;
      __label__ = 5; break;
    case 5: // $return
      var $9=$retval;
      STACKTOP = __stackBase__;
      return $9;
    default: assert(0, "bad label: " + __label__);
  }
}


function _crc32_little($crc, $buf, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $crc_addr;
      var $buf_addr;
      var $len_addr;
      var $c;
      var $buf4;
      $crc_addr=$crc;
      $buf_addr=$buf;
      $len_addr=$len;
      var $0=$crc_addr;
      $c=$0;
      var $1=$c;
      var $neg=$1 ^ -1;
      $c=$neg;
      __label__ = 1; break;
    case 1: // $while_cond
      var $2=$len_addr;
      var $tobool=(($2)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { var $5 = 0;__label__ = 3; break; }
    case 2: // $land_rhs
      var $3=$buf_addr;
      var $4=$3;
      var $and=$4 & 3;
      var $tobool1=(($and)|0)!=0;
      var $5 = $tobool1;__label__ = 3; break;
    case 3: // $land_end
      var $5;
      if ($5) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $while_body
      var $6=$c;
      var $7=$buf_addr;
      var $incdec_ptr=(($7+1)|0);
      $buf_addr=$incdec_ptr;
      var $8=HEAPU8[($7)];
      var $conv=(($8)&255);
      var $xor=$6 ^ $conv;
      var $and2=$xor & 255;
      var $arrayidx=((((_crc_table)|0)+($and2<<2))|0);
      var $9=HEAP32[(($arrayidx)>>2)];
      var $10=$c;
      var $shr=$10 >>> 8;
      var $xor3=$9 ^ $shr;
      $c=$xor3;
      var $11=$len_addr;
      var $dec=(($11-1)|0);
      $len_addr=$dec;
      __label__ = 1; break;
    case 5: // $while_end
      var $12=$buf_addr;
      var $13=$12;
      $buf4=$13;
      __label__ = 6; break;
    case 6: // $while_cond4
      var $14=$len_addr;
      var $cmp=(($14)>>>0) >= 32;
      if ($cmp) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $while_body6
      var $15=$buf4;
      var $incdec_ptr7=(($15+4)|0);
      $buf4=$incdec_ptr7;
      var $16=HEAP32[(($15)>>2)];
      var $17=$c;
      var $xor8=$17 ^ $16;
      $c=$xor8;
      var $18=$c;
      var $and9=$18 & 255;
      var $arrayidx10=((((_crc_table+3072)|0)+($and9<<2))|0);
      var $19=HEAP32[(($arrayidx10)>>2)];
      var $20=$c;
      var $shr11=$20 >>> 8;
      var $and12=$shr11 & 255;
      var $arrayidx13=((((_crc_table+2048)|0)+($and12<<2))|0);
      var $21=HEAP32[(($arrayidx13)>>2)];
      var $xor14=$19 ^ $21;
      var $22=$c;
      var $shr15=$22 >>> 16;
      var $and16=$shr15 & 255;
      var $arrayidx17=((((_crc_table+1024)|0)+($and16<<2))|0);
      var $23=HEAP32[(($arrayidx17)>>2)];
      var $xor18=$xor14 ^ $23;
      var $24=$c;
      var $shr19=$24 >>> 24;
      var $arrayidx20=((((_crc_table)|0)+($shr19<<2))|0);
      var $25=HEAP32[(($arrayidx20)>>2)];
      var $xor21=$xor18 ^ $25;
      $c=$xor21;
      var $26=$buf4;
      var $incdec_ptr22=(($26+4)|0);
      $buf4=$incdec_ptr22;
      var $27=HEAP32[(($26)>>2)];
      var $28=$c;
      var $xor23=$28 ^ $27;
      $c=$xor23;
      var $29=$c;
      var $and24=$29 & 255;
      var $arrayidx25=((((_crc_table+3072)|0)+($and24<<2))|0);
      var $30=HEAP32[(($arrayidx25)>>2)];
      var $31=$c;
      var $shr26=$31 >>> 8;
      var $and27=$shr26 & 255;
      var $arrayidx28=((((_crc_table+2048)|0)+($and27<<2))|0);
      var $32=HEAP32[(($arrayidx28)>>2)];
      var $xor29=$30 ^ $32;
      var $33=$c;
      var $shr30=$33 >>> 16;
      var $and31=$shr30 & 255;
      var $arrayidx32=((((_crc_table+1024)|0)+($and31<<2))|0);
      var $34=HEAP32[(($arrayidx32)>>2)];
      var $xor33=$xor29 ^ $34;
      var $35=$c;
      var $shr34=$35 >>> 24;
      var $arrayidx35=((((_crc_table)|0)+($shr34<<2))|0);
      var $36=HEAP32[(($arrayidx35)>>2)];
      var $xor36=$xor33 ^ $36;
      $c=$xor36;
      var $37=$buf4;
      var $incdec_ptr37=(($37+4)|0);
      $buf4=$incdec_ptr37;
      var $38=HEAP32[(($37)>>2)];
      var $39=$c;
      var $xor38=$39 ^ $38;
      $c=$xor38;
      var $40=$c;
      var $and39=$40 & 255;
      var $arrayidx40=((((_crc_table+3072)|0)+($and39<<2))|0);
      var $41=HEAP32[(($arrayidx40)>>2)];
      var $42=$c;
      var $shr41=$42 >>> 8;
      var $and42=$shr41 & 255;
      var $arrayidx43=((((_crc_table+2048)|0)+($and42<<2))|0);
      var $43=HEAP32[(($arrayidx43)>>2)];
      var $xor44=$41 ^ $43;
      var $44=$c;
      var $shr45=$44 >>> 16;
      var $and46=$shr45 & 255;
      var $arrayidx47=((((_crc_table+1024)|0)+($and46<<2))|0);
      var $45=HEAP32[(($arrayidx47)>>2)];
      var $xor48=$xor44 ^ $45;
      var $46=$c;
      var $shr49=$46 >>> 24;
      var $arrayidx50=((((_crc_table)|0)+($shr49<<2))|0);
      var $47=HEAP32[(($arrayidx50)>>2)];
      var $xor51=$xor48 ^ $47;
      $c=$xor51;
      var $48=$buf4;
      var $incdec_ptr52=(($48+4)|0);
      $buf4=$incdec_ptr52;
      var $49=HEAP32[(($48)>>2)];
      var $50=$c;
      var $xor53=$50 ^ $49;
      $c=$xor53;
      var $51=$c;
      var $and54=$51 & 255;
      var $arrayidx55=((((_crc_table+3072)|0)+($and54<<2))|0);
      var $52=HEAP32[(($arrayidx55)>>2)];
      var $53=$c;
      var $shr56=$53 >>> 8;
      var $and57=$shr56 & 255;
      var $arrayidx58=((((_crc_table+2048)|0)+($and57<<2))|0);
      var $54=HEAP32[(($arrayidx58)>>2)];
      var $xor59=$52 ^ $54;
      var $55=$c;
      var $shr60=$55 >>> 16;
      var $and61=$shr60 & 255;
      var $arrayidx62=((((_crc_table+1024)|0)+($and61<<2))|0);
      var $56=HEAP32[(($arrayidx62)>>2)];
      var $xor63=$xor59 ^ $56;
      var $57=$c;
      var $shr64=$57 >>> 24;
      var $arrayidx65=((((_crc_table)|0)+($shr64<<2))|0);
      var $58=HEAP32[(($arrayidx65)>>2)];
      var $xor66=$xor63 ^ $58;
      $c=$xor66;
      var $59=$buf4;
      var $incdec_ptr67=(($59+4)|0);
      $buf4=$incdec_ptr67;
      var $60=HEAP32[(($59)>>2)];
      var $61=$c;
      var $xor68=$61 ^ $60;
      $c=$xor68;
      var $62=$c;
      var $and69=$62 & 255;
      var $arrayidx70=((((_crc_table+3072)|0)+($and69<<2))|0);
      var $63=HEAP32[(($arrayidx70)>>2)];
      var $64=$c;
      var $shr71=$64 >>> 8;
      var $and72=$shr71 & 255;
      var $arrayidx73=((((_crc_table+2048)|0)+($and72<<2))|0);
      var $65=HEAP32[(($arrayidx73)>>2)];
      var $xor74=$63 ^ $65;
      var $66=$c;
      var $shr75=$66 >>> 16;
      var $and76=$shr75 & 255;
      var $arrayidx77=((((_crc_table+1024)|0)+($and76<<2))|0);
      var $67=HEAP32[(($arrayidx77)>>2)];
      var $xor78=$xor74 ^ $67;
      var $68=$c;
      var $shr79=$68 >>> 24;
      var $arrayidx80=((((_crc_table)|0)+($shr79<<2))|0);
      var $69=HEAP32[(($arrayidx80)>>2)];
      var $xor81=$xor78 ^ $69;
      $c=$xor81;
      var $70=$buf4;
      var $incdec_ptr82=(($70+4)|0);
      $buf4=$incdec_ptr82;
      var $71=HEAP32[(($70)>>2)];
      var $72=$c;
      var $xor83=$72 ^ $71;
      $c=$xor83;
      var $73=$c;
      var $and84=$73 & 255;
      var $arrayidx85=((((_crc_table+3072)|0)+($and84<<2))|0);
      var $74=HEAP32[(($arrayidx85)>>2)];
      var $75=$c;
      var $shr86=$75 >>> 8;
      var $and87=$shr86 & 255;
      var $arrayidx88=((((_crc_table+2048)|0)+($and87<<2))|0);
      var $76=HEAP32[(($arrayidx88)>>2)];
      var $xor89=$74 ^ $76;
      var $77=$c;
      var $shr90=$77 >>> 16;
      var $and91=$shr90 & 255;
      var $arrayidx92=((((_crc_table+1024)|0)+($and91<<2))|0);
      var $78=HEAP32[(($arrayidx92)>>2)];
      var $xor93=$xor89 ^ $78;
      var $79=$c;
      var $shr94=$79 >>> 24;
      var $arrayidx95=((((_crc_table)|0)+($shr94<<2))|0);
      var $80=HEAP32[(($arrayidx95)>>2)];
      var $xor96=$xor93 ^ $80;
      $c=$xor96;
      var $81=$buf4;
      var $incdec_ptr97=(($81+4)|0);
      $buf4=$incdec_ptr97;
      var $82=HEAP32[(($81)>>2)];
      var $83=$c;
      var $xor98=$83 ^ $82;
      $c=$xor98;
      var $84=$c;
      var $and99=$84 & 255;
      var $arrayidx100=((((_crc_table+3072)|0)+($and99<<2))|0);
      var $85=HEAP32[(($arrayidx100)>>2)];
      var $86=$c;
      var $shr101=$86 >>> 8;
      var $and102=$shr101 & 255;
      var $arrayidx103=((((_crc_table+2048)|0)+($and102<<2))|0);
      var $87=HEAP32[(($arrayidx103)>>2)];
      var $xor104=$85 ^ $87;
      var $88=$c;
      var $shr105=$88 >>> 16;
      var $and106=$shr105 & 255;
      var $arrayidx107=((((_crc_table+1024)|0)+($and106<<2))|0);
      var $89=HEAP32[(($arrayidx107)>>2)];
      var $xor108=$xor104 ^ $89;
      var $90=$c;
      var $shr109=$90 >>> 24;
      var $arrayidx110=((((_crc_table)|0)+($shr109<<2))|0);
      var $91=HEAP32[(($arrayidx110)>>2)];
      var $xor111=$xor108 ^ $91;
      $c=$xor111;
      var $92=$buf4;
      var $incdec_ptr112=(($92+4)|0);
      $buf4=$incdec_ptr112;
      var $93=HEAP32[(($92)>>2)];
      var $94=$c;
      var $xor113=$94 ^ $93;
      $c=$xor113;
      var $95=$c;
      var $and114=$95 & 255;
      var $arrayidx115=((((_crc_table+3072)|0)+($and114<<2))|0);
      var $96=HEAP32[(($arrayidx115)>>2)];
      var $97=$c;
      var $shr116=$97 >>> 8;
      var $and117=$shr116 & 255;
      var $arrayidx118=((((_crc_table+2048)|0)+($and117<<2))|0);
      var $98=HEAP32[(($arrayidx118)>>2)];
      var $xor119=$96 ^ $98;
      var $99=$c;
      var $shr120=$99 >>> 16;
      var $and121=$shr120 & 255;
      var $arrayidx122=((((_crc_table+1024)|0)+($and121<<2))|0);
      var $100=HEAP32[(($arrayidx122)>>2)];
      var $xor123=$xor119 ^ $100;
      var $101=$c;
      var $shr124=$101 >>> 24;
      var $arrayidx125=((((_crc_table)|0)+($shr124<<2))|0);
      var $102=HEAP32[(($arrayidx125)>>2)];
      var $xor126=$xor123 ^ $102;
      $c=$xor126;
      var $103=$len_addr;
      var $sub=(($103-32)|0);
      $len_addr=$sub;
      __label__ = 6; break;
    case 8: // $while_end127
      __label__ = 9; break;
    case 9: // $while_cond128
      var $104=$len_addr;
      var $cmp129=(($104)>>>0) >= 4;
      if ($cmp129) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $while_body131
      var $105=$buf4;
      var $incdec_ptr132=(($105+4)|0);
      $buf4=$incdec_ptr132;
      var $106=HEAP32[(($105)>>2)];
      var $107=$c;
      var $xor133=$107 ^ $106;
      $c=$xor133;
      var $108=$c;
      var $and134=$108 & 255;
      var $arrayidx135=((((_crc_table+3072)|0)+($and134<<2))|0);
      var $109=HEAP32[(($arrayidx135)>>2)];
      var $110=$c;
      var $shr136=$110 >>> 8;
      var $and137=$shr136 & 255;
      var $arrayidx138=((((_crc_table+2048)|0)+($and137<<2))|0);
      var $111=HEAP32[(($arrayidx138)>>2)];
      var $xor139=$109 ^ $111;
      var $112=$c;
      var $shr140=$112 >>> 16;
      var $and141=$shr140 & 255;
      var $arrayidx142=((((_crc_table+1024)|0)+($and141<<2))|0);
      var $113=HEAP32[(($arrayidx142)>>2)];
      var $xor143=$xor139 ^ $113;
      var $114=$c;
      var $shr144=$114 >>> 24;
      var $arrayidx145=((((_crc_table)|0)+($shr144<<2))|0);
      var $115=HEAP32[(($arrayidx145)>>2)];
      var $xor146=$xor143 ^ $115;
      $c=$xor146;
      var $116=$len_addr;
      var $sub147=(($116-4)|0);
      $len_addr=$sub147;
      __label__ = 9; break;
    case 11: // $while_end148
      var $117=$buf4;
      var $118=$117;
      $buf_addr=$118;
      var $119=$len_addr;
      var $tobool149=(($119)|0)!=0;
      if ($tobool149) { __label__ = 12; break; } else { __label__ = 16; break; }
    case 12: // $if_then
      __label__ = 13; break;
    case 13: // $do_body
      var $120=$c;
      var $121=$buf_addr;
      var $incdec_ptr150=(($121+1)|0);
      $buf_addr=$incdec_ptr150;
      var $122=HEAPU8[($121)];
      var $conv151=(($122)&255);
      var $xor152=$120 ^ $conv151;
      var $and153=$xor152 & 255;
      var $arrayidx154=((((_crc_table)|0)+($and153<<2))|0);
      var $123=HEAP32[(($arrayidx154)>>2)];
      var $124=$c;
      var $shr155=$124 >>> 8;
      var $xor156=$123 ^ $shr155;
      $c=$xor156;
      __label__ = 14; break;
    case 14: // $do_cond
      var $125=$len_addr;
      var $dec157=(($125-1)|0);
      $len_addr=$dec157;
      var $tobool158=(($dec157)|0)!=0;
      if ($tobool158) { __label__ = 13; break; } else { __label__ = 15; break; }
    case 15: // $do_end
      __label__ = 16; break;
    case 16: // $if_end
      var $126=$c;
      var $neg159=$126 ^ -1;
      $c=$neg159;
      var $127=$c;
      ;
      return $127;
    default: assert(0, "bad label: " + __label__);
  }
}
_crc32_little["X"]=1;

function _crc32_big($crc, $buf, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $crc_addr;
      var $buf_addr;
      var $len_addr;
      var $c;
      var $buf4;
      $crc_addr=$crc;
      $buf_addr=$buf;
      $len_addr=$len;
      var $0=$crc_addr;
      var $shr=$0 >>> 24;
      var $and=$shr & 255;
      var $1=$crc_addr;
      var $shr1=$1 >>> 8;
      var $and2=$shr1 & 65280;
      var $add=(($and+$and2)|0);
      var $2=$crc_addr;
      var $and3=$2 & 65280;
      var $shl=$and3 << 8;
      var $add4=(($add+$shl)|0);
      var $3=$crc_addr;
      var $and5=$3 & 255;
      var $shl6=$and5 << 24;
      var $add7=(($add4+$shl6)|0);
      $c=$add7;
      var $4=$c;
      var $neg=$4 ^ -1;
      $c=$neg;
      __label__ = 1; break;
    case 1: // $while_cond
      var $5=$len_addr;
      var $tobool=(($5)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { var $8 = 0;__label__ = 3; break; }
    case 2: // $land_rhs
      var $6=$buf_addr;
      var $7=$6;
      var $and8=$7 & 3;
      var $tobool9=(($and8)|0)!=0;
      var $8 = $tobool9;__label__ = 3; break;
    case 3: // $land_end
      var $8;
      if ($8) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $while_body
      var $9=$c;
      var $shr10=$9 >>> 24;
      var $10=$buf_addr;
      var $incdec_ptr=(($10+1)|0);
      $buf_addr=$incdec_ptr;
      var $11=HEAPU8[($10)];
      var $conv=(($11)&255);
      var $xor=$shr10 ^ $conv;
      var $arrayidx=((((_crc_table+4096)|0)+($xor<<2))|0);
      var $12=HEAP32[(($arrayidx)>>2)];
      var $13=$c;
      var $shl11=$13 << 8;
      var $xor12=$12 ^ $shl11;
      $c=$xor12;
      var $14=$len_addr;
      var $dec=(($14-1)|0);
      $len_addr=$dec;
      __label__ = 1; break;
    case 5: // $while_end
      var $15=$buf_addr;
      var $16=$15;
      $buf4=$16;
      var $17=$buf4;
      var $incdec_ptr13=(($17-4)|0);
      $buf4=$incdec_ptr13;
      __label__ = 6; break;
    case 6: // $while_cond14
      var $18=$len_addr;
      var $cmp=(($18)>>>0) >= 32;
      if ($cmp) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $while_body16
      var $19=$buf4;
      var $incdec_ptr17=(($19+4)|0);
      $buf4=$incdec_ptr17;
      var $20=HEAP32[(($incdec_ptr17)>>2)];
      var $21=$c;
      var $xor18=$21 ^ $20;
      $c=$xor18;
      var $22=$c;
      var $and19=$22 & 255;
      var $arrayidx20=((((_crc_table+4096)|0)+($and19<<2))|0);
      var $23=HEAP32[(($arrayidx20)>>2)];
      var $24=$c;
      var $shr21=$24 >>> 8;
      var $and22=$shr21 & 255;
      var $arrayidx23=((((_crc_table+5120)|0)+($and22<<2))|0);
      var $25=HEAP32[(($arrayidx23)>>2)];
      var $xor24=$23 ^ $25;
      var $26=$c;
      var $shr25=$26 >>> 16;
      var $and26=$shr25 & 255;
      var $arrayidx27=((((_crc_table+6144)|0)+($and26<<2))|0);
      var $27=HEAP32[(($arrayidx27)>>2)];
      var $xor28=$xor24 ^ $27;
      var $28=$c;
      var $shr29=$28 >>> 24;
      var $arrayidx30=((((_crc_table+7168)|0)+($shr29<<2))|0);
      var $29=HEAP32[(($arrayidx30)>>2)];
      var $xor31=$xor28 ^ $29;
      $c=$xor31;
      var $30=$buf4;
      var $incdec_ptr32=(($30+4)|0);
      $buf4=$incdec_ptr32;
      var $31=HEAP32[(($incdec_ptr32)>>2)];
      var $32=$c;
      var $xor33=$32 ^ $31;
      $c=$xor33;
      var $33=$c;
      var $and34=$33 & 255;
      var $arrayidx35=((((_crc_table+4096)|0)+($and34<<2))|0);
      var $34=HEAP32[(($arrayidx35)>>2)];
      var $35=$c;
      var $shr36=$35 >>> 8;
      var $and37=$shr36 & 255;
      var $arrayidx38=((((_crc_table+5120)|0)+($and37<<2))|0);
      var $36=HEAP32[(($arrayidx38)>>2)];
      var $xor39=$34 ^ $36;
      var $37=$c;
      var $shr40=$37 >>> 16;
      var $and41=$shr40 & 255;
      var $arrayidx42=((((_crc_table+6144)|0)+($and41<<2))|0);
      var $38=HEAP32[(($arrayidx42)>>2)];
      var $xor43=$xor39 ^ $38;
      var $39=$c;
      var $shr44=$39 >>> 24;
      var $arrayidx45=((((_crc_table+7168)|0)+($shr44<<2))|0);
      var $40=HEAP32[(($arrayidx45)>>2)];
      var $xor46=$xor43 ^ $40;
      $c=$xor46;
      var $41=$buf4;
      var $incdec_ptr47=(($41+4)|0);
      $buf4=$incdec_ptr47;
      var $42=HEAP32[(($incdec_ptr47)>>2)];
      var $43=$c;
      var $xor48=$43 ^ $42;
      $c=$xor48;
      var $44=$c;
      var $and49=$44 & 255;
      var $arrayidx50=((((_crc_table+4096)|0)+($and49<<2))|0);
      var $45=HEAP32[(($arrayidx50)>>2)];
      var $46=$c;
      var $shr51=$46 >>> 8;
      var $and52=$shr51 & 255;
      var $arrayidx53=((((_crc_table+5120)|0)+($and52<<2))|0);
      var $47=HEAP32[(($arrayidx53)>>2)];
      var $xor54=$45 ^ $47;
      var $48=$c;
      var $shr55=$48 >>> 16;
      var $and56=$shr55 & 255;
      var $arrayidx57=((((_crc_table+6144)|0)+($and56<<2))|0);
      var $49=HEAP32[(($arrayidx57)>>2)];
      var $xor58=$xor54 ^ $49;
      var $50=$c;
      var $shr59=$50 >>> 24;
      var $arrayidx60=((((_crc_table+7168)|0)+($shr59<<2))|0);
      var $51=HEAP32[(($arrayidx60)>>2)];
      var $xor61=$xor58 ^ $51;
      $c=$xor61;
      var $52=$buf4;
      var $incdec_ptr62=(($52+4)|0);
      $buf4=$incdec_ptr62;
      var $53=HEAP32[(($incdec_ptr62)>>2)];
      var $54=$c;
      var $xor63=$54 ^ $53;
      $c=$xor63;
      var $55=$c;
      var $and64=$55 & 255;
      var $arrayidx65=((((_crc_table+4096)|0)+($and64<<2))|0);
      var $56=HEAP32[(($arrayidx65)>>2)];
      var $57=$c;
      var $shr66=$57 >>> 8;
      var $and67=$shr66 & 255;
      var $arrayidx68=((((_crc_table+5120)|0)+($and67<<2))|0);
      var $58=HEAP32[(($arrayidx68)>>2)];
      var $xor69=$56 ^ $58;
      var $59=$c;
      var $shr70=$59 >>> 16;
      var $and71=$shr70 & 255;
      var $arrayidx72=((((_crc_table+6144)|0)+($and71<<2))|0);
      var $60=HEAP32[(($arrayidx72)>>2)];
      var $xor73=$xor69 ^ $60;
      var $61=$c;
      var $shr74=$61 >>> 24;
      var $arrayidx75=((((_crc_table+7168)|0)+($shr74<<2))|0);
      var $62=HEAP32[(($arrayidx75)>>2)];
      var $xor76=$xor73 ^ $62;
      $c=$xor76;
      var $63=$buf4;
      var $incdec_ptr77=(($63+4)|0);
      $buf4=$incdec_ptr77;
      var $64=HEAP32[(($incdec_ptr77)>>2)];
      var $65=$c;
      var $xor78=$65 ^ $64;
      $c=$xor78;
      var $66=$c;
      var $and79=$66 & 255;
      var $arrayidx80=((((_crc_table+4096)|0)+($and79<<2))|0);
      var $67=HEAP32[(($arrayidx80)>>2)];
      var $68=$c;
      var $shr81=$68 >>> 8;
      var $and82=$shr81 & 255;
      var $arrayidx83=((((_crc_table+5120)|0)+($and82<<2))|0);
      var $69=HEAP32[(($arrayidx83)>>2)];
      var $xor84=$67 ^ $69;
      var $70=$c;
      var $shr85=$70 >>> 16;
      var $and86=$shr85 & 255;
      var $arrayidx87=((((_crc_table+6144)|0)+($and86<<2))|0);
      var $71=HEAP32[(($arrayidx87)>>2)];
      var $xor88=$xor84 ^ $71;
      var $72=$c;
      var $shr89=$72 >>> 24;
      var $arrayidx90=((((_crc_table+7168)|0)+($shr89<<2))|0);
      var $73=HEAP32[(($arrayidx90)>>2)];
      var $xor91=$xor88 ^ $73;
      $c=$xor91;
      var $74=$buf4;
      var $incdec_ptr92=(($74+4)|0);
      $buf4=$incdec_ptr92;
      var $75=HEAP32[(($incdec_ptr92)>>2)];
      var $76=$c;
      var $xor93=$76 ^ $75;
      $c=$xor93;
      var $77=$c;
      var $and94=$77 & 255;
      var $arrayidx95=((((_crc_table+4096)|0)+($and94<<2))|0);
      var $78=HEAP32[(($arrayidx95)>>2)];
      var $79=$c;
      var $shr96=$79 >>> 8;
      var $and97=$shr96 & 255;
      var $arrayidx98=((((_crc_table+5120)|0)+($and97<<2))|0);
      var $80=HEAP32[(($arrayidx98)>>2)];
      var $xor99=$78 ^ $80;
      var $81=$c;
      var $shr100=$81 >>> 16;
      var $and101=$shr100 & 255;
      var $arrayidx102=((((_crc_table+6144)|0)+($and101<<2))|0);
      var $82=HEAP32[(($arrayidx102)>>2)];
      var $xor103=$xor99 ^ $82;
      var $83=$c;
      var $shr104=$83 >>> 24;
      var $arrayidx105=((((_crc_table+7168)|0)+($shr104<<2))|0);
      var $84=HEAP32[(($arrayidx105)>>2)];
      var $xor106=$xor103 ^ $84;
      $c=$xor106;
      var $85=$buf4;
      var $incdec_ptr107=(($85+4)|0);
      $buf4=$incdec_ptr107;
      var $86=HEAP32[(($incdec_ptr107)>>2)];
      var $87=$c;
      var $xor108=$87 ^ $86;
      $c=$xor108;
      var $88=$c;
      var $and109=$88 & 255;
      var $arrayidx110=((((_crc_table+4096)|0)+($and109<<2))|0);
      var $89=HEAP32[(($arrayidx110)>>2)];
      var $90=$c;
      var $shr111=$90 >>> 8;
      var $and112=$shr111 & 255;
      var $arrayidx113=((((_crc_table+5120)|0)+($and112<<2))|0);
      var $91=HEAP32[(($arrayidx113)>>2)];
      var $xor114=$89 ^ $91;
      var $92=$c;
      var $shr115=$92 >>> 16;
      var $and116=$shr115 & 255;
      var $arrayidx117=((((_crc_table+6144)|0)+($and116<<2))|0);
      var $93=HEAP32[(($arrayidx117)>>2)];
      var $xor118=$xor114 ^ $93;
      var $94=$c;
      var $shr119=$94 >>> 24;
      var $arrayidx120=((((_crc_table+7168)|0)+($shr119<<2))|0);
      var $95=HEAP32[(($arrayidx120)>>2)];
      var $xor121=$xor118 ^ $95;
      $c=$xor121;
      var $96=$buf4;
      var $incdec_ptr122=(($96+4)|0);
      $buf4=$incdec_ptr122;
      var $97=HEAP32[(($incdec_ptr122)>>2)];
      var $98=$c;
      var $xor123=$98 ^ $97;
      $c=$xor123;
      var $99=$c;
      var $and124=$99 & 255;
      var $arrayidx125=((((_crc_table+4096)|0)+($and124<<2))|0);
      var $100=HEAP32[(($arrayidx125)>>2)];
      var $101=$c;
      var $shr126=$101 >>> 8;
      var $and127=$shr126 & 255;
      var $arrayidx128=((((_crc_table+5120)|0)+($and127<<2))|0);
      var $102=HEAP32[(($arrayidx128)>>2)];
      var $xor129=$100 ^ $102;
      var $103=$c;
      var $shr130=$103 >>> 16;
      var $and131=$shr130 & 255;
      var $arrayidx132=((((_crc_table+6144)|0)+($and131<<2))|0);
      var $104=HEAP32[(($arrayidx132)>>2)];
      var $xor133=$xor129 ^ $104;
      var $105=$c;
      var $shr134=$105 >>> 24;
      var $arrayidx135=((((_crc_table+7168)|0)+($shr134<<2))|0);
      var $106=HEAP32[(($arrayidx135)>>2)];
      var $xor136=$xor133 ^ $106;
      $c=$xor136;
      var $107=$len_addr;
      var $sub=(($107-32)|0);
      $len_addr=$sub;
      __label__ = 6; break;
    case 8: // $while_end137
      __label__ = 9; break;
    case 9: // $while_cond138
      var $108=$len_addr;
      var $cmp139=(($108)>>>0) >= 4;
      if ($cmp139) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $while_body141
      var $109=$buf4;
      var $incdec_ptr142=(($109+4)|0);
      $buf4=$incdec_ptr142;
      var $110=HEAP32[(($incdec_ptr142)>>2)];
      var $111=$c;
      var $xor143=$111 ^ $110;
      $c=$xor143;
      var $112=$c;
      var $and144=$112 & 255;
      var $arrayidx145=((((_crc_table+4096)|0)+($and144<<2))|0);
      var $113=HEAP32[(($arrayidx145)>>2)];
      var $114=$c;
      var $shr146=$114 >>> 8;
      var $and147=$shr146 & 255;
      var $arrayidx148=((((_crc_table+5120)|0)+($and147<<2))|0);
      var $115=HEAP32[(($arrayidx148)>>2)];
      var $xor149=$113 ^ $115;
      var $116=$c;
      var $shr150=$116 >>> 16;
      var $and151=$shr150 & 255;
      var $arrayidx152=((((_crc_table+6144)|0)+($and151<<2))|0);
      var $117=HEAP32[(($arrayidx152)>>2)];
      var $xor153=$xor149 ^ $117;
      var $118=$c;
      var $shr154=$118 >>> 24;
      var $arrayidx155=((((_crc_table+7168)|0)+($shr154<<2))|0);
      var $119=HEAP32[(($arrayidx155)>>2)];
      var $xor156=$xor153 ^ $119;
      $c=$xor156;
      var $120=$len_addr;
      var $sub157=(($120-4)|0);
      $len_addr=$sub157;
      __label__ = 9; break;
    case 11: // $while_end158
      var $121=$buf4;
      var $incdec_ptr159=(($121+4)|0);
      $buf4=$incdec_ptr159;
      var $122=$buf4;
      var $123=$122;
      $buf_addr=$123;
      var $124=$len_addr;
      var $tobool160=(($124)|0)!=0;
      if ($tobool160) { __label__ = 12; break; } else { __label__ = 16; break; }
    case 12: // $if_then
      __label__ = 13; break;
    case 13: // $do_body
      var $125=$c;
      var $shr161=$125 >>> 24;
      var $126=$buf_addr;
      var $incdec_ptr162=(($126+1)|0);
      $buf_addr=$incdec_ptr162;
      var $127=HEAPU8[($126)];
      var $conv163=(($127)&255);
      var $xor164=$shr161 ^ $conv163;
      var $arrayidx165=((((_crc_table+4096)|0)+($xor164<<2))|0);
      var $128=HEAP32[(($arrayidx165)>>2)];
      var $129=$c;
      var $shl166=$129 << 8;
      var $xor167=$128 ^ $shl166;
      $c=$xor167;
      __label__ = 14; break;
    case 14: // $do_cond
      var $130=$len_addr;
      var $dec168=(($130-1)|0);
      $len_addr=$dec168;
      var $tobool169=(($dec168)|0)!=0;
      if ($tobool169) { __label__ = 13; break; } else { __label__ = 15; break; }
    case 15: // $do_end
      __label__ = 16; break;
    case 16: // $if_end
      var $131=$c;
      var $neg170=$131 ^ -1;
      $c=$neg170;
      var $132=$c;
      var $shr171=$132 >>> 24;
      var $and172=$shr171 & 255;
      var $133=$c;
      var $shr173=$133 >>> 8;
      var $and174=$shr173 & 65280;
      var $add175=(($and172+$and174)|0);
      var $134=$c;
      var $and176=$134 & 65280;
      var $shl177=$and176 << 8;
      var $add178=(($add175+$shl177)|0);
      var $135=$c;
      var $and179=$135 & 255;
      var $shl180=$and179 << 24;
      var $add181=(($add178+$shl180)|0);
      ;
      return $add181;
    default: assert(0, "bad label: " + __label__);
  }
}
_crc32_big["X"]=1;

function _inflate_fast($strm, $start) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $strm_addr;
      var $start_addr;
      var $state;
      var $in;
      var $last;
      var $out;
      var $beg;
      var $end;
      var $wsize;
      var $whave;
      var $wnext;
      var $window;
      var $hold;
      var $bits;
      var $lcode;
      var $dcode;
      var $lmask;
      var $dmask;
      var $here=__stackBase__;
      var $op;
      var $len;
      var $dist;
      var $from;
      $strm_addr=$strm;
      $start_addr=$start;
      var $0=$strm_addr;
      var $state1=(($0+28)|0);
      var $1=HEAP32[(($state1)>>2)];
      var $2=$1;
      $state=$2;
      var $3=$strm_addr;
      var $next_in=(($3)|0);
      var $4=HEAP32[(($next_in)>>2)];
      var $add_ptr=(($4-1)|0);
      $in=$add_ptr;
      var $5=$in;
      var $6=$strm_addr;
      var $avail_in=(($6+4)|0);
      var $7=HEAP32[(($avail_in)>>2)];
      var $sub=(($7-5)|0);
      var $add_ptr2=(($5+$sub)|0);
      $last=$add_ptr2;
      var $8=$strm_addr;
      var $next_out=(($8+12)|0);
      var $9=HEAP32[(($next_out)>>2)];
      var $add_ptr3=(($9-1)|0);
      $out=$add_ptr3;
      var $10=$out;
      var $11=$start_addr;
      var $12=$strm_addr;
      var $avail_out=(($12+16)|0);
      var $13=HEAP32[(($avail_out)>>2)];
      var $sub4=(($11-$13)|0);
      var $idx_neg=(((-$sub4))|0);
      var $add_ptr5=(($10+$idx_neg)|0);
      $beg=$add_ptr5;
      var $14=$out;
      var $15=$strm_addr;
      var $avail_out6=(($15+16)|0);
      var $16=HEAP32[(($avail_out6)>>2)];
      var $sub7=(($16-257)|0);
      var $add_ptr8=(($14+$sub7)|0);
      $end=$add_ptr8;
      var $17=$state;
      var $wsize9=(($17+40)|0);
      var $18=HEAP32[(($wsize9)>>2)];
      $wsize=$18;
      var $19=$state;
      var $whave10=(($19+44)|0);
      var $20=HEAP32[(($whave10)>>2)];
      $whave=$20;
      var $21=$state;
      var $wnext11=(($21+48)|0);
      var $22=HEAP32[(($wnext11)>>2)];
      $wnext=$22;
      var $23=$state;
      var $window12=(($23+52)|0);
      var $24=HEAP32[(($window12)>>2)];
      $window=$24;
      var $25=$state;
      var $hold13=(($25+56)|0);
      var $26=HEAP32[(($hold13)>>2)];
      $hold=$26;
      var $27=$state;
      var $bits14=(($27+60)|0);
      var $28=HEAP32[(($bits14)>>2)];
      $bits=$28;
      var $29=$state;
      var $lencode=(($29+76)|0);
      var $30=HEAP32[(($lencode)>>2)];
      $lcode=$30;
      var $31=$state;
      var $distcode=(($31+80)|0);
      var $32=HEAP32[(($distcode)>>2)];
      $dcode=$32;
      var $33=$state;
      var $lenbits=(($33+84)|0);
      var $34=HEAP32[(($lenbits)>>2)];
      var $shl=1 << $34;
      var $sub15=(($shl-1)|0);
      $lmask=$sub15;
      var $35=$state;
      var $distbits=(($35+88)|0);
      var $36=HEAP32[(($distbits)>>2)];
      var $shl16=1 << $36;
      var $sub17=(($shl16-1)|0);
      $dmask=$sub17;
      __label__ = 1; break;
    case 1: // $do_body
      var $37=$bits;
      var $cmp=(($37)>>>0) < 15;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      var $38=$in;
      var $incdec_ptr=(($38+1)|0);
      $in=$incdec_ptr;
      var $39=HEAPU8[($incdec_ptr)];
      var $conv=(($39)&255);
      var $40=$bits;
      var $shl18=$conv << $40;
      var $41=$hold;
      var $add=(($41+$shl18)|0);
      $hold=$add;
      var $42=$bits;
      var $add19=(($42+8)|0);
      $bits=$add19;
      var $43=$in;
      var $incdec_ptr20=(($43+1)|0);
      $in=$incdec_ptr20;
      var $44=HEAPU8[($incdec_ptr20)];
      var $conv21=(($44)&255);
      var $45=$bits;
      var $shl22=$conv21 << $45;
      var $46=$hold;
      var $add23=(($46+$shl22)|0);
      $hold=$add23;
      var $47=$bits;
      var $add24=(($47+8)|0);
      $bits=$add24;
      __label__ = 3; break;
    case 3: // $if_end
      var $48=$hold;
      var $49=$lmask;
      var $and=$48 & $49;
      var $50=$lcode;
      var $arrayidx=(($50+($and<<2))|0);
      var $51=$here;
      var $52=$arrayidx;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($51)>>1)]=HEAP16[(($52)>>1)];HEAP16[(($51+2)>>1)]=HEAP16[(($52+2)>>1)];
      __label__ = 4; break;
    case 4: // $dolen
      var $bits25=(($here+1)|0);
      var $53=HEAPU8[($bits25)];
      var $conv26=(($53)&255);
      $op=$conv26;
      var $54=$op;
      var $55=$hold;
      var $shr=$55 >>> (($54)>>>0);
      $hold=$shr;
      var $56=$op;
      var $57=$bits;
      var $sub27=(($57-$56)|0);
      $bits=$sub27;
      var $op28=(($here)|0);
      var $58=HEAPU8[($op28)];
      var $conv29=(($58)&255);
      $op=$conv29;
      var $59=$op;
      var $cmp30=(($59)|0)==0;
      if ($cmp30) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then32
      var $val=(($here+2)|0);
      var $60=HEAP16[(($val)>>1)];
      var $conv33=(($60) & 255);
      var $61=$out;
      var $incdec_ptr34=(($61+1)|0);
      $out=$incdec_ptr34;
      HEAP8[($incdec_ptr34)]=$conv33;
      __label__ = 77; break;
    case 6: // $if_else
      var $62=$op;
      var $and35=$62 & 16;
      var $tobool=(($and35)|0)!=0;
      if ($tobool) { __label__ = 7; break; } else { __label__ = 71; break; }
    case 7: // $if_then36
      var $val37=(($here+2)|0);
      var $63=HEAPU16[(($val37)>>1)];
      var $conv38=(($63)&65535);
      $len=$conv38;
      var $64=$op;
      var $and39=$64 & 15;
      $op=$and39;
      var $65=$op;
      var $tobool40=(($65)|0)!=0;
      if ($tobool40) { __label__ = 8; break; } else { __label__ = 11; break; }
    case 8: // $if_then41
      var $66=$bits;
      var $67=$op;
      var $cmp42=(($66)>>>0) < (($67)>>>0);
      if ($cmp42) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then44
      var $68=$in;
      var $incdec_ptr45=(($68+1)|0);
      $in=$incdec_ptr45;
      var $69=HEAPU8[($incdec_ptr45)];
      var $conv46=(($69)&255);
      var $70=$bits;
      var $shl47=$conv46 << $70;
      var $71=$hold;
      var $add48=(($71+$shl47)|0);
      $hold=$add48;
      var $72=$bits;
      var $add49=(($72+8)|0);
      $bits=$add49;
      __label__ = 10; break;
    case 10: // $if_end50
      var $73=$hold;
      var $74=$op;
      var $shl51=1 << $74;
      var $sub52=(($shl51-1)|0);
      var $and53=$73 & $sub52;
      var $75=$len;
      var $add54=(($75+$and53)|0);
      $len=$add54;
      var $76=$op;
      var $77=$hold;
      var $shr55=$77 >>> (($76)>>>0);
      $hold=$shr55;
      var $78=$op;
      var $79=$bits;
      var $sub56=(($79-$78)|0);
      $bits=$sub56;
      __label__ = 11; break;
    case 11: // $if_end57
      var $80=$bits;
      var $cmp58=(($80)>>>0) < 15;
      if ($cmp58) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then60
      var $81=$in;
      var $incdec_ptr61=(($81+1)|0);
      $in=$incdec_ptr61;
      var $82=HEAPU8[($incdec_ptr61)];
      var $conv62=(($82)&255);
      var $83=$bits;
      var $shl63=$conv62 << $83;
      var $84=$hold;
      var $add64=(($84+$shl63)|0);
      $hold=$add64;
      var $85=$bits;
      var $add65=(($85+8)|0);
      $bits=$add65;
      var $86=$in;
      var $incdec_ptr66=(($86+1)|0);
      $in=$incdec_ptr66;
      var $87=HEAPU8[($incdec_ptr66)];
      var $conv67=(($87)&255);
      var $88=$bits;
      var $shl68=$conv67 << $88;
      var $89=$hold;
      var $add69=(($89+$shl68)|0);
      $hold=$add69;
      var $90=$bits;
      var $add70=(($90+8)|0);
      $bits=$add70;
      __label__ = 13; break;
    case 13: // $if_end71
      var $91=$hold;
      var $92=$dmask;
      var $and72=$91 & $92;
      var $93=$dcode;
      var $arrayidx73=(($93+($and72<<2))|0);
      var $94=$here;
      var $95=$arrayidx73;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($94)>>1)]=HEAP16[(($95)>>1)];HEAP16[(($94+2)>>1)]=HEAP16[(($95+2)>>1)];
      __label__ = 14; break;
    case 14: // $dodist
      var $bits74=(($here+1)|0);
      var $96=HEAPU8[($bits74)];
      var $conv75=(($96)&255);
      $op=$conv75;
      var $97=$op;
      var $98=$hold;
      var $shr76=$98 >>> (($97)>>>0);
      $hold=$shr76;
      var $99=$op;
      var $100=$bits;
      var $sub77=(($100-$99)|0);
      $bits=$sub77;
      var $op78=(($here)|0);
      var $101=HEAPU8[($op78)];
      var $conv79=(($101)&255);
      $op=$conv79;
      var $102=$op;
      var $and80=$102 & 16;
      var $tobool81=(($and80)|0)!=0;
      if ($tobool81) { __label__ = 15; break; } else { __label__ = 67; break; }
    case 15: // $if_then82
      var $val83=(($here+2)|0);
      var $103=HEAPU16[(($val83)>>1)];
      var $conv84=(($103)&65535);
      $dist=$conv84;
      var $104=$op;
      var $and85=$104 & 15;
      $op=$and85;
      var $105=$bits;
      var $106=$op;
      var $cmp86=(($105)>>>0) < (($106)>>>0);
      if ($cmp86) { __label__ = 16; break; } else { __label__ = 19; break; }
    case 16: // $if_then88
      var $107=$in;
      var $incdec_ptr89=(($107+1)|0);
      $in=$incdec_ptr89;
      var $108=HEAPU8[($incdec_ptr89)];
      var $conv90=(($108)&255);
      var $109=$bits;
      var $shl91=$conv90 << $109;
      var $110=$hold;
      var $add92=(($110+$shl91)|0);
      $hold=$add92;
      var $111=$bits;
      var $add93=(($111+8)|0);
      $bits=$add93;
      var $112=$bits;
      var $113=$op;
      var $cmp94=(($112)>>>0) < (($113)>>>0);
      if ($cmp94) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then96
      var $114=$in;
      var $incdec_ptr97=(($114+1)|0);
      $in=$incdec_ptr97;
      var $115=HEAPU8[($incdec_ptr97)];
      var $conv98=(($115)&255);
      var $116=$bits;
      var $shl99=$conv98 << $116;
      var $117=$hold;
      var $add100=(($117+$shl99)|0);
      $hold=$add100;
      var $118=$bits;
      var $add101=(($118+8)|0);
      $bits=$add101;
      __label__ = 18; break;
    case 18: // $if_end102
      __label__ = 19; break;
    case 19: // $if_end103
      var $119=$hold;
      var $120=$op;
      var $shl104=1 << $120;
      var $sub105=(($shl104-1)|0);
      var $and106=$119 & $sub105;
      var $121=$dist;
      var $add107=(($121+$and106)|0);
      $dist=$add107;
      var $122=$op;
      var $123=$hold;
      var $shr108=$123 >>> (($122)>>>0);
      $hold=$shr108;
      var $124=$op;
      var $125=$bits;
      var $sub109=(($125-$124)|0);
      $bits=$sub109;
      var $126=$out;
      var $127=$beg;
      var $sub_ptr_lhs_cast=$126;
      var $sub_ptr_rhs_cast=$127;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      $op=$sub_ptr_sub;
      var $128=$dist;
      var $129=$op;
      var $cmp110=(($128)>>>0) > (($129)>>>0);
      if ($cmp110) { __label__ = 20; break; } else { __label__ = 58; break; }
    case 20: // $if_then112
      var $130=$dist;
      var $131=$op;
      var $sub113=(($130-$131)|0);
      $op=$sub113;
      var $132=$op;
      var $133=$whave;
      var $cmp114=(($132)>>>0) > (($133)>>>0);
      if ($cmp114) { __label__ = 21; break; } else { __label__ = 24; break; }
    case 21: // $if_then116
      var $134=$state;
      var $sane=(($134+7104)|0);
      var $135=HEAP32[(($sane)>>2)];
      var $tobool117=(($135)|0)!=0;
      if ($tobool117) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then118
      var $136=$strm_addr;
      var $msg=(($136+24)|0);
      HEAP32[(($msg)>>2)]=((STRING_TABLE.__str51)|0);
      var $137=$state;
      var $mode=(($137)|0);
      HEAP32[(($mode)>>2)]=29;
      __label__ = 81; break;
    case 23: // $if_end119
      __label__ = 24; break;
    case 24: // $if_end120
      var $138=$window;
      var $add_ptr121=(($138-1)|0);
      $from=$add_ptr121;
      var $139=$wnext;
      var $cmp122=(($139)|0)==0;
      if ($cmp122) { __label__ = 25; break; } else { __label__ = 31; break; }
    case 25: // $if_then124
      var $140=$wsize;
      var $141=$op;
      var $sub125=(($140-$141)|0);
      var $142=$from;
      var $add_ptr126=(($142+$sub125)|0);
      $from=$add_ptr126;
      var $143=$op;
      var $144=$len;
      var $cmp127=(($143)>>>0) < (($144)>>>0);
      if ($cmp127) { __label__ = 26; break; } else { __label__ = 30; break; }
    case 26: // $if_then129
      var $145=$op;
      var $146=$len;
      var $sub130=(($146-$145)|0);
      $len=$sub130;
      __label__ = 27; break;
    case 27: // $do_body131
      var $147=$from;
      var $incdec_ptr132=(($147+1)|0);
      $from=$incdec_ptr132;
      var $148=HEAP8[($incdec_ptr132)];
      var $149=$out;
      var $incdec_ptr133=(($149+1)|0);
      $out=$incdec_ptr133;
      HEAP8[($incdec_ptr133)]=$148;
      __label__ = 28; break;
    case 28: // $do_cond
      var $150=$op;
      var $dec=(($150-1)|0);
      $op=$dec;
      var $tobool134=(($dec)|0)!=0;
      if ($tobool134) { __label__ = 27; break; } else { __label__ = 29; break; }
    case 29: // $do_end
      var $151=$out;
      var $152=$dist;
      var $idx_neg135=(((-$152))|0);
      var $add_ptr136=(($151+$idx_neg135)|0);
      $from=$add_ptr136;
      __label__ = 30; break;
    case 30: // $if_end137
      __label__ = 50; break;
    case 31: // $if_else138
      var $153=$wnext;
      var $154=$op;
      var $cmp139=(($153)>>>0) < (($154)>>>0);
      if ($cmp139) { __label__ = 32; break; } else { __label__ = 43; break; }
    case 32: // $if_then141
      var $155=$wsize;
      var $156=$wnext;
      var $add142=(($155+$156)|0);
      var $157=$op;
      var $sub143=(($add142-$157)|0);
      var $158=$from;
      var $add_ptr144=(($158+$sub143)|0);
      $from=$add_ptr144;
      var $159=$wnext;
      var $160=$op;
      var $sub145=(($160-$159)|0);
      $op=$sub145;
      var $161=$op;
      var $162=$len;
      var $cmp146=(($161)>>>0) < (($162)>>>0);
      if ($cmp146) { __label__ = 33; break; } else { __label__ = 42; break; }
    case 33: // $if_then148
      var $163=$op;
      var $164=$len;
      var $sub149=(($164-$163)|0);
      $len=$sub149;
      __label__ = 34; break;
    case 34: // $do_body150
      var $165=$from;
      var $incdec_ptr151=(($165+1)|0);
      $from=$incdec_ptr151;
      var $166=HEAP8[($incdec_ptr151)];
      var $167=$out;
      var $incdec_ptr152=(($167+1)|0);
      $out=$incdec_ptr152;
      HEAP8[($incdec_ptr152)]=$166;
      __label__ = 35; break;
    case 35: // $do_cond153
      var $168=$op;
      var $dec154=(($168-1)|0);
      $op=$dec154;
      var $tobool155=(($dec154)|0)!=0;
      if ($tobool155) { __label__ = 34; break; } else { __label__ = 36; break; }
    case 36: // $do_end156
      var $169=$window;
      var $add_ptr157=(($169-1)|0);
      $from=$add_ptr157;
      var $170=$wnext;
      var $171=$len;
      var $cmp158=(($170)>>>0) < (($171)>>>0);
      if ($cmp158) { __label__ = 37; break; } else { __label__ = 41; break; }
    case 37: // $if_then160
      var $172=$wnext;
      $op=$172;
      var $173=$op;
      var $174=$len;
      var $sub161=(($174-$173)|0);
      $len=$sub161;
      __label__ = 38; break;
    case 38: // $do_body162
      var $175=$from;
      var $incdec_ptr163=(($175+1)|0);
      $from=$incdec_ptr163;
      var $176=HEAP8[($incdec_ptr163)];
      var $177=$out;
      var $incdec_ptr164=(($177+1)|0);
      $out=$incdec_ptr164;
      HEAP8[($incdec_ptr164)]=$176;
      __label__ = 39; break;
    case 39: // $do_cond165
      var $178=$op;
      var $dec166=(($178-1)|0);
      $op=$dec166;
      var $tobool167=(($dec166)|0)!=0;
      if ($tobool167) { __label__ = 38; break; } else { __label__ = 40; break; }
    case 40: // $do_end168
      var $179=$out;
      var $180=$dist;
      var $idx_neg169=(((-$180))|0);
      var $add_ptr170=(($179+$idx_neg169)|0);
      $from=$add_ptr170;
      __label__ = 41; break;
    case 41: // $if_end171
      __label__ = 42; break;
    case 42: // $if_end172
      __label__ = 49; break;
    case 43: // $if_else173
      var $181=$wnext;
      var $182=$op;
      var $sub174=(($181-$182)|0);
      var $183=$from;
      var $add_ptr175=(($183+$sub174)|0);
      $from=$add_ptr175;
      var $184=$op;
      var $185=$len;
      var $cmp176=(($184)>>>0) < (($185)>>>0);
      if ($cmp176) { __label__ = 44; break; } else { __label__ = 48; break; }
    case 44: // $if_then178
      var $186=$op;
      var $187=$len;
      var $sub179=(($187-$186)|0);
      $len=$sub179;
      __label__ = 45; break;
    case 45: // $do_body180
      var $188=$from;
      var $incdec_ptr181=(($188+1)|0);
      $from=$incdec_ptr181;
      var $189=HEAP8[($incdec_ptr181)];
      var $190=$out;
      var $incdec_ptr182=(($190+1)|0);
      $out=$incdec_ptr182;
      HEAP8[($incdec_ptr182)]=$189;
      __label__ = 46; break;
    case 46: // $do_cond183
      var $191=$op;
      var $dec184=(($191-1)|0);
      $op=$dec184;
      var $tobool185=(($dec184)|0)!=0;
      if ($tobool185) { __label__ = 45; break; } else { __label__ = 47; break; }
    case 47: // $do_end186
      var $192=$out;
      var $193=$dist;
      var $idx_neg187=(((-$193))|0);
      var $add_ptr188=(($192+$idx_neg187)|0);
      $from=$add_ptr188;
      __label__ = 48; break;
    case 48: // $if_end189
      __label__ = 49; break;
    case 49: // $if_end190
      __label__ = 50; break;
    case 50: // $if_end191
      __label__ = 51; break;
    case 51: // $while_cond
      var $194=$len;
      var $cmp192=(($194)>>>0) > 2;
      if ($cmp192) { __label__ = 52; break; } else { __label__ = 53; break; }
    case 52: // $while_body
      var $195=$from;
      var $incdec_ptr194=(($195+1)|0);
      $from=$incdec_ptr194;
      var $196=HEAP8[($incdec_ptr194)];
      var $197=$out;
      var $incdec_ptr195=(($197+1)|0);
      $out=$incdec_ptr195;
      HEAP8[($incdec_ptr195)]=$196;
      var $198=$from;
      var $incdec_ptr196=(($198+1)|0);
      $from=$incdec_ptr196;
      var $199=HEAP8[($incdec_ptr196)];
      var $200=$out;
      var $incdec_ptr197=(($200+1)|0);
      $out=$incdec_ptr197;
      HEAP8[($incdec_ptr197)]=$199;
      var $201=$from;
      var $incdec_ptr198=(($201+1)|0);
      $from=$incdec_ptr198;
      var $202=HEAP8[($incdec_ptr198)];
      var $203=$out;
      var $incdec_ptr199=(($203+1)|0);
      $out=$incdec_ptr199;
      HEAP8[($incdec_ptr199)]=$202;
      var $204=$len;
      var $sub200=(($204-3)|0);
      $len=$sub200;
      __label__ = 51; break;
    case 53: // $while_end
      var $205=$len;
      var $tobool201=(($205)|0)!=0;
      if ($tobool201) { __label__ = 54; break; } else { __label__ = 57; break; }
    case 54: // $if_then202
      var $206=$from;
      var $incdec_ptr203=(($206+1)|0);
      $from=$incdec_ptr203;
      var $207=HEAP8[($incdec_ptr203)];
      var $208=$out;
      var $incdec_ptr204=(($208+1)|0);
      $out=$incdec_ptr204;
      HEAP8[($incdec_ptr204)]=$207;
      var $209=$len;
      var $cmp205=(($209)>>>0) > 1;
      if ($cmp205) { __label__ = 55; break; } else { __label__ = 56; break; }
    case 55: // $if_then207
      var $210=$from;
      var $incdec_ptr208=(($210+1)|0);
      $from=$incdec_ptr208;
      var $211=HEAP8[($incdec_ptr208)];
      var $212=$out;
      var $incdec_ptr209=(($212+1)|0);
      $out=$incdec_ptr209;
      HEAP8[($incdec_ptr209)]=$211;
      __label__ = 56; break;
    case 56: // $if_end210
      __label__ = 57; break;
    case 57: // $if_end211
      __label__ = 66; break;
    case 58: // $if_else212
      var $213=$out;
      var $214=$dist;
      var $idx_neg213=(((-$214))|0);
      var $add_ptr214=(($213+$idx_neg213)|0);
      $from=$add_ptr214;
      __label__ = 59; break;
    case 59: // $do_body215
      var $215=$from;
      var $incdec_ptr216=(($215+1)|0);
      $from=$incdec_ptr216;
      var $216=HEAP8[($incdec_ptr216)];
      var $217=$out;
      var $incdec_ptr217=(($217+1)|0);
      $out=$incdec_ptr217;
      HEAP8[($incdec_ptr217)]=$216;
      var $218=$from;
      var $incdec_ptr218=(($218+1)|0);
      $from=$incdec_ptr218;
      var $219=HEAP8[($incdec_ptr218)];
      var $220=$out;
      var $incdec_ptr219=(($220+1)|0);
      $out=$incdec_ptr219;
      HEAP8[($incdec_ptr219)]=$219;
      var $221=$from;
      var $incdec_ptr220=(($221+1)|0);
      $from=$incdec_ptr220;
      var $222=HEAP8[($incdec_ptr220)];
      var $223=$out;
      var $incdec_ptr221=(($223+1)|0);
      $out=$incdec_ptr221;
      HEAP8[($incdec_ptr221)]=$222;
      var $224=$len;
      var $sub222=(($224-3)|0);
      $len=$sub222;
      __label__ = 60; break;
    case 60: // $do_cond223
      var $225=$len;
      var $cmp224=(($225)>>>0) > 2;
      if ($cmp224) { __label__ = 59; break; } else { __label__ = 61; break; }
    case 61: // $do_end226
      var $226=$len;
      var $tobool227=(($226)|0)!=0;
      if ($tobool227) { __label__ = 62; break; } else { __label__ = 65; break; }
    case 62: // $if_then228
      var $227=$from;
      var $incdec_ptr229=(($227+1)|0);
      $from=$incdec_ptr229;
      var $228=HEAP8[($incdec_ptr229)];
      var $229=$out;
      var $incdec_ptr230=(($229+1)|0);
      $out=$incdec_ptr230;
      HEAP8[($incdec_ptr230)]=$228;
      var $230=$len;
      var $cmp231=(($230)>>>0) > 1;
      if ($cmp231) { __label__ = 63; break; } else { __label__ = 64; break; }
    case 63: // $if_then233
      var $231=$from;
      var $incdec_ptr234=(($231+1)|0);
      $from=$incdec_ptr234;
      var $232=HEAP8[($incdec_ptr234)];
      var $233=$out;
      var $incdec_ptr235=(($233+1)|0);
      $out=$incdec_ptr235;
      HEAP8[($incdec_ptr235)]=$232;
      __label__ = 64; break;
    case 64: // $if_end236
      __label__ = 65; break;
    case 65: // $if_end237
      __label__ = 66; break;
    case 66: // $if_end238
      __label__ = 70; break;
    case 67: // $if_else239
      var $234=$op;
      var $and240=$234 & 64;
      var $cmp241=(($and240)|0)==0;
      if ($cmp241) { __label__ = 68; break; } else { __label__ = 69; break; }
    case 68: // $if_then243
      var $val244=(($here+2)|0);
      var $235=HEAPU16[(($val244)>>1)];
      var $conv245=(($235)&65535);
      var $236=$hold;
      var $237=$op;
      var $shl246=1 << $237;
      var $sub247=(($shl246-1)|0);
      var $and248=$236 & $sub247;
      var $add249=(($conv245+$and248)|0);
      var $238=$dcode;
      var $arrayidx250=(($238+($add249<<2))|0);
      var $239=$here;
      var $240=$arrayidx250;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($239)>>1)]=HEAP16[(($240)>>1)];HEAP16[(($239+2)>>1)]=HEAP16[(($240+2)>>1)];
      __label__ = 14; break;
    case 69: // $if_else251
      var $241=$strm_addr;
      var $msg252=(($241+24)|0);
      HEAP32[(($msg252)>>2)]=((STRING_TABLE.__str152)|0);
      var $242=$state;
      var $mode253=(($242)|0);
      HEAP32[(($mode253)>>2)]=29;
      __label__ = 81; break;
    case 70: // $if_end254
      __label__ = 76; break;
    case 71: // $if_else255
      var $243=$op;
      var $and256=$243 & 64;
      var $cmp257=(($and256)|0)==0;
      if ($cmp257) { __label__ = 72; break; } else { __label__ = 73; break; }
    case 72: // $if_then259
      var $val260=(($here+2)|0);
      var $244=HEAPU16[(($val260)>>1)];
      var $conv261=(($244)&65535);
      var $245=$hold;
      var $246=$op;
      var $shl262=1 << $246;
      var $sub263=(($shl262-1)|0);
      var $and264=$245 & $sub263;
      var $add265=(($conv261+$and264)|0);
      var $247=$lcode;
      var $arrayidx266=(($247+($add265<<2))|0);
      var $248=$here;
      var $249=$arrayidx266;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($248)>>1)]=HEAP16[(($249)>>1)];HEAP16[(($248+2)>>1)]=HEAP16[(($249+2)>>1)];
      __label__ = 4; break;
    case 73: // $if_else267
      var $250=$op;
      var $and268=$250 & 32;
      var $tobool269=(($and268)|0)!=0;
      if ($tobool269) { __label__ = 74; break; } else { __label__ = 75; break; }
    case 74: // $if_then270
      var $251=$state;
      var $mode271=(($251)|0);
      HEAP32[(($mode271)>>2)]=11;
      __label__ = 81; break;
    case 75: // $if_else272
      var $252=$strm_addr;
      var $msg273=(($252+24)|0);
      HEAP32[(($msg273)>>2)]=((STRING_TABLE.__str253)|0);
      var $253=$state;
      var $mode274=(($253)|0);
      HEAP32[(($mode274)>>2)]=29;
      __label__ = 81; break;
    case 76: // $if_end275
      __label__ = 77; break;
    case 77: // $if_end276
      __label__ = 78; break;
    case 78: // $do_cond277
      var $254=$in;
      var $255=$last;
      var $cmp278=(($254)>>>0) < (($255)>>>0);
      if ($cmp278) { __label__ = 79; break; } else { var $258 = 0;__label__ = 80; break; }
    case 79: // $land_rhs
      var $256=$out;
      var $257=$end;
      var $cmp280=(($256)>>>0) < (($257)>>>0);
      var $258 = $cmp280;__label__ = 80; break;
    case 80: // $land_end
      var $258;
      if ($258) { __label__ = 1; break; } else { __label__ = 81; break; }
    case 81: // $do_end282
      var $259=$bits;
      var $shr283=$259 >>> 3;
      $len=$shr283;
      var $260=$len;
      var $261=$in;
      var $idx_neg284=(((-$260))|0);
      var $add_ptr285=(($261+$idx_neg284)|0);
      $in=$add_ptr285;
      var $262=$len;
      var $shl286=$262 << 3;
      var $263=$bits;
      var $sub287=(($263-$shl286)|0);
      $bits=$sub287;
      var $264=$bits;
      var $shl288=1 << $264;
      var $sub289=(($shl288-1)|0);
      var $265=$hold;
      var $and290=$265 & $sub289;
      $hold=$and290;
      var $266=$in;
      var $add_ptr291=(($266+1)|0);
      var $267=$strm_addr;
      var $next_in292=(($267)|0);
      HEAP32[(($next_in292)>>2)]=$add_ptr291;
      var $268=$out;
      var $add_ptr293=(($268+1)|0);
      var $269=$strm_addr;
      var $next_out294=(($269+12)|0);
      HEAP32[(($next_out294)>>2)]=$add_ptr293;
      var $270=$in;
      var $271=$last;
      var $cmp295=(($270)>>>0) < (($271)>>>0);
      if ($cmp295) { __label__ = 82; break; } else { __label__ = 83; break; }
    case 82: // $cond_true
      var $272=$last;
      var $273=$in;
      var $sub_ptr_lhs_cast297=$272;
      var $sub_ptr_rhs_cast298=$273;
      var $sub_ptr_sub299=(($sub_ptr_lhs_cast297-$sub_ptr_rhs_cast298)|0);
      var $add300=(($sub_ptr_sub299+5)|0);
      var $cond = $add300;__label__ = 84; break;
    case 83: // $cond_false
      var $274=$in;
      var $275=$last;
      var $sub_ptr_lhs_cast301=$274;
      var $sub_ptr_rhs_cast302=$275;
      var $sub_ptr_sub303=(($sub_ptr_lhs_cast301-$sub_ptr_rhs_cast302)|0);
      var $sub304=((5-$sub_ptr_sub303)|0);
      var $cond = $sub304;__label__ = 84; break;
    case 84: // $cond_end
      var $cond;
      var $276=$strm_addr;
      var $avail_in305=(($276+4)|0);
      HEAP32[(($avail_in305)>>2)]=$cond;
      var $277=$out;
      var $278=$end;
      var $cmp306=(($277)>>>0) < (($278)>>>0);
      if ($cmp306) { __label__ = 85; break; } else { __label__ = 86; break; }
    case 85: // $cond_true308
      var $279=$end;
      var $280=$out;
      var $sub_ptr_lhs_cast309=$279;
      var $sub_ptr_rhs_cast310=$280;
      var $sub_ptr_sub311=(($sub_ptr_lhs_cast309-$sub_ptr_rhs_cast310)|0);
      var $add312=(($sub_ptr_sub311+257)|0);
      var $cond319 = $add312;__label__ = 87; break;
    case 86: // $cond_false313
      var $281=$out;
      var $282=$end;
      var $sub_ptr_lhs_cast314=$281;
      var $sub_ptr_rhs_cast315=$282;
      var $sub_ptr_sub316=(($sub_ptr_lhs_cast314-$sub_ptr_rhs_cast315)|0);
      var $sub317=((257-$sub_ptr_sub316)|0);
      var $cond319 = $sub317;__label__ = 87; break;
    case 87: // $cond_end318
      var $cond319;
      var $283=$strm_addr;
      var $avail_out320=(($283+16)|0);
      HEAP32[(($avail_out320)>>2)]=$cond319;
      var $284=$hold;
      var $285=$state;
      var $hold321=(($285+56)|0);
      HEAP32[(($hold321)>>2)]=$284;
      var $286=$bits;
      var $287=$state;
      var $bits322=(($287+60)|0);
      HEAP32[(($bits322)>>2)]=$286;
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflate_fast["X"]=1;

function _zcalloc($opaque, $items, $size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $opaque_addr;
      var $items_addr;
      var $size_addr;
      $opaque_addr=$opaque;
      $items_addr=$items;
      $size_addr=$size;
      var $0=$opaque_addr;
      var $tobool=(($0)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $1=$size_addr;
      var $2=$size_addr;
      var $sub=(($1-$2)|0);
      var $3=$items_addr;
      var $add=(($3+$sub)|0);
      $items_addr=$add;
      __label__ = 2; break;
    case 2: // $if_end
      var $4=$items_addr;
      var $5=$size_addr;
      var $mul=(($4*$5)|0);
      var $call=_malloc($mul);
      ;
      return $call;
    default: assert(0, "bad label: " + __label__);
  }
}


function _zcfree($opaque, $ptr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $opaque_addr;
      var $ptr_addr;
      $opaque_addr=$opaque;
      $ptr_addr=$ptr;
      var $0=$ptr_addr;
      _free($0);
      var $1=$opaque_addr;
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      __label__ = 2; break;
    case 2: // $if_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _inflate_table($type, $lens, $codes, $table, $bits, $work) {
  var __stackBase__  = STACKTOP; STACKTOP += 68; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $type_addr;
      var $lens_addr;
      var $codes_addr;
      var $table_addr;
      var $bits_addr;
      var $work_addr;
      var $len;
      var $sym;
      var $min;
      var $max;
      var $root;
      var $curr;
      var $drop;
      var $left;
      var $used;
      var $huff;
      var $incr;
      var $fill;
      var $low;
      var $mask;
      var $here=__stackBase__;
      var $next;
      var $base;
      var $extra;
      var $end;
      var $count=__stackBase__+4;
      var $offs=__stackBase__+36;
      $type_addr=$type;
      $lens_addr=$lens;
      $codes_addr=$codes;
      $table_addr=$table;
      $bits_addr=$bits;
      $work_addr=$work;
      $len=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$len;
      var $cmp=(($0)>>>0) <= 15;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $1=$len;
      var $arrayidx=(($count+($1<<1))|0);
      HEAP16[(($arrayidx)>>1)]=0;
      __label__ = 3; break;
    case 3: // $for_inc
      var $2=$len;
      var $inc=(($2+1)|0);
      $len=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $sym=0;
      __label__ = 5; break;
    case 5: // $for_cond1
      var $3=$sym;
      var $4=$codes_addr;
      var $cmp2=(($3)>>>0) < (($4)>>>0);
      if ($cmp2) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body3
      var $5=$sym;
      var $6=$lens_addr;
      var $arrayidx4=(($6+($5<<1))|0);
      var $7=HEAPU16[(($arrayidx4)>>1)];
      var $idxprom=(($7)&65535);
      var $arrayidx5=(($count+($idxprom<<1))|0);
      var $8=HEAP16[(($arrayidx5)>>1)];
      var $inc6=(($8+1)&65535);
      HEAP16[(($arrayidx5)>>1)]=$inc6;
      __label__ = 7; break;
    case 7: // $for_inc7
      var $9=$sym;
      var $inc8=(($9+1)|0);
      $sym=$inc8;
      __label__ = 5; break;
    case 8: // $for_end9
      var $10=$bits_addr;
      var $11=HEAP32[(($10)>>2)];
      $root=$11;
      $max=15;
      __label__ = 9; break;
    case 9: // $for_cond10
      var $12=$max;
      var $cmp11=(($12)>>>0) >= 1;
      if ($cmp11) { __label__ = 10; break; } else { __label__ = 14; break; }
    case 10: // $for_body12
      var $13=$max;
      var $arrayidx13=(($count+($13<<1))|0);
      var $14=HEAPU16[(($arrayidx13)>>1)];
      var $conv=(($14)&65535);
      var $cmp14=(($conv)|0)!=0;
      if ($cmp14) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then
      __label__ = 14; break;
    case 12: // $if_end
      __label__ = 13; break;
    case 13: // $for_inc16
      var $15=$max;
      var $dec=(($15-1)|0);
      $max=$dec;
      __label__ = 9; break;
    case 14: // $for_end17
      var $16=$root;
      var $17=$max;
      var $cmp18=(($16)>>>0) > (($17)>>>0);
      if ($cmp18) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then20
      var $18=$max;
      $root=$18;
      __label__ = 16; break;
    case 16: // $if_end21
      var $19=$max;
      var $cmp22=(($19)|0)==0;
      if ($cmp22) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then24
      var $op=(($here)|0);
      HEAP8[($op)]=64;
      var $bits25=(($here+1)|0);
      HEAP8[($bits25)]=1;
      var $val=(($here+2)|0);
      HEAP16[(($val)>>1)]=0;
      var $20=$table_addr;
      var $21=HEAP32[(($20)>>2)];
      var $incdec_ptr=(($21+4)|0);
      HEAP32[(($20)>>2)]=$incdec_ptr;
      var $22=$21;
      var $23=$here;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($22)>>1)]=HEAP16[(($23)>>1)];HEAP16[(($22+2)>>1)]=HEAP16[(($23+2)>>1)];
      var $24=$table_addr;
      var $25=HEAP32[(($24)>>2)];
      var $incdec_ptr26=(($25+4)|0);
      HEAP32[(($24)>>2)]=$incdec_ptr26;
      var $26=$25;
      var $27=$here;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($26)>>1)]=HEAP16[(($27)>>1)];HEAP16[(($26+2)>>1)]=HEAP16[(($27+2)>>1)];
      var $28=$bits_addr;
      HEAP32[(($28)>>2)]=1;
      $retval=0;
      __label__ = 104; break;
    case 18: // $if_end27
      $min=1;
      __label__ = 19; break;
    case 19: // $for_cond28
      var $29=$min;
      var $30=$max;
      var $cmp29=(($29)>>>0) < (($30)>>>0);
      if ($cmp29) { __label__ = 20; break; } else { __label__ = 24; break; }
    case 20: // $for_body31
      var $31=$min;
      var $arrayidx32=(($count+($31<<1))|0);
      var $32=HEAPU16[(($arrayidx32)>>1)];
      var $conv33=(($32)&65535);
      var $cmp34=(($conv33)|0)!=0;
      if ($cmp34) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: // $if_then36
      __label__ = 24; break;
    case 22: // $if_end37
      __label__ = 23; break;
    case 23: // $for_inc38
      var $33=$min;
      var $inc39=(($33+1)|0);
      $min=$inc39;
      __label__ = 19; break;
    case 24: // $for_end40
      var $34=$root;
      var $35=$min;
      var $cmp41=(($34)>>>0) < (($35)>>>0);
      if ($cmp41) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $if_then43
      var $36=$min;
      $root=$36;
      __label__ = 26; break;
    case 26: // $if_end44
      $left=1;
      $len=1;
      __label__ = 27; break;
    case 27: // $for_cond45
      var $37=$len;
      var $cmp46=(($37)>>>0) <= 15;
      if ($cmp46) { __label__ = 28; break; } else { __label__ = 32; break; }
    case 28: // $for_body48
      var $38=$left;
      var $shl=$38 << 1;
      $left=$shl;
      var $39=$len;
      var $arrayidx49=(($count+($39<<1))|0);
      var $40=HEAPU16[(($arrayidx49)>>1)];
      var $conv50=(($40)&65535);
      var $41=$left;
      var $sub=(($41-$conv50)|0);
      $left=$sub;
      var $42=$left;
      var $cmp51=(($42)|0) < 0;
      if ($cmp51) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: // $if_then53
      $retval=-1;
      __label__ = 104; break;
    case 30: // $if_end54
      __label__ = 31; break;
    case 31: // $for_inc55
      var $43=$len;
      var $inc56=(($43+1)|0);
      $len=$inc56;
      __label__ = 27; break;
    case 32: // $for_end57
      var $44=$left;
      var $cmp58=(($44)|0) > 0;
      if ($cmp58) { __label__ = 33; break; } else { __label__ = 36; break; }
    case 33: // $land_lhs_true
      var $45=$type_addr;
      var $cmp60=(($45)|0)==0;
      if ($cmp60) { __label__ = 35; break; } else { __label__ = 34; break; }
    case 34: // $lor_lhs_false
      var $46=$max;
      var $cmp62=(($46)|0)!=1;
      if ($cmp62) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $if_then64
      $retval=-1;
      __label__ = 104; break;
    case 36: // $if_end65
      var $arrayidx66=(($offs+2)|0);
      HEAP16[(($arrayidx66)>>1)]=0;
      $len=1;
      __label__ = 37; break;
    case 37: // $for_cond67
      var $47=$len;
      var $cmp68=(($47)>>>0) < 15;
      if ($cmp68) { __label__ = 38; break; } else { __label__ = 40; break; }
    case 38: // $for_body70
      var $48=$len;
      var $arrayidx71=(($offs+($48<<1))|0);
      var $49=HEAPU16[(($arrayidx71)>>1)];
      var $conv72=(($49)&65535);
      var $50=$len;
      var $arrayidx73=(($count+($50<<1))|0);
      var $51=HEAPU16[(($arrayidx73)>>1)];
      var $conv74=(($51)&65535);
      var $add=(($conv72+$conv74)|0);
      var $conv75=(($add) & 65535);
      var $52=$len;
      var $add76=(($52+1)|0);
      var $arrayidx77=(($offs+($add76<<1))|0);
      HEAP16[(($arrayidx77)>>1)]=$conv75;
      __label__ = 39; break;
    case 39: // $for_inc78
      var $53=$len;
      var $inc79=(($53+1)|0);
      $len=$inc79;
      __label__ = 37; break;
    case 40: // $for_end80
      $sym=0;
      __label__ = 41; break;
    case 41: // $for_cond81
      var $54=$sym;
      var $55=$codes_addr;
      var $cmp82=(($54)>>>0) < (($55)>>>0);
      if ($cmp82) { __label__ = 42; break; } else { __label__ = 46; break; }
    case 42: // $for_body84
      var $56=$sym;
      var $57=$lens_addr;
      var $arrayidx85=(($57+($56<<1))|0);
      var $58=HEAPU16[(($arrayidx85)>>1)];
      var $conv86=(($58)&65535);
      var $cmp87=(($conv86)|0)!=0;
      if ($cmp87) { __label__ = 43; break; } else { __label__ = 44; break; }
    case 43: // $if_then89
      var $59=$sym;
      var $conv90=(($59) & 65535);
      var $60=$sym;
      var $61=$lens_addr;
      var $arrayidx91=(($61+($60<<1))|0);
      var $62=HEAPU16[(($arrayidx91)>>1)];
      var $idxprom92=(($62)&65535);
      var $arrayidx93=(($offs+($idxprom92<<1))|0);
      var $63=HEAPU16[(($arrayidx93)>>1)];
      var $inc94=(($63+1)&65535);
      HEAP16[(($arrayidx93)>>1)]=$inc94;
      var $idxprom95=(($63)&65535);
      var $64=$work_addr;
      var $arrayidx96=(($64+($idxprom95<<1))|0);
      HEAP16[(($arrayidx96)>>1)]=$conv90;
      __label__ = 44; break;
    case 44: // $if_end97
      __label__ = 45; break;
    case 45: // $for_inc98
      var $65=$sym;
      var $inc99=(($65+1)|0);
      $sym=$inc99;
      __label__ = 41; break;
    case 46: // $for_end100
      var $66=$type_addr;
      if ($66 == 0) {
        __label__ = 47; break;
      }
      else if ($66 == 1) {
        __label__ = 48; break;
      }
      else {
      __label__ = 49; break;
      }
      
    case 47: // $sw_bb
      var $67=$work_addr;
      $extra=$67;
      $base=$67;
      $end=19;
      __label__ = 50; break;
    case 48: // $sw_bb101
      $base=((_inflate_table_lbase)|0);
      var $68=$base;
      var $add_ptr=(($68-514)|0);
      $base=$add_ptr;
      $extra=((_inflate_table_lext)|0);
      var $69=$extra;
      var $add_ptr102=(($69-514)|0);
      $extra=$add_ptr102;
      $end=256;
      __label__ = 50; break;
    case 49: // $sw_default
      $base=((_inflate_table_dbase)|0);
      $extra=((_inflate_table_dext)|0);
      $end=-1;
      __label__ = 50; break;
    case 50: // $sw_epilog
      $huff=0;
      $sym=0;
      var $70=$min;
      $len=$70;
      var $71=$table_addr;
      var $72=HEAP32[(($71)>>2)];
      $next=$72;
      var $73=$root;
      $curr=$73;
      $drop=0;
      $low=-1;
      var $74=$root;
      var $shl103=1 << $74;
      $used=$shl103;
      var $75=$used;
      var $sub104=(($75-1)|0);
      $mask=$sub104;
      var $76=$type_addr;
      var $cmp105=(($76)|0)==1;
      if ($cmp105) { __label__ = 51; break; } else { __label__ = 52; break; }
    case 51: // $land_lhs_true107
      var $77=$used;
      var $cmp108=(($77)>>>0) >= 852;
      if ($cmp108) { __label__ = 54; break; } else { __label__ = 52; break; }
    case 52: // $lor_lhs_false110
      var $78=$type_addr;
      var $cmp111=(($78)|0)==2;
      if ($cmp111) { __label__ = 53; break; } else { __label__ = 55; break; }
    case 53: // $land_lhs_true113
      var $79=$used;
      var $cmp114=(($79)>>>0) >= 592;
      if ($cmp114) { __label__ = 54; break; } else { __label__ = 55; break; }
    case 54: // $if_then116
      $retval=1;
      __label__ = 104; break;
    case 55: // $if_end117
      __label__ = 56; break;
    case 56: // $for_cond118
      var $80=$len;
      var $81=$drop;
      var $sub119=(($80-$81)|0);
      var $conv120=(($sub119) & 255);
      var $bits121=(($here+1)|0);
      HEAP8[($bits121)]=$conv120;
      var $82=$sym;
      var $83=$work_addr;
      var $arrayidx122=(($83+($82<<1))|0);
      var $84=HEAPU16[(($arrayidx122)>>1)];
      var $conv123=(($84)&65535);
      var $85=$end;
      var $cmp124=(($conv123)|0) < (($85)|0);
      if ($cmp124) { __label__ = 57; break; } else { __label__ = 58; break; }
    case 57: // $if_then126
      var $op127=(($here)|0);
      HEAP8[($op127)]=0;
      var $86=$sym;
      var $87=$work_addr;
      var $arrayidx128=(($87+($86<<1))|0);
      var $88=HEAP16[(($arrayidx128)>>1)];
      var $val129=(($here+2)|0);
      HEAP16[(($val129)>>1)]=$88;
      __label__ = 62; break;
    case 58: // $if_else
      var $89=$sym;
      var $90=$work_addr;
      var $arrayidx130=(($90+($89<<1))|0);
      var $91=HEAPU16[(($arrayidx130)>>1)];
      var $conv131=(($91)&65535);
      var $92=$end;
      var $cmp132=(($conv131)|0) > (($92)|0);
      if ($cmp132) { __label__ = 59; break; } else { __label__ = 60; break; }
    case 59: // $if_then134
      var $93=$sym;
      var $94=$work_addr;
      var $arrayidx135=(($94+($93<<1))|0);
      var $95=HEAPU16[(($arrayidx135)>>1)];
      var $idxprom136=(($95)&65535);
      var $96=$extra;
      var $arrayidx137=(($96+($idxprom136<<1))|0);
      var $97=HEAP16[(($arrayidx137)>>1)];
      var $conv138=(($97) & 255);
      var $op139=(($here)|0);
      HEAP8[($op139)]=$conv138;
      var $98=$sym;
      var $99=$work_addr;
      var $arrayidx140=(($99+($98<<1))|0);
      var $100=HEAPU16[(($arrayidx140)>>1)];
      var $idxprom141=(($100)&65535);
      var $101=$base;
      var $arrayidx142=(($101+($idxprom141<<1))|0);
      var $102=HEAP16[(($arrayidx142)>>1)];
      var $val143=(($here+2)|0);
      HEAP16[(($val143)>>1)]=$102;
      __label__ = 61; break;
    case 60: // $if_else144
      var $op145=(($here)|0);
      HEAP8[($op145)]=96;
      var $val146=(($here+2)|0);
      HEAP16[(($val146)>>1)]=0;
      __label__ = 61; break;
    case 61: // $if_end147
      __label__ = 62; break;
    case 62: // $if_end148
      var $103=$len;
      var $104=$drop;
      var $sub149=(($103-$104)|0);
      var $shl150=1 << $sub149;
      $incr=$shl150;
      var $105=$curr;
      var $shl151=1 << $105;
      $fill=$shl151;
      var $106=$fill;
      $min=$106;
      __label__ = 63; break;
    case 63: // $do_body
      var $107=$incr;
      var $108=$fill;
      var $sub152=(($108-$107)|0);
      $fill=$sub152;
      var $109=$huff;
      var $110=$drop;
      var $shr=$109 >>> (($110)>>>0);
      var $111=$fill;
      var $add153=(($shr+$111)|0);
      var $112=$next;
      var $arrayidx154=(($112+($add153<<2))|0);
      var $113=$arrayidx154;
      var $114=$here;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($113)>>1)]=HEAP16[(($114)>>1)];HEAP16[(($113+2)>>1)]=HEAP16[(($114+2)>>1)];
      __label__ = 64; break;
    case 64: // $do_cond
      var $115=$fill;
      var $cmp155=(($115)|0)!=0;
      if ($cmp155) { __label__ = 63; break; } else { __label__ = 65; break; }
    case 65: // $do_end
      var $116=$len;
      var $sub157=(($116-1)|0);
      var $shl158=1 << $sub157;
      $incr=$shl158;
      __label__ = 66; break;
    case 66: // $while_cond
      var $117=$huff;
      var $118=$incr;
      var $and=$117 & $118;
      var $tobool=(($and)|0)!=0;
      if ($tobool) { __label__ = 67; break; } else { __label__ = 68; break; }
    case 67: // $while_body
      var $119=$incr;
      var $shr159=$119 >>> 1;
      $incr=$shr159;
      __label__ = 66; break;
    case 68: // $while_end
      var $120=$incr;
      var $cmp160=(($120)|0)!=0;
      if ($cmp160) { __label__ = 69; break; } else { __label__ = 70; break; }
    case 69: // $if_then162
      var $121=$incr;
      var $sub163=(($121-1)|0);
      var $122=$huff;
      var $and164=$122 & $sub163;
      $huff=$and164;
      var $123=$incr;
      var $124=$huff;
      var $add165=(($124+$123)|0);
      $huff=$add165;
      __label__ = 71; break;
    case 70: // $if_else166
      $huff=0;
      __label__ = 71; break;
    case 71: // $if_end167
      var $125=$sym;
      var $inc168=(($125+1)|0);
      $sym=$inc168;
      var $126=$len;
      var $arrayidx169=(($count+($126<<1))|0);
      var $127=HEAP16[(($arrayidx169)>>1)];
      var $dec170=(($127-1)&65535);
      HEAP16[(($arrayidx169)>>1)]=$dec170;
      var $conv171=(($dec170)&65535);
      var $cmp172=(($conv171)|0)==0;
      if ($cmp172) { __label__ = 72; break; } else { __label__ = 75; break; }
    case 72: // $if_then174
      var $128=$len;
      var $129=$max;
      var $cmp175=(($128)|0)==(($129)|0);
      if ($cmp175) { __label__ = 73; break; } else { __label__ = 74; break; }
    case 73: // $if_then177
      __label__ = 91; break;
    case 74: // $if_end178
      var $130=$sym;
      var $131=$work_addr;
      var $arrayidx179=(($131+($130<<1))|0);
      var $132=HEAPU16[(($arrayidx179)>>1)];
      var $idxprom180=(($132)&65535);
      var $133=$lens_addr;
      var $arrayidx181=(($133+($idxprom180<<1))|0);
      var $134=HEAPU16[(($arrayidx181)>>1)];
      var $conv182=(($134)&65535);
      $len=$conv182;
      __label__ = 75; break;
    case 75: // $if_end183
      var $135=$len;
      var $136=$root;
      var $cmp184=(($135)>>>0) > (($136)>>>0);
      if ($cmp184) { __label__ = 76; break; } else { __label__ = 90; break; }
    case 76: // $land_lhs_true186
      var $137=$huff;
      var $138=$mask;
      var $and187=$137 & $138;
      var $139=$low;
      var $cmp188=(($and187)|0)!=(($139)|0);
      if ($cmp188) { __label__ = 77; break; } else { __label__ = 90; break; }
    case 77: // $if_then190
      var $140=$drop;
      var $cmp191=(($140)|0)==0;
      if ($cmp191) { __label__ = 78; break; } else { __label__ = 79; break; }
    case 78: // $if_then193
      var $141=$root;
      $drop=$141;
      __label__ = 79; break;
    case 79: // $if_end194
      var $142=$min;
      var $143=$next;
      var $add_ptr195=(($143+($142<<2))|0);
      $next=$add_ptr195;
      var $144=$len;
      var $145=$drop;
      var $sub196=(($144-$145)|0);
      $curr=$sub196;
      var $146=$curr;
      var $shl197=1 << $146;
      $left=$shl197;
      __label__ = 80; break;
    case 80: // $while_cond198
      var $147=$curr;
      var $148=$drop;
      var $add199=(($147+$148)|0);
      var $149=$max;
      var $cmp200=(($add199)>>>0) < (($149)>>>0);
      if ($cmp200) { __label__ = 81; break; } else { __label__ = 84; break; }
    case 81: // $while_body202
      var $150=$curr;
      var $151=$drop;
      var $add203=(($150+$151)|0);
      var $arrayidx204=(($count+($add203<<1))|0);
      var $152=HEAPU16[(($arrayidx204)>>1)];
      var $conv205=(($152)&65535);
      var $153=$left;
      var $sub206=(($153-$conv205)|0);
      $left=$sub206;
      var $154=$left;
      var $cmp207=(($154)|0) <= 0;
      if ($cmp207) { __label__ = 82; break; } else { __label__ = 83; break; }
    case 82: // $if_then209
      __label__ = 84; break;
    case 83: // $if_end210
      var $155=$curr;
      var $inc211=(($155+1)|0);
      $curr=$inc211;
      var $156=$left;
      var $shl212=$156 << 1;
      $left=$shl212;
      __label__ = 80; break;
    case 84: // $while_end213
      var $157=$curr;
      var $shl214=1 << $157;
      var $158=$used;
      var $add215=(($158+$shl214)|0);
      $used=$add215;
      var $159=$type_addr;
      var $cmp216=(($159)|0)==1;
      if ($cmp216) { __label__ = 85; break; } else { __label__ = 86; break; }
    case 85: // $land_lhs_true218
      var $160=$used;
      var $cmp219=(($160)>>>0) >= 852;
      if ($cmp219) { __label__ = 88; break; } else { __label__ = 86; break; }
    case 86: // $lor_lhs_false221
      var $161=$type_addr;
      var $cmp222=(($161)|0)==2;
      if ($cmp222) { __label__ = 87; break; } else { __label__ = 89; break; }
    case 87: // $land_lhs_true224
      var $162=$used;
      var $cmp225=(($162)>>>0) >= 592;
      if ($cmp225) { __label__ = 88; break; } else { __label__ = 89; break; }
    case 88: // $if_then227
      $retval=1;
      __label__ = 104; break;
    case 89: // $if_end228
      var $163=$huff;
      var $164=$mask;
      var $and229=$163 & $164;
      $low=$and229;
      var $165=$curr;
      var $conv230=(($165) & 255);
      var $166=$low;
      var $167=$table_addr;
      var $168=HEAP32[(($167)>>2)];
      var $arrayidx231=(($168+($166<<2))|0);
      var $op232=(($arrayidx231)|0);
      HEAP8[($op232)]=$conv230;
      var $169=$root;
      var $conv233=(($169) & 255);
      var $170=$low;
      var $171=$table_addr;
      var $172=HEAP32[(($171)>>2)];
      var $arrayidx234=(($172+($170<<2))|0);
      var $bits235=(($arrayidx234+1)|0);
      HEAP8[($bits235)]=$conv233;
      var $173=$next;
      var $174=$table_addr;
      var $175=HEAP32[(($174)>>2)];
      var $sub_ptr_lhs_cast=$173;
      var $sub_ptr_rhs_cast=$175;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $conv236=(($sub_ptr_div) & 65535);
      var $176=$low;
      var $177=$table_addr;
      var $178=HEAP32[(($177)>>2)];
      var $arrayidx237=(($178+($176<<2))|0);
      var $val238=(($arrayidx237+2)|0);
      HEAP16[(($val238)>>1)]=$conv236;
      __label__ = 90; break;
    case 90: // $if_end239
      __label__ = 56; break;
    case 91: // $for_end240
      var $op241=(($here)|0);
      HEAP8[($op241)]=64;
      var $179=$len;
      var $180=$drop;
      var $sub242=(($179-$180)|0);
      var $conv243=(($sub242) & 255);
      var $bits244=(($here+1)|0);
      HEAP8[($bits244)]=$conv243;
      var $val245=(($here+2)|0);
      HEAP16[(($val245)>>1)]=0;
      __label__ = 92; break;
    case 92: // $while_cond246
      var $181=$huff;
      var $cmp247=(($181)|0)!=0;
      if ($cmp247) { __label__ = 93; break; } else { __label__ = 103; break; }
    case 93: // $while_body249
      var $182=$drop;
      var $cmp250=(($182)|0)!=0;
      if ($cmp250) { __label__ = 94; break; } else { __label__ = 96; break; }
    case 94: // $land_lhs_true252
      var $183=$huff;
      var $184=$mask;
      var $and253=$183 & $184;
      var $185=$low;
      var $cmp254=(($and253)|0)!=(($185)|0);
      if ($cmp254) { __label__ = 95; break; } else { __label__ = 96; break; }
    case 95: // $if_then256
      $drop=0;
      var $186=$root;
      $len=$186;
      var $187=$table_addr;
      var $188=HEAP32[(($187)>>2)];
      $next=$188;
      var $189=$len;
      var $conv257=(($189) & 255);
      var $bits258=(($here+1)|0);
      HEAP8[($bits258)]=$conv257;
      __label__ = 96; break;
    case 96: // $if_end259
      var $190=$huff;
      var $191=$drop;
      var $shr260=$190 >>> (($191)>>>0);
      var $192=$next;
      var $arrayidx261=(($192+($shr260<<2))|0);
      var $193=$arrayidx261;
      var $194=$here;
      assert(4 % 1 === 0, 'memcpy given ' + 4 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP16[(($193)>>1)]=HEAP16[(($194)>>1)];HEAP16[(($193+2)>>1)]=HEAP16[(($194+2)>>1)];
      var $195=$len;
      var $sub262=(($195-1)|0);
      var $shl263=1 << $sub262;
      $incr=$shl263;
      __label__ = 97; break;
    case 97: // $while_cond264
      var $196=$huff;
      var $197=$incr;
      var $and265=$196 & $197;
      var $tobool266=(($and265)|0)!=0;
      if ($tobool266) { __label__ = 98; break; } else { __label__ = 99; break; }
    case 98: // $while_body267
      var $198=$incr;
      var $shr268=$198 >>> 1;
      $incr=$shr268;
      __label__ = 97; break;
    case 99: // $while_end269
      var $199=$incr;
      var $cmp270=(($199)|0)!=0;
      if ($cmp270) { __label__ = 100; break; } else { __label__ = 101; break; }
    case 100: // $if_then272
      var $200=$incr;
      var $sub273=(($200-1)|0);
      var $201=$huff;
      var $and274=$201 & $sub273;
      $huff=$and274;
      var $202=$incr;
      var $203=$huff;
      var $add275=(($203+$202)|0);
      $huff=$add275;
      __label__ = 102; break;
    case 101: // $if_else276
      $huff=0;
      __label__ = 102; break;
    case 102: // $if_end277
      __label__ = 92; break;
    case 103: // $while_end278
      var $204=$used;
      var $205=$table_addr;
      var $206=HEAP32[(($205)>>2)];
      var $add_ptr279=(($206+($204<<2))|0);
      HEAP32[(($205)>>2)]=$add_ptr279;
      var $207=$root;
      var $208=$bits_addr;
      HEAP32[(($208)>>2)]=$207;
      $retval=0;
      __label__ = 104; break;
    case 104: // $return
      var $209=$retval;
      STACKTOP = __stackBase__;
      return $209;
    default: assert(0, "bad label: " + __label__);
  }
}
_inflate_table["X"]=1;

function _malloc($bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bytes_addr;
      var $mem;
      var $nb;
      var $idx;
      var $smallbits;
      var $b;
      var $p;
      var $F;
      var $b33;
      var $p34;
      var $r;
      var $rsize;
      var $i;
      var $leftbits;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $F68;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F102;
      var $rsize157;
      var $p159;
      var $r163;
      var $dvs;
      var $rsize185;
      var $p187;
      var $r188;
      $bytes_addr=$bytes;
      var $0=$bytes_addr; //@line 4628 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)>>>0) <= 244; //@line 4628 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 36; break; } //@line 4628 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$bytes_addr; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($1)>>>0) < 11; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_true
      var $cond = 16;__label__ = 4; break; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_false
      var $2=$bytes_addr; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($2+4)|0); //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add2=(($add+7)|0); //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$add2 & -8; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $and;__label__ = 4; break; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_end
      var $cond; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nb=$cond; //@line 4631 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=$nb; //@line 4632 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$3 >>> 3; //@line 4632 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $idx=$shr; //@line 4632 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=HEAPU32[((((__gm_)|0))>>2)]; //@line 4633 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$idx; //@line 4633 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr3=$4 >>> (($5)>>>0); //@line 4633 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $smallbits=$shr3; //@line 4633 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$smallbits; //@line 4635 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and4=$6 & 3; //@line 4635 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp5=(($and4)|0)!=0; //@line 4635 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 12; break; } //@line 4635 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then6
      var $7=$smallbits; //@line 4637 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$7 ^ -1; //@line 4637 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and7=$neg & 1; //@line 4637 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$idx; //@line 4637 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add8=(($8+$and7)|0); //@line 4637 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $idx=$add8; //@line 4637 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$idx; //@line 4638 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=$9 << 1; //@line 4638 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=((((__gm_+40)|0)+($shl<<2))|0); //@line 4638 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$arrayidx; //@line 4638 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$10; //@line 4638 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $b=$11; //@line 4638 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$b; //@line 4639 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($12+8)|0); //@line 4639 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($fd)>>2)]; //@line 4639 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$13; //@line 4639 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$p; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd9=(($14+8)|0); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($fd9)>>2)]; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$15; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$b; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$F; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp10=(($16)|0)==(($17)|0); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp10) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then11
      var $18=$idx; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl12=1 << $18; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg13=$shl12 ^ -1; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[((((__gm_)|0))>>2)]; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and14=$19 & $neg13; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and14; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_else
      var $20=$F; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$20; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp15=(($21)>>>0) >= (($22)>>>0); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp15)&1); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($expval)|0)!=0; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_then16
      var $23=$F; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=$b; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd17=(($24+8)|0); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd17)>>2)]=$23; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$b; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$F; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($26+12)|0); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk)>>2)]=$25; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_else18
      _abort(); //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4641 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end
      __label__ = 11; break;
    case 11: // $if_end19
      var $27=$idx; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl20=$27 << 3; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$shl20 | 1; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or21=$or | 2; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$p; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($28+4)|0); //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or21; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$p; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=$29; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=$idx; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl22=$31 << 3; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($30+$shl22)|0); //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$add_ptr; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head23=(($32+4)|0); //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=HEAP32[(($head23)>>2)]; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or24=$33 | 1; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head23)>>2)]=$or24; //@line 4642 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=$p; //@line 4643 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $35=$34; //@line 4643 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr25=(($35+8)|0); //@line 4643 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr25; //@line 4643 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4645 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_else26
      var $36=$nb; //@line 4648 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $37=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4648 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp27=(($36)>>>0) > (($37)>>>0); //@line 4648 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp27) { __label__ = 13; break; } else { __label__ = 34; break; } //@line 4648 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then29
      var $38=$smallbits; //@line 4649 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp30=(($38)|0)!=0; //@line 4649 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp30) { __label__ = 14; break; } else { __label__ = 29; break; } //@line 4649 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then32
      var $39=$smallbits; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=$idx; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl35=$39 << $40; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$idx; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl36=1 << $41; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl37=$shl36 << 1; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=$idx; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl38=1 << $42; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl39=$shl38 << 1; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(((-$shl39))|0); //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or40=$shl37 | $sub; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and41=$shl35 & $or40; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $leftbits=$and41; //@line 4653 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=$leftbits; //@line 4654 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=$leftbits; //@line 4654 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub42=(((-$44))|0); //@line 4654 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and43=$43 & $sub42; //@line 4654 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $leastbit=$and43; //@line 4654 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=$leastbit; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub44=(($45-1)|0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$sub44; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $46=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr45=$46 >>> 12; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and46=$shr45 & 16; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and46; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$K; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$47; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$K; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $49=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr47=$49 >>> (($48)>>>0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr47; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $50=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr48=$50 >>> 5; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and49=$shr48 & 8; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and49; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $51=$N; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add50=(($51+$and49)|0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add50; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=$K; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr51=$53 >>> (($52)>>>0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr51; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $54=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr52=$54 >>> 2; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and53=$shr52 & 4; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and53; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=$N; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add54=(($55+$and53)|0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add54; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $56=$K; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr55=$57 >>> (($56)>>>0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr55; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $58=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr56=$58 >>> 1; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and57=$shr56 & 2; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and57; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=$N; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add58=(($59+$and57)|0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add58; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $60=$K; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $61=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr59=$61 >>> (($60)>>>0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr59; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr60=$62 >>> 1; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and61=$shr60 & 1; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and61; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $63=$N; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add62=(($63+$and61)|0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add62; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=$K; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $65=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr63=$65 >>> (($64)>>>0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr63; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$N; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$Y; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add64=(($66+$67)|0); //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $i=$add64; //@line 4655 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=$i; //@line 4656 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl65=$68 << 1; //@line 4656 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx66=((((__gm_+40)|0)+($shl65<<2))|0); //@line 4656 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $69=$arrayidx66; //@line 4656 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=$69; //@line 4656 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $b33=$70; //@line 4656 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $71=$b33; //@line 4657 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd67=(($71+8)|0); //@line 4657 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($fd67)>>2)]; //@line 4657 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p34=$72; //@line 4657 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $73=$p34; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd69=(($73+8)|0); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[(($fd69)>>2)]; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F68=$74; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=$b33; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=$F68; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp70=(($75)|0)==(($76)|0); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp70) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_then72
      var $77=$i; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl73=1 << $77; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg74=$shl73 ^ -1; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[((((__gm_)|0))>>2)]; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and75=$78 & $neg74; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and75; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_else76
      var $79=$F68; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $80=$79; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $81=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp77=(($80)>>>0) >= (($81)>>>0); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv78=(($cmp77)&1); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval79=(($conv78)==(1)); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool80=(($expval79)|0)!=0; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool80) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then81
      var $82=$F68; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $83=$b33; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd82=(($83+8)|0); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd82)>>2)]=$82; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $84=$b33; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $85=$F68; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk83=(($85+12)|0); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk83)>>2)]=$84; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_else84
      _abort(); //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4659 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end85
      __label__ = 20; break;
    case 20: // $if_end86
      var $86=$i; //@line 4660 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl87=$86 << 3; //@line 4660 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $87=$nb; //@line 4660 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub88=(($shl87-$87)|0); //@line 4660 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub88; //@line 4660 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=$nb; //@line 4665 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or89=$88 | 1; //@line 4665 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or90=$or89 | 2; //@line 4665 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $89=$p34; //@line 4665 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head91=(($89+4)|0); //@line 4665 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head91)>>2)]=$or90; //@line 4665 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $90=$p34; //@line 4666 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $91=$90; //@line 4666 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $92=$nb; //@line 4666 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr92=(($91+$92)|0); //@line 4666 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=$add_ptr92; //@line 4666 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $r=$93; //@line 4666 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $94=$rsize; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or93=$94 | 1; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $95=$r; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head94=(($95+4)|0); //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head94)>>2)]=$or93; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=$rsize; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $97=$r; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $98=$97; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $99=$rsize; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr95=(($98+$99)|0); //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $100=$add_ptr95; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($100)|0); //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$96; //@line 4667 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $DVS=$101; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $102=$DVS; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp96=(($102)|0)!=0; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp96) { __label__ = 21; break; } else { __label__ = 28; break; } //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_then98
      var $103=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $DV=$103; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $104=$DVS; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr99=$104 >>> 3; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$shr99; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $105=$I; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl100=$105 << 1; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx101=((((__gm_+40)|0)+($shl100<<2))|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=$arrayidx101; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $107=$106; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B=$107; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=$B; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F102=$108; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $109=HEAP32[((((__gm_)|0))>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $110=$I; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl103=1 << $110; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and104=$109 & $shl103; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool105=(($and104)|0)!=0; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool105) { __label__ = 23; break; } else { __label__ = 22; break; } //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_then106
      var $111=$I; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl107=1 << $111; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=HEAP32[((((__gm_)|0))>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or108=$112 | $shl107; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$or108; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_else109
      var $113=$B; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd110=(($113+8)|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($fd110)>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $115=$114; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $116=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp111=(($115)>>>0) >= (($116)>>>0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv112=(($cmp111)&1); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval113=(($conv112)==(1)); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool114=(($expval113)|0)!=0; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool114) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then115
      var $117=$B; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd116=(($117+8)|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $118=HEAP32[(($fd116)>>2)]; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F102=$118; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_else117
      _abort(); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end118
      __label__ = 27; break;
    case 27: // $if_end119
      var $119=$DV; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $120=$B; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd120=(($120+8)|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd120)>>2)]=$119; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=$DV; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $122=$F102; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk121=(($122+12)|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk121)>>2)]=$121; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $123=$F102; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $124=$DV; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd122=(($124+8)|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd122)>>2)]=$123; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=$B; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$DV; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk123=(($126+12)|0); //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk123)>>2)]=$125; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_end124
      var $127=$rsize; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$127; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=$r; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$128; //@line 4668 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=$p34; //@line 4670 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $130=$129; //@line 4670 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr125=(($130+8)|0); //@line 4670 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr125; //@line 4670 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_else126
      var $131=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp127=(($131)|0)!=0; //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp127) { __label__ = 30; break; } else { __label__ = 32; break; } //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $land_lhs_true
      var $132=$nb; //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call=_tmalloc_small(__gm_, $132); //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$call; //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp129=(($call)|0)!=0; //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp129) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 4675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then131
      __label__ = 52; break; //@line 4677 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_end132
      __label__ = 33; break;
    case 33: // $if_end133
      __label__ = 34; break; //@line 4679 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_end134
      __label__ = 35; break;
    case 35: // $if_end135
      __label__ = 43; break; //@line 4680 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_else136
      var $133=$bytes_addr; //@line 4681 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp137=(($133)>>>0) >= 4294967232; //@line 4681 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp137) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 4681 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then139
      $nb=-1; //@line 4682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 42; break; //@line 4682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else140
      var $134=$bytes_addr; //@line 4684 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add141=(($134+4)|0); //@line 4684 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add142=(($add141+7)|0); //@line 4684 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and143=$add142 & -8; //@line 4684 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nb=$and143; //@line 4684 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp144=(($135)|0)!=0; //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp144) { __label__ = 39; break; } else { __label__ = 41; break; } //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 39: // $land_lhs_true146
      var $136=$nb; //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call147=_tmalloc_large(__gm_, $136); //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$call147; //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp148=(($call147)|0)!=0; //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp148) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 4685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then150
      __label__ = 52; break; //@line 4687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_end151
      __label__ = 42; break;
    case 42: // $if_end152
      __label__ = 43; break;
    case 43: // $if_end153
      var $137=$nb; //@line 4691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $138=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp154=(($137)>>>0) <= (($138)>>>0); //@line 4691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp154) { __label__ = 44; break; } else { __label__ = 48; break; } //@line 4691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_then156
      var $139=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4692 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$nb; //@line 4692 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub158=(($139-$140)|0); //@line 4692 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize157=$sub158; //@line 4692 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4693 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p159=$141; //@line 4693 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $142=$rsize157; //@line 4694 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp160=(($142)>>>0) >= 16; //@line 4694 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp160) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 4694 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_then162
      var $143=$p159; //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144=$143; //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $145=$nb; //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr164=(($144+$145)|0); //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=$add_ptr164; //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$146; //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $r163=$146; //@line 4695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $147=$rsize157; //@line 4696 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$147; //@line 4696 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $148=$rsize157; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or165=$148 | 1; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=$r163; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head166=(($149+4)|0); //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head166)>>2)]=$or165; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $150=$rsize157; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=$r163; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $152=$151; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $153=$rsize157; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr167=(($152+$153)|0); //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$add_ptr167; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot168=(($154)|0); //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot168)>>2)]=$150; //@line 4697 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=$nb; //@line 4698 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or169=$155 | 1; //@line 4698 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or170=$or169 | 2; //@line 4698 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $156=$p159; //@line 4698 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head171=(($156+4)|0); //@line 4698 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head171)>>2)]=$or170; //@line 4698 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4699 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_else172
      var $157=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4701 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $dvs=$157; //@line 4701 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4702 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4703 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $158=$dvs; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or173=$158 | 1; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or174=$or173 | 2; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $159=$p159; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head175=(($159+4)|0); //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head175)>>2)]=$or174; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $160=$p159; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=$160; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=$dvs; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr176=(($161+$162)|0); //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $163=$add_ptr176; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head177=(($163+4)|0); //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $164=HEAP32[(($head177)>>2)]; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or178=$164 | 1; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head177)>>2)]=$or178; //@line 4704 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break;
    case 47: // $if_end179
      var $165=$p159; //@line 4706 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $166=$165; //@line 4706 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr180=(($166+8)|0); //@line 4706 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr180; //@line 4706 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4708 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_else181
      var $167=$nb; //@line 4711 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=HEAPU32[((((__gm_+12)|0))>>2)]; //@line 4711 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp182=(($167)>>>0) < (($168)>>>0); //@line 4711 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp182) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 4711 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_then184
      var $169=$nb; //@line 4712 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4712 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub186=(($170-$169)|0); //@line 4712 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$sub186; //@line 4712 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize185=$sub186; //@line 4712 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4713 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p187=$171; //@line 4713 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $172=$p187; //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=$172; //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $174=$nb; //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr189=(($173+$174)|0); //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $175=$add_ptr189; //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$175; //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $r188=$175; //@line 4714 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=$rsize185; //@line 4715 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or190=$176 | 1; //@line 4715 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $177=$r188; //@line 4715 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head191=(($177+4)|0); //@line 4715 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head191)>>2)]=$or190; //@line 4715 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $178=$nb; //@line 4716 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or192=$178 | 1; //@line 4716 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or193=$or192 | 2; //@line 4716 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=$p187; //@line 4716 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head194=(($179+4)|0); //@line 4716 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head194)>>2)]=$or193; //@line 4716 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $180=$p187; //@line 4717 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181=$180; //@line 4717 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr195=(($181+8)|0); //@line 4717 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr195; //@line 4717 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4720 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end196
      __label__ = 51; break;
    case 51: // $if_end197
      var $182=$nb; //@line 4723 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call198=_sys_alloc(__gm_, $182); //@line 4723 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$call198; //@line 4723 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4723 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $postaction
      var $183=$mem; //@line 4727 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $183; //@line 4727 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_malloc["X"]=1;

function _tmalloc_small($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $nb_addr;
      var $t;
      var $v;
      var $rsize;
      var $i;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $trem;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F191;
      $m_addr=$m;
      $nb_addr=$nb;
      var $0=$m_addr; //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($0+4)|0); //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[(($treemap)>>2)]; //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap1=(($2+4)|0); //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[(($treemap1)>>2)]; //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(((-$3))|0); //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$1 & $sub; //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $leastbit=$and; //@line 4268 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$leastbit; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub2=(($4-1)|0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$sub2; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$5 >>> 12; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and3=$shr & 16; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and3; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$K; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$6; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$K; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr4=$8 >>> (($7)>>>0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr4; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr5=$9 >>> 5; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and6=$shr5 & 8; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and6; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$N; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($10+$and6)|0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$K; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr7=$12 >>> (($11)>>>0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr7; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr8=$13 >>> 2; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and9=$shr8 & 4; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and9; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$N; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add10=(($14+$and9)|0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add10; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$K; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr11=$16 >>> (($15)>>>0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr11; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr12=$17 >>> 1; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and13=$shr12 & 2; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and13; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=$N; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add14=(($18+$and13)|0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add14; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$K; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr15=$20 >>> (($19)>>>0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr15; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr16=$21 >>> 1; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and17=$shr16 & 1; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and17; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=$N; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add18=(($22+$and17)|0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add18; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$K; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr19=$24 >>> (($23)>>>0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shr19; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$N; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$Y; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add20=(($25+$26)|0); //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $i=$add20; //@line 4269 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$i; //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$m_addr; //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($28+304)|0); //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($treebins+($27<<2))|0); //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=HEAP32[(($arrayidx)>>2)]; //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$29; //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $v=$29; //@line 4270 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=$t; //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($30+4)|0); //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[(($head)>>2)]; //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and21=$31 & -8; //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$nb_addr; //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub22=(($and21-$32)|0); //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub22; //@line 4271 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $while_cond
      var $33=$t; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child=(($33+16)|0); //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx23=(($child)|0); //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[(($arrayidx23)>>2)]; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($34)|0)!=0; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_true
      var $35=$t; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child24=(($35+16)|0); //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx25=(($child24)|0); //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($arrayidx25)>>2)]; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $36;__label__ = 4; break; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_false
      var $37=$t; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child26=(($37+16)|0); //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx27=(($child26+4)|0); //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($arrayidx27)>>2)]; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $38;__label__ = 4; break; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_end
      var $cond; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$cond; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($cond)|0)!=0; //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 4273 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $while_body
      var $39=$t; //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head29=(($39+4)|0); //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($head29)>>2)]; //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and30=$40 & -8; //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$nb_addr; //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub31=(($and30-$41)|0); //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $trem=$sub31; //@line 4274 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=$trem; //@line 4275 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=$rsize; //@line 4275 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp32=(($42)>>>0) < (($43)>>>0); //@line 4275 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp32) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4275 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then
      var $44=$trem; //@line 4276 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$44; //@line 4276 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=$t; //@line 4277 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $v=$45; //@line 4277 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 4278 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_end
      __label__ = 1; break; //@line 4279 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $while_end
      var $46=$v; //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$46; //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($48+16)|0); //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $49=HEAPU32[(($least_addr)>>2)]; //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp33=(($47)>>>0) >= (($49)>>>0); //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp33)&1); //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($expval)|0)!=0; //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 9; break; } else { __label__ = 68; break; } //@line 4281 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then34
      var $50=$v; //@line 4282 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4282 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=$nb_addr; //@line 4282 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($51+$52)|0); //@line 4282 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$add_ptr; //@line 4282 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $r=$53; //@line 4282 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $54=$v; //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=$54; //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $56=$r; //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp35=(($55)>>>0) < (($57)>>>0); //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv36=(($cmp35)&1); //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval37=(($conv36)==(1)); //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool38=(($expval37)|0)!=0; //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool38) { __label__ = 10; break; } else { __label__ = 67; break; } //@line 4284 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then39
      var $58=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent=(($58+24)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($parent)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $XP=$59; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $60=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($60+12)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $61=HEAP32[(($bk)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp40=(($61)|0)!=(($62)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp40) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then42
      var $63=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($63+8)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($fd)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$64; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $65=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk43=(($65+12)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=HEAP32[(($bk43)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$66; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$F; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=$67; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $69=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr44=(($69+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=HEAPU32[(($least_addr44)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp45=(($68)>>>0) >= (($70)>>>0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv46=(($cmp45)&1); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval47=(($conv46)==(1)); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool48=(($expval47)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool48) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then49
      var $71=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=$F; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk50=(($72+12)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk50)>>2)]=$71; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $73=$F; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd51=(($74+8)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd51)>>2)]=$73; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_else
      _abort(); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_end52
      __label__ = 27; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_else53
      var $75=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child54=(($75+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx55=(($child54+4)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx55; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($arrayidx55)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$76; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp56=(($76)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp56) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $lor_lhs_false
      var $77=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child58=(($77+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx59=(($child58)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx59; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($arrayidx59)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$78; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp60=(($78)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp60) { __label__ = 17; break; } else { __label__ = 26; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then62
      __label__ = 18; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $while_cond63
      var $79=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child64=(($79+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx65=(($child64+4)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx65; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $80=HEAP32[(($arrayidx65)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp66=(($80)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp66) { var $83 = 1;__label__ = 20; break; } else { __label__ = 19; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $lor_rhs
      var $81=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child68=(($81+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx69=(($child68)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx69; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82=HEAP32[(($arrayidx69)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp70=(($82)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $83 = $cmp70;__label__ = 20; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $lor_end
      var $83;
      if ($83) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $while_body72
      var $84=$CP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$84; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $85=HEAP32[(($84)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$85; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $while_end73
      var $86=$RP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $87=$86; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr74=(($88+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $89=HEAPU32[(($least_addr74)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp75=(($87)>>>0) >= (($89)>>>0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv76=(($cmp75)&1); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval77=(($conv76)==(1)); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool78=(($expval77)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool78) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then79
      var $90=$RP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($90)>>2)]=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_else80
      _abort(); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_end81
      __label__ = 26; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end82
      __label__ = 27; break;
    case 27: // $if_end83
      var $91=$XP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp84=(($91)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp84) { __label__ = 28; break; } else { __label__ = 55; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_then86
      var $92=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index=(($92+28)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($index)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $94=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins87=(($94+304)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx88=(($treebins87+($93<<2))|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx88; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $95=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=$H; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $97=HEAP32[(($96)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp89=(($95)|0)==(($97)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp89) { __label__ = 29; break; } else { __label__ = 32; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then91
      var $98=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $99=$H; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($99)>>2)]=$98; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp92=(($98)|0)==0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp92) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then94
      var $100=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index95=(($100+28)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[(($index95)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $101; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $102=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap96=(($102+4)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $103=HEAP32[(($treemap96)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and97=$103 & $neg; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap96)>>2)]=$and97; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 31; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_end98
      __label__ = 39; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_else99
      var $104=$XP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $105=$104; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr100=(($106+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $107=HEAPU32[(($least_addr100)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($105)>>>0) >= (($107)>>>0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv102=(($cmp101)&1); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval103=(($conv102)==(1)); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool104=(($expval103)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool104) { __label__ = 33; break; } else { __label__ = 37; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_then105
      var $108=$XP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child106=(($108+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx107=(($child106)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $109=HEAP32[(($arrayidx107)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $110=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp108=(($109)|0)==(($110)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp108) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_then110
      var $111=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=$XP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child111=(($112+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx112=(($child111)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx112)>>2)]=$111; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_else113
      var $113=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=$XP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child114=(($114+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx115=(($child114+4)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx115)>>2)]=$113; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break;
    case 36: // $if_end116
      __label__ = 38; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_else117
      _abort(); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_end118
      __label__ = 39; break;
    case 39: // $if_end119
      var $115=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp120=(($115)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp120) { __label__ = 40; break; } else { __label__ = 54; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then122
      var $116=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $117=$116; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $118=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr123=(($118+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $119=HEAPU32[(($least_addr123)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp124=(($117)>>>0) >= (($119)>>>0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv125=(($cmp124)&1); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval126=(($conv125)==(1)); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool127=(($expval126)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool127) { __label__ = 41; break; } else { __label__ = 52; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then128
      var $120=$XP; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent129=(($121+24)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent129)>>2)]=$120; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $122=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child130=(($122+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx131=(($child130)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $123=HEAP32[(($arrayidx131)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C0=$123; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp132=(($123)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp132) { __label__ = 42; break; } else { __label__ = 46; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then134
      var $124=$C0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=$124; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr135=(($126+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $127=HEAPU32[(($least_addr135)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp136=(($125)>>>0) >= (($127)>>>0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv137=(($cmp136)&1); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval138=(($conv137)==(1)); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool139=(($expval138)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool139) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then140
      var $128=$C0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child141=(($129+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx142=(($child141)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx142)>>2)]=$128; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $130=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $131=$C0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent143=(($131+24)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent143)>>2)]=$130; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_else144
      _abort(); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_end145
      __label__ = 46; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_end146
      var $132=$v; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child147=(($132+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx148=(($child147+4)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($arrayidx148)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C1=$133; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp149=(($133)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp149) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_then151
      var $134=$C1; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=$134; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $136=$m_addr; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr152=(($136+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $137=HEAPU32[(($least_addr152)>>2)]; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp153=(($135)>>>0) >= (($137)>>>0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv154=(($cmp153)&1); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval155=(($conv154)==(1)); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool156=(($expval155)|0)!=0; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool156) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_then157
      var $138=$C1; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $139=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child158=(($139+16)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx159=(($child158+4)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx159)>>2)]=$138; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$R; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=$C1; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent160=(($141+24)|0); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent160)>>2)]=$140; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_else161
      _abort(); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end162
      __label__ = 51; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_end163
      __label__ = 53; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_else164
      _abort(); //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_end165
      __label__ = 54; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end166
      __label__ = 55; break; //@line 4285 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_end167
      var $142=$rsize; //@line 4286 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp168=(($142)>>>0) < 16; //@line 4286 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp168) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 4286 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_then170
      var $143=$rsize; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144=$nb_addr; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add171=(($143+$144)|0); //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$add171 | 1; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or172=$or | 2; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $145=$v; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head173=(($145+4)|0); //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head173)>>2)]=$or172; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=$v; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $147=$146; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $148=$rsize; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=$nb_addr; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add174=(($148+$149)|0); //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr175=(($147+$add174)|0); //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $150=$add_ptr175; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head176=(($150+4)|0); //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=HEAP32[(($head176)>>2)]; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or177=$151 | 1; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head176)>>2)]=$or177; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break; //@line 4287 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_else178
      var $152=$nb_addr; //@line 4289 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or179=$152 | 1; //@line 4289 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or180=$or179 | 2; //@line 4289 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $153=$v; //@line 4289 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head181=(($153+4)|0); //@line 4289 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head181)>>2)]=$or180; //@line 4289 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$rsize; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or182=$154 | 1; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=$r; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head183=(($155+4)|0); //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head183)>>2)]=$or182; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $156=$rsize; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=$r; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $159=$rsize; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr184=(($158+$159)|0); //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $160=$add_ptr184; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($160)|0); //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$156; //@line 4290 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($161+8)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=HEAP32[(($dvsize)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $DVS=$162; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $163=$DVS; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp185=(($163)|0)!=0; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp185) { __label__ = 58; break; } else { __label__ = 65; break; } //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_then187
      var $164=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dv=(($164+20)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[(($dv)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $DV=$165; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $166=$DVS; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr188=$166 >>> 3; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$shr188; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $167=$I; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl189=$167 << 1; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($168+40)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx190=(($smallbins+($shl189<<2))|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=$arrayidx190; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=$169; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B=$170; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=$B; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F191=$171; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $172=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($172)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=HEAP32[(($smallmap)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $174=$I; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl192=1 << $174; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and193=$173 & $shl192; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool194=(($and193)|0)!=0; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool194) { __label__ = 60; break; } else { __label__ = 59; break; } //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then195
      var $175=$I; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl196=1 << $175; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap197=(($176)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($smallmap197)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or198=$177 | $shl196; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap197)>>2)]=$or198; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_else199
      var $178=$B; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd200=(($178+8)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=HEAP32[(($fd200)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $180=$179; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr201=(($181+16)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $182=HEAPU32[(($least_addr201)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp202=(($180)>>>0) >= (($182)>>>0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv203=(($cmp202)&1); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval204=(($conv203)==(1)); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool205=(($expval204)|0)!=0; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool205) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_then206
      var $183=$B; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd207=(($183+8)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $184=HEAP32[(($fd207)>>2)]; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F191=$184; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_else208
      _abort(); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_end209
      __label__ = 64; break;
    case 64: // $if_end210
      var $185=$DV; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $186=$B; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd211=(($186+8)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd211)>>2)]=$185; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $187=$DV; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $188=$F191; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk212=(($188+12)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk212)>>2)]=$187; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $189=$F191; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $190=$DV; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd213=(($190+8)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd213)>>2)]=$189; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $191=$B; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $192=$DV; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk214=(($192+12)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk214)>>2)]=$191; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_end215
      var $193=$rsize; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $194=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dvsize216=(($194+8)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dvsize216)>>2)]=$193; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $195=$r; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $196=$m_addr; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dv217=(($196+20)|0); //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dv217)>>2)]=$195; //@line 4291 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break;
    case 66: // $if_end218
      var $197=$v; //@line 4293 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $198=$197; //@line 4293 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr219=(($198+8)|0); //@line 4293 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $add_ptr219; //@line 4293 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end220
      __label__ = 68; break; //@line 4295 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 68: // $if_end221
      _abort(); //@line 4297 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4297 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_small["X"]=1;

function _tmalloc_large($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $nb_addr;
      var $v;
      var $rsize;
      var $t;
      var $idx;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $sizebits;
      var $rst;
      var $rt;
      var $trem;
      var $leftbits;
      var $i;
      var $leastbit;
      var $Y68;
      var $K70;
      var $N73;
      var $trem97;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I;
      var $B;
      var $F282;
      var $TP;
      var $H307;
      var $I308;
      var $X309;
      var $Y319;
      var $N320;
      var $K324;
      var $T;
      var $K365;
      var $C;
      var $F404;
      $m_addr=$m;
      $nb_addr=$nb;
      $v=0; //@line 4194 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $0=$nb_addr; //@line 4195 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(((-$0))|0); //@line 4195 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub; //@line 4195 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=$nb_addr; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$1 >>> 8; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $X=$shr; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$X; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($2)|0)==0; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      $idx=0; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_else
      var $3=$X; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($3)>>>0) > 65535; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then2
      $idx=31; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_else3
      var $4=$X; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$4; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$Y; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub4=(($5-256)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr5=$sub4 >>> 16; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$shr5 & 8; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$and; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$N; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$Y; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=$7 << $6; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub6=(($shl-4096)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr7=$sub6 >>> 16; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and8=$shr7 & 4; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and8; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$K; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$N; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($9+$8)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$K; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$Y; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl9=$11 << $10; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl9; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub10=(($shl9-16384)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr11=$sub10 >>> 16; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and12=$shr11 & 2; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and12; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$N; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add13=(($12+$and12)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add13; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$N; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub14=((14-$13)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$K; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$Y; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl15=$15 << $14; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl15; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr16=$shl15 >>> 15; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add17=(($sub14+$shr16)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$add17; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$K; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl18=$16 << 1; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$nb_addr; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=$K; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add19=(($18+7)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr20=$17 >>> (($add19)>>>0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and21=$shr20 & 1; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add22=(($shl18+$and21)|0); //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $idx=$add22; //@line 4198 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break;
    case 5: // $if_end
      __label__ = 6; break;
    case 6: // $if_end23
      var $19=$idx; //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$m_addr; //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($20+304)|0); //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($treebins+($19<<2))|0); //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[(($arrayidx)>>2)]; //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$21; //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($21)|0)!=0; //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 7; break; } else { __label__ = 22; break; } //@line 4199 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then25
      var $22=$nb_addr; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$idx; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($23)|0)==31; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $cond_true
      var $cond = 0;__label__ = 10; break; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $cond_false
      var $24=$idx; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr27=$24 >>> 1; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add28=(($shr27+8)|0); //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub29=(($add28-2)|0); //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub30=((31-$sub29)|0); //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $sub30;__label__ = 10; break; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $cond_end
      var $cond; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl31=$22 << $cond; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sizebits=$shl31; //@line 4201 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rst=0; //@line 4202 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4203 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $for_cond
      var $25=$t; //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($25+4)|0); //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($head)>>2)]; //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and32=$26 & -8; //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$nb_addr; //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub33=(($and32-$27)|0); //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $trem=$sub33; //@line 4205 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$trem; //@line 4206 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$rsize; //@line 4206 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp34=(($28)>>>0) < (($29)>>>0); //@line 4206 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp34) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 4206 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then35
      var $30=$t; //@line 4207 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $v=$30; //@line 4207 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=$trem; //@line 4208 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$31; //@line 4208 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp36=(($31)|0)==0; //@line 4208 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp36) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4208 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then37
      __label__ = 21; break; //@line 4209 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_end38
      __label__ = 15; break; //@line 4210 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end39
      var $32=$t; //@line 4211 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child=(($32+16)|0); //@line 4211 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx40=(($child+4)|0); //@line 4211 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=HEAP32[(($arrayidx40)>>2)]; //@line 4211 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rt=$33; //@line 4211 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=$sizebits; //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr41=$34 >>> 31; //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and42=$shr41 & 1; //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $35=$t; //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child43=(($35+16)|0); //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx44=(($child43+($and42<<2))|0); //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($arrayidx44)>>2)]; //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$36; //@line 4212 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $37=$rt; //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp45=(($37)|0)!=0; //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp45) { __label__ = 16; break; } else { __label__ = 18; break; } //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $land_lhs_true
      var $38=$rt; //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=$t; //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp46=(($38)|0)!=(($39)|0); //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp46) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 4213 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then47
      var $40=$rt; //@line 4214 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rst=$40; //@line 4214 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 4214 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_end48
      var $41=$t; //@line 4215 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp49=(($41)|0)==0; //@line 4215 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp49) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4215 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_then50
      var $42=$rst; //@line 4216 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$42; //@line 4216 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4217 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end51
      var $43=$sizebits; //@line 4219 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl52=$43 << 1; //@line 4219 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sizebits=$shl52; //@line 4219 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4220 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $for_end
      __label__ = 22; break; //@line 4221 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_end53
      var $44=$t; //@line 4222 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp54=(($44)|0)==0; //@line 4222 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp54) { __label__ = 23; break; } else { __label__ = 27; break; } //@line 4222 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $land_lhs_true55
      var $45=$v; //@line 4222 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp56=(($45)|0)==0; //@line 4222 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp56) { __label__ = 24; break; } else { __label__ = 27; break; } //@line 4222 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then57
      var $46=$idx; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl58=1 << $46; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl59=$shl58 << 1; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$idx; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl60=1 << $47; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl61=$shl60 << 1; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub62=(((-$shl61))|0); //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$shl59 | $sub62; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($48+4)|0); //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $49=HEAP32[(($treemap)>>2)]; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and63=$or & $49; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $leftbits=$and63; //@line 4223 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $50=$leftbits; //@line 4224 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp64=(($50)|0)!=0; //@line 4224 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp64) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 4224 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_then65
      var $51=$leftbits; //@line 4226 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=$leftbits; //@line 4226 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub66=(((-$52))|0); //@line 4226 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and67=$51 & $sub66; //@line 4226 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $leastbit=$and67; //@line 4226 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$leastbit; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub69=(($53-1)|0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y68=$sub69; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $54=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr71=$54 >>> 12; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and72=$shr71 & 16; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K70=$and72; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=$K70; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N73=$55; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $56=$K70; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr74=$57 >>> (($56)>>>0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr74; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $58=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr75=$58 >>> 5; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and76=$shr75 & 8; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K70=$and76; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=$N73; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add77=(($59+$and76)|0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N73=$add77; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $60=$K70; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $61=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr78=$61 >>> (($60)>>>0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr78; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr79=$62 >>> 2; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and80=$shr79 & 4; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K70=$and80; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $63=$N73; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add81=(($63+$and80)|0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N73=$add81; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=$K70; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $65=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr82=$65 >>> (($64)>>>0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr82; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr83=$66 >>> 1; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and84=$shr83 & 2; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K70=$and84; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$N73; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add85=(($67+$and84)|0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N73=$add85; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=$K70; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $69=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr86=$69 >>> (($68)>>>0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr86; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr87=$70 >>> 1; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and88=$shr87 & 1; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K70=$and88; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $71=$N73; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add89=(($71+$and88)|0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N73=$add89; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=$K70; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $73=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr90=$73 >>> (($72)>>>0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr90; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=$N73; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=$Y68; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add91=(($74+$75)|0); //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $i=$add91; //@line 4227 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=$i; //@line 4228 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $77=$m_addr; //@line 4228 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins92=(($77+304)|0); //@line 4228 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx93=(($treebins92+($76<<2))|0); //@line 4228 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($arrayidx93)>>2)]; //@line 4228 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$78; //@line 4228 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4229 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end94
      __label__ = 27; break; //@line 4230 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_end95
      __label__ = 28; break; //@line 4232 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $while_cond
      var $79=$t; //@line 4232 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp96=(($79)|0)!=0; //@line 4232 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp96) { __label__ = 29; break; } else { __label__ = 35; break; } //@line 4232 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $while_body
      var $80=$t; //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head98=(($80+4)|0); //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($head98)>>2)]; //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and99=$81 & -8; //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82=$nb_addr; //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub100=(($and99-$82)|0); //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $trem97=$sub100; //@line 4233 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $83=$trem97; //@line 4234 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $84=$rsize; //@line 4234 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($83)>>>0) < (($84)>>>0); //@line 4234 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp101) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4234 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then102
      var $85=$trem97; //@line 4235 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$85; //@line 4235 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $86=$t; //@line 4236 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $v=$86; //@line 4236 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 31; break; //@line 4237 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_end103
      var $87=$t; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child104=(($87+16)|0); //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx105=(($child104)|0); //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($arrayidx105)>>2)]; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp106=(($88)|0)!=0; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp106) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $cond_true107
      var $89=$t; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child108=(($89+16)|0); //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx109=(($child108)|0); //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($arrayidx109)>>2)]; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond114 = $90;__label__ = 34; break; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 33: // $cond_false110
      var $91=$t; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child111=(($91+16)|0); //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx112=(($child111+4)|0); //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $92=HEAP32[(($arrayidx112)>>2)]; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond114 = $92;__label__ = 34; break; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $cond_end113
      var $cond114; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $t=$cond114; //@line 4238 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4239 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $while_end
      var $93=$v; //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp115=(($93)|0)!=0; //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp115) { __label__ = 36; break; } else { __label__ = 125; break; } //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $land_lhs_true116
      var $94=$rsize; //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $95=$m_addr; //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($95+8)|0); //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($dvsize)>>2)]; //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $97=$nb_addr; //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub117=(($96-$97)|0); //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp118=(($94)>>>0) < (($sub117)>>>0); //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp118) { __label__ = 37; break; } else { __label__ = 125; break; } //@line 4242 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then119
      var $98=$v; //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $99=$98; //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $100=$m_addr; //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($100+16)|0); //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=HEAPU32[(($least_addr)>>2)]; //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp120=(($99)>>>0) >= (($101)>>>0); //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp120)&1); //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($expval)|0)!=0; //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 38; break; } else { __label__ = 124; break; } //@line 4243 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_then121
      var $102=$v; //@line 4244 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $103=$102; //@line 4244 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $104=$nb_addr; //@line 4244 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($103+$104)|0); //@line 4244 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $105=$add_ptr; //@line 4244 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $r=$105; //@line 4244 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=$v; //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $107=$106; //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=$r; //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $109=$108; //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp122=(($107)>>>0) < (($109)>>>0); //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv123=(($cmp122)&1); //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval124=(($conv123)==(1)); //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool125=(($expval124)|0)!=0; //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool125) { __label__ = 39; break; } else { __label__ = 123; break; } //@line 4246 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_then126
      var $110=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent=(($110+24)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $111=HEAP32[(($parent)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $XP=$111; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($112+12)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($bk)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp127=(($113)|0)!=(($114)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp127) { __label__ = 40; break; } else { __label__ = 44; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then129
      var $115=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($115+8)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $116=HEAP32[(($fd)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$116; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $117=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk130=(($117+12)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $118=HEAP32[(($bk130)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$118; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $119=$F; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr131=(($121+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $122=HEAPU32[(($least_addr131)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp132=(($120)>>>0) >= (($122)>>>0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv133=(($cmp132)&1); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval134=(($conv133)==(1)); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool135=(($expval134)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool135) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then136
      var $123=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $124=$F; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk137=(($124+12)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk137)>>2)]=$123; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=$F; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd138=(($126+8)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd138)>>2)]=$125; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_else139
      _abort(); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_end140
      __label__ = 56; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_else141
      var $127=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child142=(($127+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx143=(($child142+4)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx143; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=HEAP32[(($arrayidx143)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$128; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp144=(($128)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp144) { __label__ = 46; break; } else { __label__ = 45; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $lor_lhs_false
      var $129=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child146=(($129+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx147=(($child146)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx147; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $130=HEAP32[(($arrayidx147)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$130; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp148=(($130)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp148) { __label__ = 46; break; } else { __label__ = 55; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_then150
      __label__ = 47; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 47: // $while_cond151
      var $131=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child152=(($131+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx153=(($child152+4)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx153; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $132=HEAP32[(($arrayidx153)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp154=(($132)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp154) { var $135 = 1;__label__ = 49; break; } else { __label__ = 48; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $lor_rhs
      var $133=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child156=(($133+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx157=(($child156)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx157; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $134=HEAP32[(($arrayidx157)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp158=(($134)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135 = $cmp158;__label__ = 49; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $lor_end
      var $135;
      if ($135) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 50: // $while_body160
      var $136=$CP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$136; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $137=HEAP32[(($136)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$137; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 51: // $while_end161
      var $138=$RP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $139=$138; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr162=(($140+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=HEAPU32[(($least_addr162)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp163=(($139)>>>0) >= (($141)>>>0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv164=(($cmp163)&1); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval165=(($conv164)==(1)); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool166=(($expval165)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool166) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_then167
      var $142=$RP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($142)>>2)]=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_else168
      _abort(); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end169
      __label__ = 55; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_end170
      __label__ = 56; break;
    case 56: // $if_end171
      var $143=$XP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp172=(($143)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp172) { __label__ = 57; break; } else { __label__ = 84; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_then174
      var $144=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index=(($144+28)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $145=HEAP32[(($index)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins175=(($146+304)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx176=(($treebins175+($145<<2))|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx176; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $147=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $148=$H; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=HEAP32[(($148)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp177=(($147)|0)==(($149)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp177) { __label__ = 58; break; } else { __label__ = 61; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_then179
      var $150=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=$H; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($151)>>2)]=$150; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp180=(($150)|0)==0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp180) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then182
      var $152=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index183=(($152+28)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $153=HEAP32[(($index183)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl184=1 << $153; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl184 ^ -1; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap185=(($154+4)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=HEAP32[(($treemap185)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and186=$155 & $neg; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap185)>>2)]=$and186; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 60; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_end187
      __label__ = 68; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_else188
      var $156=$XP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $158=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr189=(($158+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $159=HEAPU32[(($least_addr189)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp190=(($157)>>>0) >= (($159)>>>0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv191=(($cmp190)&1); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval192=(($conv191)==(1)); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool193=(($expval192)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool193) { __label__ = 62; break; } else { __label__ = 66; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_then194
      var $160=$XP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child195=(($160+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx196=(($child195)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=HEAP32[(($arrayidx196)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp197=(($161)|0)==(($162)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp197) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_then199
      var $163=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $164=$XP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child200=(($164+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx201=(($child200)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx201)>>2)]=$163; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_else202
      var $165=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $166=$XP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child203=(($166+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx204=(($child203+4)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx204)>>2)]=$165; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break;
    case 65: // $if_end205
      __label__ = 67; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 66: // $if_else206
      _abort(); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end207
      __label__ = 68; break;
    case 68: // $if_end208
      var $167=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp209=(($167)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp209) { __label__ = 69; break; } else { __label__ = 83; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 69: // $if_then211
      var $168=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=$168; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr212=(($170+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=HEAPU32[(($least_addr212)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp213=(($169)>>>0) >= (($171)>>>0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv214=(($cmp213)&1); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval215=(($conv214)==(1)); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool216=(($expval215)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool216) { __label__ = 70; break; } else { __label__ = 81; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 70: // $if_then217
      var $172=$XP; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent218=(($173+24)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent218)>>2)]=$172; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $174=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child219=(($174+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx220=(($child219)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $175=HEAP32[(($arrayidx220)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C0=$175; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp221=(($175)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp221) { __label__ = 71; break; } else { __label__ = 75; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_then223
      var $176=$C0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $177=$176; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $178=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr224=(($178+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=HEAPU32[(($least_addr224)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp225=(($177)>>>0) >= (($179)>>>0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv226=(($cmp225)&1); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval227=(($conv226)==(1)); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool228=(($expval227)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool228) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_then229
      var $180=$C0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child230=(($181+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx231=(($child230)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx231)>>2)]=$180; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $182=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $183=$C0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent232=(($183+24)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent232)>>2)]=$182; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 74; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_else233
      _abort(); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_end234
      __label__ = 75; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_end235
      var $184=$v; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child236=(($184+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx237=(($child236+4)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $185=HEAP32[(($arrayidx237)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C1=$185; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp238=(($185)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp238) { __label__ = 76; break; } else { __label__ = 80; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_then240
      var $186=$C1; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $187=$186; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $188=$m_addr; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr241=(($188+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $189=HEAPU32[(($least_addr241)>>2)]; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp242=(($187)>>>0) >= (($189)>>>0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv243=(($cmp242)&1); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval244=(($conv243)==(1)); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool245=(($expval244)|0)!=0; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool245) { __label__ = 77; break; } else { __label__ = 78; break; } //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 77: // $if_then246
      var $190=$C1; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $191=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child247=(($191+16)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx248=(($child247+4)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx248)>>2)]=$190; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $192=$R; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $193=$C1; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent249=(($193+24)|0); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent249)>>2)]=$192; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 79; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 78: // $if_else250
      _abort(); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 79: // $if_end251
      __label__ = 80; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_end252
      __label__ = 82; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_else253
      _abort(); //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 82: // $if_end254
      __label__ = 83; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_end255
      __label__ = 84; break; //@line 4247 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_end256
      var $194=$rsize; //@line 4248 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp257=(($194)>>>0) < 16; //@line 4248 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp257) { __label__ = 85; break; } else { __label__ = 86; break; } //@line 4248 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 85: // $if_then259
      var $195=$rsize; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $196=$nb_addr; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add260=(($195+$196)|0); //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or261=$add260 | 1; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or262=$or261 | 2; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $197=$v; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head263=(($197+4)|0); //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head263)>>2)]=$or262; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $198=$v; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $199=$198; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $200=$rsize; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $201=$nb_addr; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add264=(($200+$201)|0); //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr265=(($199+$add264)|0); //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $202=$add_ptr265; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head266=(($202+4)|0); //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[(($head266)>>2)]; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or267=$203 | 1; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head266)>>2)]=$or267; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 122; break; //@line 4249 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 86: // $if_else268
      var $204=$nb_addr; //@line 4251 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or269=$204 | 1; //@line 4251 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or270=$or269 | 2; //@line 4251 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $205=$v; //@line 4251 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head271=(($205+4)|0); //@line 4251 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head271)>>2)]=$or270; //@line 4251 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $206=$rsize; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or272=$206 | 1; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $207=$r; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head273=(($207+4)|0); //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head273)>>2)]=$or272; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $208=$rsize; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $209=$r; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $210=$209; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $211=$rsize; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr274=(($210+$211)|0); //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $212=$add_ptr274; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($212)|0); //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$208; //@line 4252 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $213=$rsize; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr275=$213 >>> 3; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp276=(($shr275)>>>0) < 32; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp276) { __label__ = 87; break; } else { __label__ = 94; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 87: // $if_then278
      var $214=$rsize; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr279=$214 >>> 3; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$shr279; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $215=$I; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl280=$215 << 1; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $216=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($216+40)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx281=(($smallbins+($shl280<<2))|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $217=$arrayidx281; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $218=$217; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B=$218; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $219=$B; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F282=$219; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $220=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($220)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $221=HEAP32[(($smallmap)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $222=$I; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl283=1 << $222; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and284=$221 & $shl283; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool285=(($and284)|0)!=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool285) { __label__ = 89; break; } else { __label__ = 88; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 88: // $if_then286
      var $223=$I; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl287=1 << $223; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $224=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap288=(($224)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $225=HEAP32[(($smallmap288)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or289=$225 | $shl287; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap288)>>2)]=$or289; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 89: // $if_else290
      var $226=$B; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd291=(($226+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $227=HEAP32[(($fd291)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $228=$227; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $229=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr292=(($229+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $230=HEAPU32[(($least_addr292)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp293=(($228)>>>0) >= (($230)>>>0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv294=(($cmp293)&1); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval295=(($conv294)==(1)); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool296=(($expval295)|0)!=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool296) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 90: // $if_then297
      var $231=$B; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd298=(($231+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $232=HEAP32[(($fd298)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F282=$232; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 92; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 91: // $if_else299
      _abort(); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 92: // $if_end300
      __label__ = 93; break;
    case 93: // $if_end301
      var $233=$r; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $234=$B; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd302=(($234+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd302)>>2)]=$233; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $235=$r; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $236=$F282; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk303=(($236+12)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk303)>>2)]=$235; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $237=$F282; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $238=$r; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd304=(($238+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd304)>>2)]=$237; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $239=$B; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $240=$r; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk305=(($240+12)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk305)>>2)]=$239; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 121; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 94: // $if_else306
      var $241=$r; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $242=$241; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $TP=$242; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $243=$rsize; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr310=$243 >>> 8; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $X309=$shr310; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $244=$X309; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp311=(($244)|0)==0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp311) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 95: // $if_then313
      $I308=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 100; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 96: // $if_else314
      var $245=$X309; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp315=(($245)>>>0) > 65535; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp315) { __label__ = 97; break; } else { __label__ = 98; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 97: // $if_then317
      $I308=31; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 98: // $if_else318
      var $246=$X309; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y319=$246; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $247=$Y319; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub321=(($247-256)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr322=$sub321 >>> 16; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and323=$shr322 & 8; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N320=$and323; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $248=$N320; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $249=$Y319; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl325=$249 << $248; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y319=$shl325; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub326=(($shl325-4096)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr327=$sub326 >>> 16; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and328=$shr327 & 4; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K324=$and328; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $250=$K324; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $251=$N320; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add329=(($251+$250)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N320=$add329; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $252=$K324; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $253=$Y319; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl330=$253 << $252; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y319=$shl330; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub331=(($shl330-16384)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr332=$sub331 >>> 16; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and333=$shr332 & 2; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K324=$and333; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $254=$N320; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add334=(($254+$and333)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N320=$add334; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $255=$N320; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub335=((14-$255)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $256=$K324; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $257=$Y319; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl336=$257 << $256; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y319=$shl336; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr337=$shl336 >>> 15; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add338=(($sub335+$shr337)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K324=$add338; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $258=$K324; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl339=$258 << 1; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $259=$rsize; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $260=$K324; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add340=(($260+7)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr341=$259 >>> (($add340)>>>0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and342=$shr341 & 1; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add343=(($shl339+$and342)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I308=$add343; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break;
    case 99: // $if_end344
      __label__ = 100; break;
    case 100: // $if_end345
      var $261=$I308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $262=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins346=(($262+304)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx347=(($treebins346+($261<<2))|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H307=$arrayidx347; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $263=$I308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $264=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index348=(($264+28)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index348)>>2)]=$263; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $265=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child349=(($265+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx350=(($child349+4)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx350)>>2)]=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $266=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child351=(($266+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx352=(($child351)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx352)>>2)]=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $267=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap353=(($267+4)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $268=HEAP32[(($treemap353)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $269=$I308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl354=1 << $269; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and355=$268 & $shl354; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool356=(($and355)|0)!=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool356) { __label__ = 102; break; } else { __label__ = 101; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 101: // $if_then357
      var $270=$I308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl358=1 << $270; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $271=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap359=(($271+4)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $272=HEAP32[(($treemap359)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or360=$272 | $shl358; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap359)>>2)]=$or360; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $273=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $274=$H307; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($274)>>2)]=$273; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $275=$H307; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $276=$275; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $277=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent361=(($277+24)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent361)>>2)]=$276; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $278=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $279=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk362=(($279+12)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk362)>>2)]=$278; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $280=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd363=(($280+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd363)>>2)]=$278; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 120; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 102: // $if_else364
      var $281=$H307; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $282=HEAP32[(($281)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$282; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $283=$rsize; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $284=$I308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp366=(($284)|0)==31; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp366) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 103: // $cond_true368
      var $cond375 = 0;__label__ = 105; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 104: // $cond_false369
      var $285=$I308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr370=$285 >>> 1; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add371=(($shr370+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub372=(($add371-2)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub373=((31-$sub372)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond375 = $sub373;__label__ = 105; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 105: // $cond_end374
      var $cond375; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl376=$283 << $cond375; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K365=$shl376; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 106: // $for_cond377
      var $286=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head378=(($286+4)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $287=HEAP32[(($head378)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and379=$287 & -8; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $288=$rsize; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp380=(($and379)|0)!=(($288)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp380) { __label__ = 107; break; } else { __label__ = 113; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 107: // $if_then382
      var $289=$K365; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr383=$289 >>> 31; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and384=$shr383 & 1; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $290=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child385=(($290+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx386=(($child385+($and384<<2))|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx386; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $291=$K365; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl387=$291 << 1; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K365=$shl387; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $292=$C; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $293=HEAP32[(($292)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp388=(($293)|0)!=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp388) { __label__ = 108; break; } else { __label__ = 109; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 108: // $if_then390
      var $294=$C; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $295=HEAP32[(($294)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$295; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 112; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 109: // $if_else391
      var $296=$C; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $297=$296; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $298=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr392=(($298+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $299=HEAPU32[(($least_addr392)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp393=(($297)>>>0) >= (($299)>>>0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv394=(($cmp393)&1); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval395=(($conv394)==(1)); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool396=(($expval395)|0)!=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool396) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 110: // $if_then397
      var $300=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $301=$C; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($301)>>2)]=$300; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $302=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $303=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent398=(($303+24)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent398)>>2)]=$302; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $304=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $305=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk399=(($305+12)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk399)>>2)]=$304; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $306=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd400=(($306+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd400)>>2)]=$304; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 119; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 111: // $if_else401
      _abort(); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 112: // $if_end402
      __label__ = 118; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 113: // $if_else403
      var $307=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd405=(($307+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $308=HEAP32[(($fd405)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F404=$308; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $309=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $310=$309; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $311=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr406=(($311+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $312=HEAPU32[(($least_addr406)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp407=(($310)>>>0) >= (($312)>>>0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp407) { __label__ = 114; break; } else { var $317 = 0;__label__ = 115; break; } //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 114: // $land_rhs
      var $313=$F404; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $314=$313; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $315=$m_addr; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr409=(($315+16)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $316=HEAPU32[(($least_addr409)>>2)]; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp410=(($314)>>>0) >= (($316)>>>0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $317 = $cmp410;__label__ = 115; break;
    case 115: // $land_end
      var $317;
      var $land_ext=(($317)&1);
      var $expval412=(($land_ext)==(1));
      var $tobool413=(($expval412)|0)!=0;
      if ($tobool413) { __label__ = 116; break; } else { __label__ = 117; break; }
    case 116: // $if_then414
      var $318=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $319=$F404; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk415=(($319+12)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk415)>>2)]=$318; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $320=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd416=(($320+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd416)>>2)]=$318; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $321=$F404; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $322=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd417=(($322+8)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd417)>>2)]=$321; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $323=$T; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $324=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk418=(($324+12)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk418)>>2)]=$323; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $325=$TP; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent419=(($325+24)|0); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent419)>>2)]=0; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 119; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 117: // $if_else420
      _abort(); //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 118: // $if_end421
      __label__ = 106; break; //@line 4253 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 119: // $for_end422
      __label__ = 120; break;
    case 120: // $if_end423
      __label__ = 121; break;
    case 121: // $if_end424
      __label__ = 122; break;
    case 122: // $if_end425
      var $326=$v; //@line 4255 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $327=$326; //@line 4255 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr426=(($327+8)|0); //@line 4255 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr426; //@line 4255 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 126; break; //@line 4255 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 123: // $if_end427
      __label__ = 124; break; //@line 4257 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 124: // $if_end428
      _abort(); //@line 4258 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4258 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 125: // $if_end429
      $retval=0; //@line 4260 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 126; break; //@line 4260 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 126: // $return
      var $328=$retval; //@line 4261 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $328; //@line 4261 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_large["X"]=1;

function _sys_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $nb_addr;
      var $tbase;
      var $tsize;
      var $mmap_flag;
      var $mem;
      var $br;
      var $ss;
      var $asize;
      var $base;
      var $esize;
      var $end;
      var $asize97;
      var $br106;
      var $end107;
      var $ssize;
      var $mn;
      var $sp;
      var $oldbase;
      var $rsize;
      var $p;
      var $r;
      $m_addr=$m;
      $nb_addr=$nb;
      $tbase=-1; //@line 3876 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=0; //@line 3877 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mmap_flag=0; //@line 3878 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 3880 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $mflags=(($2+440)|0); //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[(($mflags)>>2)]; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$3 & 0; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool1=(($and)|0)!=0; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool1) { __label__ = 3; break; } else { __label__ = 8; break; } //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $4=$nb_addr; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=HEAPU32[((((_mparams+12)|0))>>2)]; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($4)>>>0) >= (($5)>>>0); //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 8; break; } //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $land_lhs_true3
      var $6=$m_addr; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($6+12)|0); //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($topsize)>>2)]; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($7)|0)!=0; //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 3883 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then
      var $8=$m_addr; //@line 3884 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$nb_addr; //@line 3884 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call5=_mmap_alloc($8, $9); //@line 3884 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mem=$call5; //@line 3884 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$mem; //@line 3885 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp6=(($10)|0)!=0; //@line 3885 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3885 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then7
      var $11=$mem; //@line 3886 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=$11; //@line 3886 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 3886 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_end
      __label__ = 8; break; //@line 3887 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end8
      var $12=$m_addr; //@line 3911 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $mflags9=(($12+440)|0); //@line 3911 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($mflags9)>>2)]; //@line 3911 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and10=$13 & 4; //@line 3911 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool11=(($and10)|0)!=0; //@line 3911 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool11) { __label__ = 41; break; } else { __label__ = 9; break; } //@line 3911 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then12
      $br=-1; //@line 3912 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$m_addr; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top=(($14+24)|0); //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($top)>>2)]; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp13=(($15)|0)==0; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $cond_true
      var $cond = 0;__label__ = 12; break; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $cond_false
      var $16=$m_addr; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$m_addr; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top14=(($17+24)|0); //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($top14)>>2)]; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$18; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call15=_segment_holding($16, $19); //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $call15;__label__ = 12; break; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $cond_end
      var $cond; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $ss=$cond; //@line 3913 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asize=0; //@line 3914 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$ss; //@line 3917 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp16=(($20)|0)==0; //@line 3917 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp16) { __label__ = 13; break; } else { __label__ = 21; break; } //@line 3917 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then17
      var $call18=_sbrk(0); //@line 3918 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $base=$call18; //@line 3918 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$base; //@line 3919 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp19=(($21)|0)!=-1; //@line 3919 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp19) { __label__ = 14; break; } else { __label__ = 20; break; } //@line 3919 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then20
      var $22=$nb_addr; //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($22+48)|0); //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(($23-1)|0); //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add21=(($add+$sub)|0); //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub22=(($24-1)|0); //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$sub22 ^ -1; //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and23=$add21 & $neg; //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asize=$and23; //@line 3920 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$base; //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$25; //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub24=(($27-1)|0); //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and25=$26 & $sub24; //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($and25)|0)==0; //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 3922 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_then27
      var $28=$base; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub28=(($30-1)|0); //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add29=(($29+$sub28)|0); //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub30=(($31-1)|0); //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg31=$sub30 ^ -1; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and32=$add29 & $neg31; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$base; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub33=(($and32-$33)|0); //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=$asize; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add34=(($34+$sub33)|0); //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asize=$add34; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 3923 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_end35
      var $35=$asize; //@line 3925 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp36=(($35)>>>0) < 2147483647; //@line 3925 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp36) { __label__ = 17; break; } else { __label__ = 19; break; } //@line 3925 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $land_lhs_true37
      var $36=$asize; //@line 3926 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call38=_sbrk($36); //@line 3926 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $br=$call38; //@line 3926 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $37=$base; //@line 3926 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp39=(($call38)|0)==(($37)|0); //@line 3926 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp39) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 3926 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then40
      var $38=$base; //@line 3927 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tbase=$38; //@line 3927 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=$asize; //@line 3928 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=$39; //@line 3928 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 3929 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end41
      __label__ = 20; break; //@line 3930 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end42
      __label__ = 25; break; //@line 3931 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_else
      var $40=$nb_addr; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize43=(($41+12)|0); //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=HEAP32[(($topsize43)>>2)]; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub44=(($40-$42)|0); //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add45=(($sub44+48)|0); //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub46=(($43-1)|0); //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add47=(($add45+$sub46)|0); //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub48=(($44-1)|0); //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg49=$sub48 ^ -1; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and50=$add47 & $neg49; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asize=$and50; //@line 3934 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=$asize; //@line 3936 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp51=(($45)>>>0) < 2147483647; //@line 3936 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp51) { __label__ = 22; break; } else { __label__ = 24; break; } //@line 3936 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $land_lhs_true52
      var $46=$asize; //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call53=_sbrk($46); //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $br=$call53; //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$ss; //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base54=(($47)|0); //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=HEAP32[(($base54)>>2)]; //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $49=$ss; //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size=(($49+4)|0); //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $50=HEAP32[(($size)>>2)]; //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($48+$50)|0); //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp55=(($call53)|0)==(($add_ptr)|0); //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp55) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 3937 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then56
      var $51=$br; //@line 3938 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tbase=$51; //@line 3938 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=$asize; //@line 3939 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=$52; //@line 3939 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 24; break; //@line 3940 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_end57
      __label__ = 25; break;
    case 25: // $if_end58
      var $53=$tbase; //@line 3943 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp59=(($53)|0)==-1; //@line 3943 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp59) { __label__ = 26; break; } else { __label__ = 40; break; } //@line 3943 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_then60
      var $54=$br; //@line 3944 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp61=(($54)|0)!=-1; //@line 3944 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp61) { __label__ = 27; break; } else { __label__ = 36; break; } //@line 3944 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_then62
      var $55=$asize; //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp63=(($55)>>>0) < 2147483647; //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp63) { __label__ = 28; break; } else { __label__ = 35; break; } //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $land_lhs_true64
      var $56=$asize; //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=$nb_addr; //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add65=(($57+48)|0); //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp66=(($56)>>>0) < (($add65)>>>0); //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp66) { __label__ = 29; break; } else { __label__ = 35; break; } //@line 3945 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then67
      var $58=$nb_addr; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add68=(($58+48)|0); //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=$asize; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub69=(($add68-$59)|0); //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $60=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub70=(($60-1)|0); //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add71=(($sub69+$sub70)|0); //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $61=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub72=(($61-1)|0); //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg73=$sub72 ^ -1; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and74=$add71 & $neg73; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $esize=$and74; //@line 3947 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$esize; //@line 3948 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp75=(($62)>>>0) < 2147483647; //@line 3948 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp75) { __label__ = 30; break; } else { __label__ = 34; break; } //@line 3948 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then76
      var $63=$esize; //@line 3949 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call77=_sbrk($63); //@line 3949 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $end=$call77; //@line 3949 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=$end; //@line 3950 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp78=(($64)|0)!=-1; //@line 3950 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp78) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 3950 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then79
      var $65=$esize; //@line 3951 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$asize; //@line 3951 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add80=(($66+$65)|0); //@line 3951 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asize=$add80; //@line 3951 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 3951 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_else81
      var $67=$asize; //@line 3953 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub82=(((-$67))|0); //@line 3953 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call83=_sbrk($sub82); //@line 3953 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $br=-1; //@line 3954 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break;
    case 33: // $if_end84
      __label__ = 34; break; //@line 3956 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_end85
      __label__ = 35; break; //@line 3957 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_end86
      __label__ = 36; break; //@line 3958 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_end87
      var $68=$br; //@line 3959 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp88=(($68)|0)!=-1; //@line 3959 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp88) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3959 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then89
      var $69=$br; //@line 3960 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tbase=$69; //@line 3960 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=$asize; //@line 3961 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=$70; //@line 3961 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 3962 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else90
      var $71=$m_addr; //@line 3964 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $mflags91=(($71+440)|0); //@line 3964 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($mflags91)>>2)]; //@line 3964 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$72 | 4; //@line 3964 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($mflags91)>>2)]=$or; //@line 3964 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break;
    case 39: // $if_end92
      __label__ = 40; break; //@line 3965 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_end93
      __label__ = 41; break; //@line 3968 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_end94
      var $73=$tbase; //@line 3982 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp95=(($73)|0)==-1; //@line 3982 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp95) { __label__ = 42; break; } else { __label__ = 51; break; } //@line 3982 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then96
      var $74=$nb_addr; //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add98=(($74+48)|0); //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub99=(($75-1)|0); //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add100=(($add98+$sub99)|0); //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub101=(($76-1)|0); //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg102=$sub101 ^ -1; //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and103=$add100 & $neg102; //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asize97=$and103; //@line 3983 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $77=$asize97; //@line 3984 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp104=(($77)>>>0) < 2147483647; //@line 3984 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp104) { __label__ = 43; break; } else { __label__ = 50; break; } //@line 3984 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then105
      $br106=-1; //@line 3985 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $end107=-1; //@line 3986 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $78=$asize97; //@line 3988 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call108=_sbrk($78); //@line 3988 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $br106=$call108; //@line 3988 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call109=_sbrk(0); //@line 3989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $end107=$call109; //@line 3989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $79=$br106; //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp110=(($79)|0)!=-1; //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp110) { __label__ = 44; break; } else { __label__ = 49; break; } //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $land_lhs_true111
      var $80=$end107; //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp112=(($80)|0)!=-1; //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp112) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $land_lhs_true113
      var $81=$br106; //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82=$end107; //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp114=(($81)>>>0) < (($82)>>>0); //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp114) { __label__ = 46; break; } else { __label__ = 49; break; } //@line 3991 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_then115
      var $83=$end107; //@line 3992 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $84=$br106; //@line 3992 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$83; //@line 3992 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$84; //@line 3992 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 3992 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $ssize=$sub_ptr_sub; //@line 3992 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $85=$ssize; //@line 3993 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $86=$nb_addr; //@line 3993 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add116=(($86+40)|0); //@line 3993 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp117=(($85)>>>0) > (($add116)>>>0); //@line 3993 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp117) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 3993 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_then118
      var $87=$br106; //@line 3994 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tbase=$87; //@line 3994 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=$ssize; //@line 3995 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=$88; //@line 3995 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 3996 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_end119
      __label__ = 49; break; //@line 3997 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_end120
      __label__ = 50; break; //@line 3998 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end121
      __label__ = 51; break; //@line 3999 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_end122
      var $89=$tbase; //@line 4001 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp123=(($89)|0)!=-1; //@line 4001 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp123) { __label__ = 52; break; } else { __label__ = 90; break; } //@line 4001 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_then124
      var $90=$tsize; //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $91=$m_addr; //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($91+432)|0); //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $92=HEAP32[(($footprint)>>2)]; //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add125=(($92+$90)|0); //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$add125; //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=$m_addr; //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($93+436)|0); //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $94=HEAPU32[(($max_footprint)>>2)]; //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp126=(($add125)>>>0) > (($94)>>>0); //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp126) { __label__ = 53; break; } else { __label__ = 54; break; } //@line 4003 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_then127
      var $95=$m_addr; //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $footprint128=(($95+432)|0); //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($footprint128)>>2)]; //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $97=$m_addr; //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $max_footprint129=(($97+436)|0); //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($max_footprint129)>>2)]=$96; //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end130
      var $98=$m_addr; //@line 4006 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top131=(($98+24)|0); //@line 4006 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $99=HEAP32[(($top131)>>2)]; //@line 4006 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp132=(($99)|0)!=0; //@line 4006 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp132) { __label__ = 62; break; } else { __label__ = 55; break; } //@line 4006 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_then133
      var $100=$m_addr; //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($100+16)|0); //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[(($least_addr)>>2)]; //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp134=(($101)|0)==0; //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp134) { __label__ = 57; break; } else { __label__ = 56; break; } //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 56: // $lor_lhs_false
      var $102=$tbase; //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $103=$m_addr; //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr135=(($103+16)|0); //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $104=HEAPU32[(($least_addr135)>>2)]; //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp136=(($102)>>>0) < (($104)>>>0); //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp136) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 4007 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_then137
      var $105=$tbase; //@line 4008 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=$m_addr; //@line 4008 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr138=(($106+16)|0); //@line 4008 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr138)>>2)]=$105; //@line 4008 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 58; break; //@line 4008 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_end139
      var $107=$tbase; //@line 4009 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=$m_addr; //@line 4009 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg=(($108+444)|0); //@line 4009 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base140=(($seg)|0); //@line 4009 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($base140)>>2)]=$107; //@line 4009 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $109=$tsize; //@line 4010 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $110=$m_addr; //@line 4010 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg141=(($110+444)|0); //@line 4010 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size142=(($seg141+4)|0); //@line 4010 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size142)>>2)]=$109; //@line 4010 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $111=$mmap_flag; //@line 4011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=$m_addr; //@line 4011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg143=(($112+444)|0); //@line 4011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($seg143+12)|0); //@line 4011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($sflags)>>2)]=$111; //@line 4011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[((((_mparams)|0))>>2)]; //@line 4012 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=$m_addr; //@line 4012 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $magic=(($114+36)|0); //@line 4012 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($magic)>>2)]=$113; //@line 4012 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $115=$m_addr; //@line 4013 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $release_checks=(($115+32)|0); //@line 4013 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($release_checks)>>2)]=-1; //@line 4013 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $116=$m_addr; //@line 4014 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _init_bins($116); //@line 4014 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $117=$m_addr; //@line 4016 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp144=(($117)|0)==((__gm_)|0); //@line 4016 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp144) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4016 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then145
      var $118=$m_addr; //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $119=$tbase; //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=$tsize; //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub146=(($121-40)|0); //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _init_top($118, $120, $sub146); //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 61; break; //@line 4017 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_else147
      var $122=$m_addr; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $123=$122; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr148=(($123-8)|0); //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $124=$add_ptr148; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=$124; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $127=$126; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr149=(($127-8)|0); //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=$add_ptr149; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($128+4)|0); //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=HEAP32[(($head)>>2)]; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and150=$129 & -8; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr151=(($125+$and150)|0); //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $130=$add_ptr151; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mn=$130; //@line 4022 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $131=$m_addr; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $132=$mn; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $133=$tbase; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $134=$tsize; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr152=(($133+$134)|0); //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=$mn; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $136=$135; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast153=$add_ptr152; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast154=$136; //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub155=(($sub_ptr_lhs_cast153-$sub_ptr_rhs_cast154)|0); //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub156=(($sub_ptr_sub155-40)|0); //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _init_top($131, $132, $sub156); //@line 4023 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 61; break;
    case 61: // $if_end157
      __label__ = 87; break; //@line 4025 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_else158
      var $137=$m_addr; //@line 4029 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg159=(($137+444)|0); //@line 4029 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$seg159; //@line 4029 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 63: // $while_cond
      var $138=$sp; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp160=(($138)|0)!=0; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp160) { __label__ = 64; break; } else { var $144 = 0;__label__ = 65; break; } //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 64: // $land_rhs
      var $139=$tbase; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$sp; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base161=(($140)|0); //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($base161)>>2)]; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $142=$sp; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size162=(($142+4)|0); //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $143=HEAP32[(($size162)>>2)]; //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr163=(($141+$143)|0); //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp164=(($139)|0)!=(($add_ptr163)|0); //@line 4031 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144 = $cmp164;__label__ = 65; break;
    case 65: // $land_end
      var $144;
      if ($144) { __label__ = 66; break; } else { __label__ = 67; break; }
    case 66: // $while_body
      var $145=$sp; //@line 4032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $next=(($145+8)|0); //@line 4032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=HEAP32[(($next)>>2)]; //@line 4032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$146; //@line 4032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 67: // $while_end
      var $147=$sp; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp165=(($147)|0)!=0; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp165) { __label__ = 68; break; } else { __label__ = 73; break; } //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 68: // $land_lhs_true166
      var $148=$sp; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags167=(($148+12)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=HEAP32[(($sflags167)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and168=$149 & 8; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool169=(($and168)|0)!=0; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool169) { __label__ = 73; break; } else { __label__ = 69; break; } //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 69: // $land_lhs_true170
      var $150=$sp; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags171=(($150+12)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=HEAP32[(($sflags171)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and172=$151 & 0; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $152=$mmap_flag; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp173=(($and172)|0)==(($152)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp173) { __label__ = 70; break; } else { __label__ = 73; break; } //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 70: // $land_lhs_true174
      var $153=$m_addr; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top175=(($153+24)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=HEAP32[(($top175)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=$154; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $156=$sp; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base176=(($156)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=HEAPU32[(($base176)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp177=(($155)>>>0) >= (($157)>>>0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp177) { __label__ = 71; break; } else { __label__ = 73; break; } //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 71: // $land_lhs_true178
      var $158=$m_addr; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top179=(($158+24)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $159=HEAP32[(($top179)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $160=$159; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=$sp; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base180=(($161)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=HEAP32[(($base180)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $163=$sp; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size181=(($163+4)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $164=HEAP32[(($size181)>>2)]; //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr182=(($162+$164)|0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp183=(($160)>>>0) < (($add_ptr182)>>>0); //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp183) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 4033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_then184
      var $165=$tsize; //@line 4037 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $166=$sp; //@line 4037 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size185=(($166+4)|0); //@line 4037 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $167=HEAP32[(($size185)>>2)]; //@line 4037 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add186=(($167+$165)|0); //@line 4037 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size185)>>2)]=$add186; //@line 4037 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=$m_addr; //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=$m_addr; //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top187=(($169+24)|0); //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=HEAP32[(($top187)>>2)]; //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=$m_addr; //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize188=(($171+12)|0); //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[(($topsize188)>>2)]; //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=$tsize; //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add189=(($172+$173)|0); //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _init_top($168, $170, $add189); //@line 4038 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 86; break; //@line 4039 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_else190
      var $174=$tbase; //@line 4041 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $175=$m_addr; //@line 4041 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr191=(($175+16)|0); //@line 4041 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=HEAPU32[(($least_addr191)>>2)]; //@line 4041 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp192=(($174)>>>0) < (($176)>>>0); //@line 4041 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp192) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 4041 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_then193
      var $177=$tbase; //@line 4042 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $178=$m_addr; //@line 4042 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr194=(($178+16)|0); //@line 4042 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr194)>>2)]=$177; //@line 4042 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 75; break; //@line 4042 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_end195
      var $179=$m_addr; //@line 4043 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg196=(($179+444)|0); //@line 4043 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$seg196; //@line 4043 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 76; break; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 76: // $while_cond197
      var $180=$sp; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp198=(($180)|0)!=0; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp198) { __label__ = 77; break; } else { var $185 = 0;__label__ = 78; break; } //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 77: // $land_rhs199
      var $181=$sp; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base200=(($181)|0); //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $182=HEAP32[(($base200)>>2)]; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $183=$tbase; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $184=$tsize; //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr201=(($183+$184)|0); //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp202=(($182)|0)!=(($add_ptr201)|0); //@line 4044 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $185 = $cmp202;__label__ = 78; break;
    case 78: // $land_end203
      var $185;
      if ($185) { __label__ = 79; break; } else { __label__ = 80; break; }
    case 79: // $while_body204
      var $186=$sp; //@line 4045 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $next205=(($186+8)|0); //@line 4045 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $187=HEAP32[(($next205)>>2)]; //@line 4045 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$187; //@line 4045 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 76; break; //@line 4045 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 80: // $while_end206
      var $188=$sp; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp207=(($188)|0)!=0; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp207) { __label__ = 81; break; } else { __label__ = 84; break; } //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 81: // $land_lhs_true208
      var $189=$sp; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags209=(($189+12)|0); //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $190=HEAP32[(($sflags209)>>2)]; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and210=$190 & 8; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool211=(($and210)|0)!=0; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool211) { __label__ = 84; break; } else { __label__ = 82; break; } //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 82: // $land_lhs_true212
      var $191=$sp; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags213=(($191+12)|0); //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $192=HEAP32[(($sflags213)>>2)]; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and214=$192 & 0; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $193=$mmap_flag; //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp215=(($and214)|0)==(($193)|0); //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp215) { __label__ = 83; break; } else { __label__ = 84; break; } //@line 4046 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_then216
      var $194=$sp; //@line 4049 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base217=(($194)|0); //@line 4049 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $195=HEAP32[(($base217)>>2)]; //@line 4049 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $oldbase=$195; //@line 4049 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $196=$tbase; //@line 4050 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $197=$sp; //@line 4050 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base218=(($197)|0); //@line 4050 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($base218)>>2)]=$196; //@line 4050 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $198=$tsize; //@line 4051 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $199=$sp; //@line 4051 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size219=(($199+4)|0); //@line 4051 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $200=HEAP32[(($size219)>>2)]; //@line 4051 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add220=(($200+$198)|0); //@line 4051 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size219)>>2)]=$add220; //@line 4051 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $201=$m_addr; //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $202=$tbase; //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $203=$oldbase; //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $204=$nb_addr; //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call221=_prepend_alloc($201, $202, $203, $204); //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=$call221; //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 4052 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_else222
      var $205=$m_addr; //@line 4055 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $206=$tbase; //@line 4055 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $207=$tsize; //@line 4055 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $208=$mmap_flag; //@line 4055 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _add_segment($205, $206, $207, $208); //@line 4055 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break;
    case 85: // $if_end223
      __label__ = 86; break;
    case 86: // $if_end224
      __label__ = 87; break;
    case 87: // $if_end225
      var $209=$nb_addr; //@line 4059 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $210=$m_addr; //@line 4059 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize226=(($210+12)|0); //@line 4059 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $211=HEAPU32[(($topsize226)>>2)]; //@line 4059 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp227=(($209)>>>0) < (($211)>>>0); //@line 4059 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp227) { __label__ = 88; break; } else { __label__ = 89; break; } //@line 4059 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 88: // $if_then228
      var $212=$nb_addr; //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $213=$m_addr; //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize229=(($213+12)|0); //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $214=HEAP32[(($topsize229)>>2)]; //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub230=(($214-$212)|0); //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize229)>>2)]=$sub230; //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub230; //@line 4060 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $215=$m_addr; //@line 4061 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top231=(($215+24)|0); //@line 4061 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $216=HEAP32[(($top231)>>2)]; //@line 4061 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$216; //@line 4061 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $217=$p; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $218=$217; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $219=$nb_addr; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr232=(($218+$219)|0); //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $220=$add_ptr232; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $221=$m_addr; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top233=(($221+24)|0); //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top233)>>2)]=$220; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $r=$220; //@line 4062 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $222=$rsize; //@line 4063 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or234=$222 | 1; //@line 4063 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $223=$r; //@line 4063 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head235=(($223+4)|0); //@line 4063 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head235)>>2)]=$or234; //@line 4063 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $224=$nb_addr; //@line 4064 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or236=$224 | 1; //@line 4064 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or237=$or236 | 2; //@line 4064 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $225=$p; //@line 4064 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head238=(($225+4)|0); //@line 4064 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head238)>>2)]=$or237; //@line 4064 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $226=$p; //@line 4067 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4067 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr239=(($227+8)|0); //@line 4067 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr239; //@line 4067 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 4067 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 89: // $if_end240
      __label__ = 90; break; //@line 4069 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 90: // $if_end241
      var $call242=___errno(); //@line 4071 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($call242)>>2)]=12; //@line 4071 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=0; //@line 4072 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 4072 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 91: // $return
      var $228=$retval; //@line 4073 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $228; //@line 4073 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_alloc["X"]=1;

function _free($mem) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $mem_addr;
      var $p;
      var $psize;
      var $next;
      var $prevsize;
      var $prev;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F60;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F245;
      var $B247;
      var $I249;
      var $TP285;
      var $XP286;
      var $R288;
      var $F293;
      var $RP306;
      var $CP317;
      var $H343;
      var $C0385;
      var $C1386;
      var $I447;
      var $B449;
      var $F452;
      var $tp;
      var $H475;
      var $I476;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K525;
      var $C;
      var $F558;
      $mem_addr=$mem;
      var $0=$mem_addr; //@line 4740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 195; break; } //@line 4740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$mem_addr; //@line 4741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1-8)|0); //@line 4741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 4741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$2; //@line 4741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=$p; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($4)>>>0) >= (($5)>>>0); //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 2; break; } else { var $8 = 0;__label__ = 3; break; } //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $land_rhs
      var $6=$p; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($6+4)|0); //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($head)>>2)]; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$7 & 3; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($and)|0)!=1; //@line 4753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8 = $cmp2;__label__ = 3; break;
    case 3: // $land_end
      var $8;
      var $land_ext=(($8)&1);
      var $expval=(($land_ext)==(1));
      var $tobool=(($expval)|0)!=0;
      if ($tobool) { __label__ = 4; break; } else { __label__ = 192; break; }
    case 4: // $if_then3
      var $9=$p; //@line 4754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head4=(($9+4)|0); //@line 4754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[(($head4)>>2)]; //@line 4754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and5=$10 & -8; //@line 4754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$and5; //@line 4754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$p; //@line 4755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$11; //@line 4755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$psize; //@line 4755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr6=(($12+$13)|0); //@line 4755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr6; //@line 4755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $next=$14; //@line 4755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$p; //@line 4756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head7=(($15+4)|0); //@line 4756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($head7)>>2)]; //@line 4756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and8=$16 & 1; //@line 4756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool9=(($and8)|0)!=0; //@line 4756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool9) { __label__ = 76; break; } else { __label__ = 5; break; } //@line 4756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then10
      var $17=$p; //@line 4757 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($17)|0); //@line 4757 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($prev_foot)>>2)]; //@line 4757 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $prevsize=$18; //@line 4757 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$p; //@line 4758 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head11=(($19+4)|0); //@line 4758 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=HEAP32[(($head11)>>2)]; //@line 4758 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and12=$20 & 3; //@line 4758 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp13=(($and12)|0)==0; //@line 4758 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp13) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4758 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then14
      var $21=$prevsize; //@line 4759 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($21+16)|0); //@line 4759 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=$psize; //@line 4759 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add15=(($22+$add)|0); //@line 4759 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$add15; //@line 4759 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4762 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_else
      var $23=$p; //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$prevsize; //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $idx_neg=(((-$25))|0); //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr16=(($24+$idx_neg)|0); //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$add_ptr16; //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $prev=$26; //@line 4765 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$prevsize; //@line 4766 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$psize; //@line 4766 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add17=(($28+$27)|0); //@line 4766 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$add17; //@line 4766 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$prev; //@line 4767 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$29; //@line 4767 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=$prev; //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=$30; //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp18=(($31)>>>0) >= (($32)>>>0); //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp18)&1); //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval19=(($conv)==(1)); //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool20=(($expval19)|0)!=0; //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool20) { __label__ = 8; break; } else { __label__ = 73; break; } //@line 4768 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_then21
      var $33=$p; //@line 4769 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4769 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($33)|0)!=(($34)|0); //@line 4769 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 9; break; } else { __label__ = 69; break; } //@line 4769 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then24
      var $35=$prevsize; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$35 >>> 3; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp25=(($shr)>>>0) < 32; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp25) { __label__ = 10; break; } else { __label__ = 22; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then27
      var $36=$p; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($36+8)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $37=HEAP32[(($fd)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$37; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $38=$p; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($38+12)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($bk)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B=$39; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=$prevsize; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr28=$40 >>> 3; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$shr28; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$F; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=$B; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp29=(($41)|0)==(($42)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp29) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then31
      var $43=$I; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $43; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[((((__gm_)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and32=$44 & $neg; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and32; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_else33
      var $45=$F; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $46=$I; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl34=$46 << 1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=((((__gm_+40)|0)+($shl34<<2))|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$arrayidx; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$47; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp35=(($45)|0)==(($48)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp35) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $lor_lhs_false
      var $49=$F; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $50=$49; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $51=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp37=(($50)>>>0) >= (($51)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp37) { __label__ = 14; break; } else { var $60 = 0;__label__ = 17; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $land_rhs39
      var $52=$B; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$I; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl40=$53 << 1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx41=((((__gm_+40)|0)+($shl40<<2))|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $54=$arrayidx41; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=$54; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp42=(($52)|0)==(($55)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp42) { var $59 = 1;__label__ = 16; break; } else { __label__ = 15; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $lor_rhs
      var $56=$B; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $58=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp44=(($57)>>>0) >= (($58)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59 = $cmp44;__label__ = 16; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $lor_end
      var $59;
      var $60 = $59;__label__ = 17; break;
    case 17: // $land_end46
      var $60;
      var $land_ext47=(($60)&1);
      var $expval48=(($land_ext47)==(1));
      var $tobool49=(($expval48)|0)!=0;
      if ($tobool49) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: // $if_then50
      var $61=$B; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$F; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk51=(($62+12)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk51)>>2)]=$61; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $63=$F; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=$B; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd52=(($64+8)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd52)>>2)]=$63; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_else53
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end
      __label__ = 21; break;
    case 21: // $if_end54
      __label__ = 68; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_else55
      var $65=$p; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $TP=$66; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent=(($67+24)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=HEAP32[(($parent)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $XP=$68; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $69=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk56=(($69+12)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($bk56)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $71=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp57=(($70)|0)!=(($71)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp57) { __label__ = 23; break; } else { __label__ = 27; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then59
      var $72=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd61=(($72+8)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $73=HEAP32[(($fd61)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F60=$73; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk62=(($74+12)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=HEAP32[(($bk62)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$75; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=$F60; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $77=$76; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $78=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp63=(($77)>>>0) >= (($78)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv64=(($cmp63)&1); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval65=(($conv64)==(1)); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool66=(($expval65)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool66) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then67
      var $79=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $80=$F60; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk68=(($80+12)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk68)>>2)]=$79; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $81=$F60; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd69=(($82+8)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd69)>>2)]=$81; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_else70
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end71
      __label__ = 39; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_else72
      var $83=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child=(($83+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx73=(($child+4)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx73; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[(($arrayidx73)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$84; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp74=(($84)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp74) { __label__ = 29; break; } else { __label__ = 28; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $lor_lhs_false76
      var $85=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child77=(($85+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx78=(($child77)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx78; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $86=HEAP32[(($arrayidx78)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$86; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp79=(($86)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp79) { __label__ = 29; break; } else { __label__ = 38; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then81
      __label__ = 30; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $while_cond
      var $87=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child82=(($87+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx83=(($child82+4)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx83; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($arrayidx83)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp84=(($88)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp84) { var $91 = 1;__label__ = 32; break; } else { __label__ = 31; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $lor_rhs86
      var $89=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child87=(($89+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx88=(($child87)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx88; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($arrayidx88)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp89=(($90)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $91 = $cmp89;__label__ = 32; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $lor_end91
      var $91;
      if ($91) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 33: // $while_body
      var $92=$CP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$92; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($92)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$93; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $while_end
      var $94=$RP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $95=$94; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp92=(($95)>>>0) >= (($96)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv93=(($cmp92)&1); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval94=(($conv93)==(1)); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool95=(($expval94)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool95) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_then96
      var $97=$RP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($97)>>2)]=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 37; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_else97
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_end98
      __label__ = 38; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_end99
      __label__ = 39; break;
    case 39: // $if_end100
      var $98=$XP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($98)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp101) { __label__ = 40; break; } else { __label__ = 67; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then103
      var $99=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index=(($99+28)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $100=HEAP32[(($index)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx104=((((__gm_+304)|0)+($100<<2))|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx104; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $102=$H; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $103=HEAP32[(($102)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp105=(($101)|0)==(($103)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp105) { __label__ = 41; break; } else { __label__ = 44; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then107
      var $104=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $105=$H; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($105)>>2)]=$104; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp108=(($104)|0)==0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp108) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then110
      var $106=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index111=(($106+28)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $107=HEAP32[(($index111)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl112=1 << $107; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg113=$shl112 ^ -1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and114=$108 & $neg113; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$and114; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_end115
      __label__ = 51; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_else116
      var $109=$XP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $110=$109; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $111=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp117=(($110)>>>0) >= (($111)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv118=(($cmp117)&1); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval119=(($conv118)==(1)); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool120=(($expval119)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool120) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_then121
      var $112=$XP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child122=(($112+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx123=(($child122)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($arrayidx123)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp124=(($113)|0)==(($114)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp124) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_then126
      var $115=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $116=$XP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child127=(($116+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx128=(($child127)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx128)>>2)]=$115; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_else129
      var $117=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $118=$XP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child130=(($118+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx131=(($child130+4)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx131)>>2)]=$117; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break;
    case 48: // $if_end132
      __label__ = 50; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_else133
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end134
      __label__ = 51; break;
    case 51: // $if_end135
      var $119=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp136=(($119)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp136) { __label__ = 52; break; } else { __label__ = 66; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_then138
      var $120=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=$120; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $122=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp139=(($121)>>>0) >= (($122)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv140=(($cmp139)&1); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval141=(($conv140)==(1)); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool142=(($expval141)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool142) { __label__ = 53; break; } else { __label__ = 64; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_then143
      var $123=$XP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $124=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent144=(($124+24)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent144)>>2)]=$123; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child145=(($125+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx146=(($child145)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=HEAP32[(($arrayidx146)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C0=$126; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp147=(($126)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp147) { __label__ = 54; break; } else { __label__ = 58; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_then149
      var $127=$C0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=$127; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp150=(($128)>>>0) >= (($129)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv151=(($cmp150)&1); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval152=(($conv151)==(1)); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool153=(($expval152)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool153) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_then154
      var $130=$C0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $131=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child155=(($131+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx156=(($child155)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx156)>>2)]=$130; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $132=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $133=$C0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent157=(($133+24)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent157)>>2)]=$132; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 57; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_else158
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_end159
      __label__ = 58; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_end160
      var $134=$TP; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child161=(($134+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx162=(($child161+4)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($arrayidx162)>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C1=$135; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp163=(($135)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp163) { __label__ = 59; break; } else { __label__ = 63; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then165
      var $136=$C1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $137=$136; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $138=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp166=(($137)>>>0) >= (($138)>>>0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv167=(($cmp166)&1); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval168=(($conv167)==(1)); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool169=(($expval168)|0)!=0; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool169) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_then170
      var $139=$C1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child171=(($140+16)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx172=(($child171+4)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx172)>>2)]=$139; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=$R; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $142=$C1; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent173=(($142+24)|0); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent173)>>2)]=$141; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_else174
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_end175
      __label__ = 63; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_end176
      __label__ = 65; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_else177
      _abort(); //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_end178
      __label__ = 66; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 66: // $if_end179
      __label__ = 67; break; //@line 4770 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end180
      __label__ = 68; break;
    case 68: // $if_end181
      __label__ = 72; break; //@line 4771 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 69: // $if_else182
      var $143=$next; //@line 4772 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head183=(($143+4)|0); //@line 4772 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144=HEAP32[(($head183)>>2)]; //@line 4772 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and184=$144 & 3; //@line 4772 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp185=(($and184)|0)==3; //@line 4772 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp185) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 4772 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 70: // $if_then187
      var $145=$psize; //@line 4773 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$145; //@line 4773 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=$next; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head188=(($146+4)|0); //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $147=HEAP32[(($head188)>>2)]; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and189=$147 & -2; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head188)>>2)]=$and189; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $148=$psize; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$148 | 1; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=$p; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head190=(($149+4)|0); //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head190)>>2)]=$or; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $150=$psize; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=$p; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $152=$151; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $153=$psize; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr191=(($152+$153)|0); //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$add_ptr191; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot192=(($154)|0); //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot192)>>2)]=$150; //@line 4774 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4775 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_end193
      __label__ = 72; break;
    case 72: // $if_end194
      __label__ = 74; break; //@line 4777 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_else195
      __label__ = 193; break; //@line 4779 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_end196
      __label__ = 75; break;
    case 75: // $if_end197
      __label__ = 76; break; //@line 4781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_end198
      var $155=$p; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $156=$155; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=$next; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp199=(($156)>>>0) < (($158)>>>0); //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp199) { __label__ = 77; break; } else { var $161 = 0;__label__ = 78; break; } //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 77: // $land_rhs201
      var $159=$next; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head202=(($159+4)|0); //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $160=HEAP32[(($head202)>>2)]; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and203=$160 & 1; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool204=(($and203)|0)!=0; //@line 4783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161 = $tobool204;__label__ = 78; break;
    case 78: // $land_end205
      var $161;
      var $land_ext206=(($161)&1);
      var $expval207=(($land_ext206)==(1));
      var $tobool208=(($expval207)|0)!=0;
      if ($tobool208) { __label__ = 79; break; } else { __label__ = 191; break; }
    case 79: // $if_then209
      var $162=$next; //@line 4784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head210=(($162+4)|0); //@line 4784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $163=HEAP32[(($head210)>>2)]; //@line 4784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and211=$163 & 2; //@line 4784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool212=(($and211)|0)!=0; //@line 4784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool212) { __label__ = 152; break; } else { __label__ = 80; break; } //@line 4784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_then213
      var $164=$next; //@line 4785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp214=(($164)|0)==(($165)|0); //@line 4785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp214) { __label__ = 81; break; } else { __label__ = 86; break; } //@line 4785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_then216
      var $166=$psize; //@line 4786 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $167=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4786 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add217=(($167+$166)|0); //@line 4786 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$add217; //@line 4786 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=$add217; //@line 4786 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=$p; //@line 4787 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$168; //@line 4787 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=$tsize; //@line 4788 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or218=$169 | 1; //@line 4788 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=$p; //@line 4788 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head219=(($170+4)|0); //@line 4788 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head219)>>2)]=$or218; //@line 4788 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=$p; //@line 4789 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4789 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp220=(($171)|0)==(($172)|0); //@line 4789 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp220) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 4789 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 82: // $if_then222
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4790 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4791 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 83; break; //@line 4792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_end223
      var $173=$tsize; //@line 4793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $174=HEAPU32[((((__gm_+28)|0))>>2)]; //@line 4793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp224=(($173)>>>0) > (($174)>>>0); //@line 4793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp224) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 4793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_then226
      var $call=_sys_trim(__gm_, 0); //@line 4794 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 4794 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 85: // $if_end227
      __label__ = 194; break; //@line 4795 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 86: // $if_else228
      var $175=$next; //@line 4797 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4797 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp229=(($175)|0)==(($176)|0); //@line 4797 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp229) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 4797 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 87: // $if_then231
      var $177=$psize; //@line 4798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $178=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add232=(($178+$177)|0); //@line 4798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$add232; //@line 4798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $dsize=$add232; //@line 4798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=$p; //@line 4799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$179; //@line 4799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $180=$dsize; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or233=$180 | 1; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181=$p; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head234=(($181+4)|0); //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head234)>>2)]=$or233; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $182=$dsize; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $183=$p; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $184=$183; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $185=$dsize; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr235=(($184+$185)|0); //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $186=$add_ptr235; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot236=(($186)|0); //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot236)>>2)]=$182; //@line 4800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 88: // $if_else237
      var $187=$next; //@line 4804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head238=(($187+4)|0); //@line 4804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $188=HEAP32[(($head238)>>2)]; //@line 4804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and239=$188 & -8; //@line 4804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nsize=$and239; //@line 4804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $189=$nsize; //@line 4805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $190=$psize; //@line 4805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add240=(($190+$189)|0); //@line 4805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$add240; //@line 4805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $191=$nsize; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr241=$191 >>> 3; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp242=(($shr241)>>>0) < 32; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp242) { __label__ = 89; break; } else { __label__ = 101; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 89: // $if_then244
      var $192=$next; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd246=(($192+8)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $193=HEAP32[(($fd246)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F245=$193; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $194=$next; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk248=(($194+12)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $195=HEAP32[(($bk248)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B247=$195; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $196=$nsize; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr250=$196 >>> 3; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I249=$shr250; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $197=$F245; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $198=$B247; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp251=(($197)|0)==(($198)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp251) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 90: // $if_then253
      var $199=$I249; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl254=1 << $199; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg255=$shl254 ^ -1; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $200=HEAP32[((((__gm_)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and256=$200 & $neg255; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and256; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 100; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 91: // $if_else257
      var $201=$F245; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $202=$I249; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl258=$202 << 1; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx259=((((__gm_+40)|0)+($shl258<<2))|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $203=$arrayidx259; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $204=$203; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp260=(($201)|0)==(($204)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp260) { __label__ = 93; break; } else { __label__ = 92; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 92: // $lor_lhs_false262
      var $205=$F245; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $206=$205; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $207=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp263=(($206)>>>0) >= (($207)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp263) { __label__ = 93; break; } else { var $216 = 0;__label__ = 96; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 93: // $land_rhs265
      var $208=$B247; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $209=$I249; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl266=$209 << 1; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx267=((((__gm_+40)|0)+($shl266<<2))|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $210=$arrayidx267; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $211=$210; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp268=(($208)|0)==(($211)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp268) { var $215 = 1;__label__ = 95; break; } else { __label__ = 94; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 94: // $lor_rhs270
      var $212=$B247; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $213=$212; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $214=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp271=(($213)>>>0) >= (($214)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $215 = $cmp271;__label__ = 95; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 95: // $lor_end273
      var $215;
      var $216 = $215;__label__ = 96; break;
    case 96: // $land_end274
      var $216;
      var $land_ext275=(($216)&1);
      var $expval276=(($land_ext275)==(1));
      var $tobool277=(($expval276)|0)!=0;
      if ($tobool277) { __label__ = 97; break; } else { __label__ = 98; break; }
    case 97: // $if_then278
      var $217=$B247; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $218=$F245; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk279=(($218+12)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk279)>>2)]=$217; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $219=$F245; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $220=$B247; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd280=(($220+8)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd280)>>2)]=$219; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 98: // $if_else281
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 99: // $if_end282
      __label__ = 100; break;
    case 100: // $if_end283
      __label__ = 147; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 101: // $if_else284
      var $221=$next; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $222=$221; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $TP285=$222; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $223=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent287=(($223+24)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $224=HEAP32[(($parent287)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $XP286=$224; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $225=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk289=(($225+12)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $226=HEAP32[(($bk289)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $227=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp290=(($226)|0)!=(($227)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp290) { __label__ = 102; break; } else { __label__ = 106; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 102: // $if_then292
      var $228=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd294=(($228+8)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $229=HEAP32[(($fd294)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F293=$229; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $230=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk295=(($230+12)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $231=HEAP32[(($bk295)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R288=$231; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $232=$F293; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $233=$232; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $234=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp296=(($233)>>>0) >= (($234)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv297=(($cmp296)&1); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval298=(($conv297)==(1)); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool299=(($expval298)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool299) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 103: // $if_then300
      var $235=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $236=$F293; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk301=(($236+12)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk301)>>2)]=$235; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $237=$F293; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $238=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd302=(($238+8)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd302)>>2)]=$237; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 105; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 104: // $if_else303
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 105: // $if_end304
      __label__ = 118; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 106: // $if_else305
      var $239=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child307=(($239+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx308=(($child307+4)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP306=$arrayidx308; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $240=HEAP32[(($arrayidx308)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R288=$240; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp309=(($240)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp309) { __label__ = 108; break; } else { __label__ = 107; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 107: // $lor_lhs_false311
      var $241=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child312=(($241+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx313=(($child312)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP306=$arrayidx313; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $242=HEAP32[(($arrayidx313)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R288=$242; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp314=(($242)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp314) { __label__ = 108; break; } else { __label__ = 117; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 108: // $if_then316
      __label__ = 109; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 109: // $while_cond318
      var $243=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child319=(($243+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx320=(($child319+4)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP317=$arrayidx320; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $244=HEAP32[(($arrayidx320)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp321=(($244)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp321) { var $247 = 1;__label__ = 111; break; } else { __label__ = 110; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 110: // $lor_rhs323
      var $245=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child324=(($245+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx325=(($child324)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP317=$arrayidx325; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $246=HEAP32[(($arrayidx325)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp326=(($246)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $247 = $cmp326;__label__ = 111; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 111: // $lor_end328
      var $247;
      if ($247) { __label__ = 112; break; } else { __label__ = 113; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 112: // $while_body329
      var $248=$CP317; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP306=$248; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $249=HEAP32[(($248)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R288=$249; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 109; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 113: // $while_end330
      var $250=$RP306; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $251=$250; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $252=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp331=(($251)>>>0) >= (($252)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv332=(($cmp331)&1); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval333=(($conv332)==(1)); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool334=(($expval333)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool334) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 114: // $if_then335
      var $253=$RP306; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($253)>>2)]=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 116; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 115: // $if_else336
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 116: // $if_end337
      __label__ = 117; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 117: // $if_end338
      __label__ = 118; break;
    case 118: // $if_end339
      var $254=$XP286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp340=(($254)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp340) { __label__ = 119; break; } else { __label__ = 146; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 119: // $if_then342
      var $255=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index344=(($255+28)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $256=HEAP32[(($index344)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx345=((((__gm_+304)|0)+($256<<2))|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H343=$arrayidx345; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $257=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $258=$H343; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $259=HEAP32[(($258)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp346=(($257)|0)==(($259)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp346) { __label__ = 120; break; } else { __label__ = 123; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 120: // $if_then348
      var $260=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $261=$H343; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($261)>>2)]=$260; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp349=(($260)|0)==0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp349) { __label__ = 121; break; } else { __label__ = 122; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 121: // $if_then351
      var $262=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index352=(($262+28)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $263=HEAP32[(($index352)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl353=1 << $263; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg354=$shl353 ^ -1; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $264=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and355=$264 & $neg354; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$and355; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 122; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 122: // $if_end356
      __label__ = 130; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 123: // $if_else357
      var $265=$XP286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $266=$265; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $267=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp358=(($266)>>>0) >= (($267)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv359=(($cmp358)&1); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval360=(($conv359)==(1)); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool361=(($expval360)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool361) { __label__ = 124; break; } else { __label__ = 128; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 124: // $if_then362
      var $268=$XP286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child363=(($268+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx364=(($child363)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $269=HEAP32[(($arrayidx364)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $270=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp365=(($269)|0)==(($270)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp365) { __label__ = 125; break; } else { __label__ = 126; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 125: // $if_then367
      var $271=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $272=$XP286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child368=(($272+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx369=(($child368)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx369)>>2)]=$271; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 127; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 126: // $if_else370
      var $273=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $274=$XP286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child371=(($274+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx372=(($child371+4)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx372)>>2)]=$273; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 127; break;
    case 127: // $if_end373
      __label__ = 129; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 128: // $if_else374
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 129: // $if_end375
      __label__ = 130; break;
    case 130: // $if_end376
      var $275=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp377=(($275)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp377) { __label__ = 131; break; } else { __label__ = 145; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 131: // $if_then379
      var $276=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $277=$276; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $278=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp380=(($277)>>>0) >= (($278)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv381=(($cmp380)&1); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval382=(($conv381)==(1)); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool383=(($expval382)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool383) { __label__ = 132; break; } else { __label__ = 143; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 132: // $if_then384
      var $279=$XP286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $280=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent387=(($280+24)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent387)>>2)]=$279; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $281=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child388=(($281+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx389=(($child388)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $282=HEAP32[(($arrayidx389)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C0385=$282; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp390=(($282)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp390) { __label__ = 133; break; } else { __label__ = 137; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 133: // $if_then392
      var $283=$C0385; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $284=$283; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $285=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp393=(($284)>>>0) >= (($285)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv394=(($cmp393)&1); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval395=(($conv394)==(1)); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool396=(($expval395)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool396) { __label__ = 134; break; } else { __label__ = 135; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 134: // $if_then397
      var $286=$C0385; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $287=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child398=(($287+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx399=(($child398)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx399)>>2)]=$286; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $288=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $289=$C0385; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent400=(($289+24)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent400)>>2)]=$288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 136; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 135: // $if_else401
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 136: // $if_end402
      __label__ = 137; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 137: // $if_end403
      var $290=$TP285; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child404=(($290+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx405=(($child404+4)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $291=HEAP32[(($arrayidx405)>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C1386=$291; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp406=(($291)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp406) { __label__ = 138; break; } else { __label__ = 142; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 138: // $if_then408
      var $292=$C1386; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $293=$292; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $294=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp409=(($293)>>>0) >= (($294)>>>0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv410=(($cmp409)&1); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval411=(($conv410)==(1)); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool412=(($expval411)|0)!=0; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool412) { __label__ = 139; break; } else { __label__ = 140; break; } //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 139: // $if_then413
      var $295=$C1386; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $296=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child414=(($296+16)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx415=(($child414+4)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx415)>>2)]=$295; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $297=$R288; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $298=$C1386; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent416=(($298+24)|0); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent416)>>2)]=$297; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 141; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 140: // $if_else417
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 141: // $if_end418
      __label__ = 142; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 142: // $if_end419
      __label__ = 144; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 143: // $if_else420
      _abort(); //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 144: // $if_end421
      __label__ = 145; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 145: // $if_end422
      __label__ = 146; break; //@line 4806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 146: // $if_end423
      __label__ = 147; break;
    case 147: // $if_end424
      var $299=$psize; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or425=$299 | 1; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $300=$p; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head426=(($300+4)|0); //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head426)>>2)]=$or425; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $301=$psize; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $302=$p; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $303=$302; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $304=$psize; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr427=(($303+$304)|0); //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $305=$add_ptr427; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot428=(($305)|0); //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot428)>>2)]=$301; //@line 4807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $306=$p; //@line 4808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $307=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp429=(($306)|0)==(($307)|0); //@line 4808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp429) { __label__ = 148; break; } else { __label__ = 149; break; } //@line 4808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 148: // $if_then431
      var $308=$psize; //@line 4809 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$308; //@line 4809 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 149: // $if_end432
      __label__ = 150; break;
    case 150: // $if_end433
      __label__ = 151; break;
    case 151: // $if_end434
      __label__ = 153; break; //@line 4813 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 152: // $if_else435
      var $309=$next; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head436=(($309+4)|0); //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $310=HEAP32[(($head436)>>2)]; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and437=$310 & -2; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head436)>>2)]=$and437; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $311=$psize; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or438=$311 | 1; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $312=$p; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head439=(($312+4)|0); //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head439)>>2)]=$or438; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $313=$psize; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $314=$p; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $315=$314; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $316=$psize; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr440=(($315+$316)|0); //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $317=$add_ptr440; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot441=(($317)|0); //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot441)>>2)]=$313; //@line 4815 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 153; break;
    case 153: // $if_end442
      var $318=$psize; //@line 4817 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr443=$318 >>> 3; //@line 4817 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp444=(($shr443)>>>0) < 32; //@line 4817 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp444) { __label__ = 154; break; } else { __label__ = 161; break; } //@line 4817 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 154: // $if_then446
      var $319=$psize; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr448=$319 >>> 3; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I447=$shr448; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $320=$I447; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl450=$320 << 1; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx451=((((__gm_+40)|0)+($shl450<<2))|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $321=$arrayidx451; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $322=$321; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B449=$322; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $323=$B449; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F452=$323; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $324=HEAP32[((((__gm_)|0))>>2)]; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $325=$I447; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl453=1 << $325; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and454=$324 & $shl453; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool455=(($and454)|0)!=0; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool455) { __label__ = 156; break; } else { __label__ = 155; break; } //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 155: // $if_then456
      var $326=$I447; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl457=1 << $326; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $327=HEAP32[((((__gm_)|0))>>2)]; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or458=$327 | $shl457; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$or458; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 160; break; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 156: // $if_else459
      var $328=$B449; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd460=(($328+8)|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $329=HEAP32[(($fd460)>>2)]; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $330=$329; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $331=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp461=(($330)>>>0) >= (($331)>>>0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv462=(($cmp461)&1); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval463=(($conv462)==(1)); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool464=(($expval463)|0)!=0; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool464) { __label__ = 157; break; } else { __label__ = 158; break; } //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 157: // $if_then465
      var $332=$B449; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd466=(($332+8)|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $333=HEAP32[(($fd466)>>2)]; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F452=$333; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 159; break; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 158: // $if_else467
      _abort(); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 159: // $if_end468
      __label__ = 160; break;
    case 160: // $if_end469
      var $334=$p; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $335=$B449; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd470=(($335+8)|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd470)>>2)]=$334; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $336=$p; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $337=$F452; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk471=(($337+12)|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk471)>>2)]=$336; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $338=$F452; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $339=$p; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd472=(($339+8)|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd472)>>2)]=$338; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $340=$B449; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $341=$p; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk473=(($341+12)|0); //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk473)>>2)]=$340; //@line 4818 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 190; break; //@line 4820 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 161: // $if_else474
      var $342=$p; //@line 4822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $343=$342; //@line 4822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tp=$343; //@line 4822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $344=$psize; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr477=$344 >>> 8; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $X=$shr477; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $345=$X; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp478=(($345)|0)==0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp478) { __label__ = 162; break; } else { __label__ = 163; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 162: // $if_then480
      $I476=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 167; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 163: // $if_else481
      var $346=$X; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp482=(($346)>>>0) > 65535; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp482) { __label__ = 164; break; } else { __label__ = 165; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 164: // $if_then484
      $I476=31; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 166; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 165: // $if_else485
      var $347=$X; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$347; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $348=$Y; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(($348-256)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr486=$sub >>> 16; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and487=$shr486 & 8; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$and487; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $349=$N; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $350=$Y; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl488=$350 << $349; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl488; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub489=(($shl488-4096)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr490=$sub489 >>> 16; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and491=$shr490 & 4; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and491; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $351=$K; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $352=$N; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add492=(($352+$351)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add492; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $353=$K; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $354=$Y; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl493=$354 << $353; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl493; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub494=(($shl493-16384)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr495=$sub494 >>> 16; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and496=$shr495 & 2; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and496; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $355=$N; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add497=(($355+$and496)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add497; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $356=$N; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub498=((14-$356)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $357=$K; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $358=$Y; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl499=$358 << $357; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl499; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr500=$shl499 >>> 15; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add501=(($sub498+$shr500)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$add501; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $359=$K; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl502=$359 << 1; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $360=$psize; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $361=$K; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add503=(($361+7)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr504=$360 >>> (($add503)>>>0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and505=$shr504 & 1; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add506=(($shl502+$and505)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I476=$add506; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 166; break;
    case 166: // $if_end507
      __label__ = 167; break;
    case 167: // $if_end508
      var $362=$I476; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx509=((((__gm_+304)|0)+($362<<2))|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H475=$arrayidx509; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $363=$I476; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $364=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index510=(($364+28)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index510)>>2)]=$363; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $365=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child511=(($365+16)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx512=(($child511+4)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx512)>>2)]=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $366=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child513=(($366+16)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx514=(($child513)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx514)>>2)]=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $367=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $368=$I476; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl515=1 << $368; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and516=$367 & $shl515; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool517=(($and516)|0)!=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool517) { __label__ = 169; break; } else { __label__ = 168; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 168: // $if_then518
      var $369=$I476; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl519=1 << $369; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $370=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or520=$370 | $shl519; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$or520; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $371=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $372=$H475; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($372)>>2)]=$371; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $373=$H475; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $374=$373; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $375=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent521=(($375+24)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent521)>>2)]=$374; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $376=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $377=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk522=(($377+12)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk522)>>2)]=$376; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $378=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd523=(($378+8)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd523)>>2)]=$376; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 187; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 169: // $if_else524
      var $379=$H475; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $380=HEAP32[(($379)>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$380; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $381=$psize; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $382=$I476; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp526=(($382)|0)==31; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp526) { __label__ = 170; break; } else { __label__ = 171; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 170: // $cond_true
      var $cond = 0;__label__ = 172; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 171: // $cond_false
      var $383=$I476; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr528=$383 >>> 1; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add529=(($shr528+8)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub530=(($add529-2)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub531=((31-$sub530)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $sub531;__label__ = 172; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 172: // $cond_end
      var $cond; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl532=$381 << $cond; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K525=$shl532; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 173; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 173: // $for_cond
      var $384=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head533=(($384+4)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($head533)>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and534=$385 & -8; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $386=$psize; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp535=(($and534)|0)!=(($386)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp535) { __label__ = 174; break; } else { __label__ = 180; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 174: // $if_then537
      var $387=$K525; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr538=$387 >>> 31; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and539=$shr538 & 1; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $388=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child540=(($388+16)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx541=(($child540+($and539<<2))|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx541; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $389=$K525; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl542=$389 << 1; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K525=$shl542; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $390=$C; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $391=HEAP32[(($390)>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp543=(($391)|0)!=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp543) { __label__ = 175; break; } else { __label__ = 176; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 175: // $if_then545
      var $392=$C; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $393=HEAP32[(($392)>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$393; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 179; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 176: // $if_else546
      var $394=$C; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $395=$394; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $396=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp547=(($395)>>>0) >= (($396)>>>0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv548=(($cmp547)&1); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval549=(($conv548)==(1)); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool550=(($expval549)|0)!=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool550) { __label__ = 177; break; } else { __label__ = 178; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 177: // $if_then551
      var $397=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $398=$C; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($398)>>2)]=$397; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $399=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $400=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent552=(($400+24)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent552)>>2)]=$399; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $401=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $402=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk553=(($402+12)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk553)>>2)]=$401; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $403=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd554=(($403+8)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd554)>>2)]=$401; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 186; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 178: // $if_else555
      _abort(); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 179: // $if_end556
      __label__ = 185; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 180: // $if_else557
      var $404=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd559=(($404+8)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $405=HEAP32[(($fd559)>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F558=$405; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $406=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $407=$406; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $408=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp560=(($407)>>>0) >= (($408)>>>0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp560) { __label__ = 181; break; } else { var $412 = 0;__label__ = 182; break; } //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 181: // $land_rhs562
      var $409=$F558; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $410=$409; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $411=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp563=(($410)>>>0) >= (($411)>>>0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $412 = $cmp563;__label__ = 182; break;
    case 182: // $land_end565
      var $412;
      var $land_ext566=(($412)&1);
      var $expval567=(($land_ext566)==(1));
      var $tobool568=(($expval567)|0)!=0;
      if ($tobool568) { __label__ = 183; break; } else { __label__ = 184; break; }
    case 183: // $if_then569
      var $413=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $414=$F558; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk570=(($414+12)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk570)>>2)]=$413; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $415=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd571=(($415+8)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd571)>>2)]=$413; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $416=$F558; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $417=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd572=(($417+8)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd572)>>2)]=$416; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $418=$T; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $419=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk573=(($419+12)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk573)>>2)]=$418; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $420=$tp; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent574=(($420+24)|0); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent574)>>2)]=0; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 186; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 184: // $if_else575
      _abort(); //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 185: // $if_end576
      __label__ = 173; break; //@line 4823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 186: // $for_end
      __label__ = 187; break;
    case 187: // $if_end577
      var $421=HEAP32[((((__gm_+32)|0))>>2)]; //@line 4825 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dec=(($421-1)|0); //@line 4825 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+32)|0))>>2)]=$dec; //@line 4825 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp578=(($dec)|0)==0; //@line 4825 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp578) { __label__ = 188; break; } else { __label__ = 189; break; } //@line 4825 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 188: // $if_then580
      var $call581=_release_unused_segments(__gm_); //@line 4826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 189; break; //@line 4826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 189: // $if_end582
      __label__ = 190; break;
    case 190: // $if_end583
      __label__ = 194; break; //@line 4828 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 191: // $if_end584
      __label__ = 192; break; //@line 4830 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 192: // $if_end585
      __label__ = 193; break; //@line 4830 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 193: // $erroraction
      _abort(); //@line 4832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 194: // $postaction
      __label__ = 195; break; //@line 4836 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 195: // $if_end586
      ;
      return; //@line 4840 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_free["X"]=1;

function _sys_trim($m, $pad) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $pad_addr;
      var $released;
      var $unit;
      var $extra;
      var $sp;
      var $old_br;
      var $rel_br;
      var $new_br;
      $m_addr=$m;
      $pad_addr=$pad;
      $released=0; //@line 4126 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 4127 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$pad_addr; //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($2)>>>0) < 4294967232; //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 24; break; } //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $3=$m_addr; //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top=(($3+24)|0); //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[(($top)>>2)]; //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($4)|0)!=0; //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 24; break; } //@line 4128 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_then
      var $5=$pad_addr; //@line 4129 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($5+40)|0); //@line 4129 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $pad_addr=$add; //@line 4129 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$m_addr; //@line 4131 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($6+12)|0); //@line 4131 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=HEAPU32[(($topsize)>>2)]; //@line 4131 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$pad_addr; //@line 4131 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp3=(($7)>>>0) > (($8)>>>0); //@line 4131 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp3) { __label__ = 5; break; } else { __label__ = 20; break; } //@line 4131 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then4
      var $9=HEAP32[((((_mparams+8)|0))>>2)]; //@line 4133 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $unit=$9; //@line 4133 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$m_addr; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize5=(($10+12)|0); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($topsize5)>>2)]; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$pad_addr; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(($11-$12)|0); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$unit; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub6=(($13-1)|0); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add7=(($sub+$sub6)|0); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$unit; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $div=Math.floor((($add7)>>>0)/(($14)>>>0)); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub8=(($div-1)|0); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$unit; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $mul=(($sub8*$15)|0); //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $extra=$mul; //@line 4135 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$m_addr; //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$m_addr; //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top9=(($17+24)|0); //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($top9)>>2)]; //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$18; //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call10=_segment_holding($16, $19); //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$call10; //@line 4136 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$sp; //@line 4138 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($20+12)|0); //@line 4138 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[(($sflags)>>2)]; //@line 4138 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$21 & 8; //@line 4138 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool11=(($and)|0)!=0; //@line 4138 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool11) { __label__ = 17; break; } else { __label__ = 6; break; } //@line 4138 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then12
      var $22=$sp; //@line 4139 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags13=(($22+12)|0); //@line 4139 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=HEAP32[(($sflags13)>>2)]; //@line 4139 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and14=$23 & 0; //@line 4139 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool15=(($and14)|0)!=0; //@line 4139 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool15) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4139 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then16
      __label__ = 16; break; //@line 4150 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_else
      var $24=$extra; //@line 4152 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp17=(($24)>>>0) >= 2147483647; //@line 4152 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp17) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4152 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then18
      var $25=$unit; //@line 4153 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub19=((-2147483648-$25)|0); //@line 4153 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $extra=$sub19; //@line 4153 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 4153 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end
      var $call20=_sbrk(0); //@line 4157 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $old_br=$call20; //@line 4157 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$old_br; //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$sp; //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base=(($27)|0); //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=HEAP32[(($base)>>2)]; //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$sp; //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size=(($29+4)|0); //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($size)>>2)]; //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($28+$30)|0); //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp21=(($26)|0)==(($add_ptr)|0); //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp21) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 4158 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then22
      var $31=$extra; //@line 4159 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub23=(((-$31))|0); //@line 4159 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call24=_sbrk($sub23); //@line 4159 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rel_br=$call24; //@line 4159 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call25=_sbrk(0); //@line 4160 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $new_br=$call25; //@line 4160 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$rel_br; //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($32)|0)!=-1; //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 12; break; } else { __label__ = 14; break; } //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $land_lhs_true27
      var $33=$new_br; //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=$old_br; //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($33)>>>0) < (($34)>>>0); //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4161 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then29
      var $35=$old_br; //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=$new_br; //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$35; //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$36; //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $released=$sub_ptr_sub; //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break; //@line 4162 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_end30
      __label__ = 15; break; //@line 4163 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end31
      __label__ = 16; break;
    case 16: // $if_end32
      __label__ = 17; break; //@line 4167 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_end33
      var $37=$released; //@line 4169 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp34=(($37)|0)!=0; //@line 4169 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp34) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 4169 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then35
      var $38=$released; //@line 4170 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=$sp; //@line 4170 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size36=(($39+4)|0); //@line 4170 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($size36)>>2)]; //@line 4170 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub37=(($40-$38)|0); //@line 4170 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size36)>>2)]=$sub37; //@line 4170 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$released; //@line 4171 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=$m_addr; //@line 4171 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($42+432)|0); //@line 4171 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[(($footprint)>>2)]; //@line 4171 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub38=(($43-$41)|0); //@line 4171 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$sub38; //@line 4171 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=$m_addr; //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=$m_addr; //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top39=(($45+24)|0); //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $46=HEAP32[(($top39)>>2)]; //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$m_addr; //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize40=(($47+12)|0); //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=HEAP32[(($topsize40)>>2)]; //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $49=$released; //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub41=(($48-$49)|0); //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _init_top($44, $46, $sub41); //@line 4172 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4174 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end42
      __label__ = 20; break; //@line 4175 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end43
      var $50=$released; //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp44=(($50)|0)==0; //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp44) { __label__ = 21; break; } else { __label__ = 23; break; } //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $land_lhs_true45
      var $51=$m_addr; //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize46=(($51+12)|0); //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=HEAPU32[(($topsize46)>>2)]; //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$m_addr; //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $trim_check=(($53+28)|0); //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $54=HEAPU32[(($trim_check)>>2)]; //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp47=(($52)>>>0) > (($54)>>>0); //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp47) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 4182 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_then48
      var $55=$m_addr; //@line 4183 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $trim_check49=(($55+28)|0); //@line 4183 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($trim_check49)>>2)]=-1; //@line 4183 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4183 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_end50
      __label__ = 24; break; //@line 4184 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_end51
      var $56=$released; //@line 4186 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp52=(($56)|0)!=0; //@line 4186 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond=$cmp52 ? 1 : 0; //@line 4186 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $cond; //@line 4186 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_trim["X"]=1;

function _segment_holding($m, $addr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $addr_addr;
      var $sp;
      $m_addr=$m;
      $addr_addr=$addr;
      var $0=$m_addr; //@line 2562 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg=(($0+444)|0); //@line 2562 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$seg; //@line 2562 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 2563 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $for_cond
      var $1=$addr_addr; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$sp; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base=(($2)|0); //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=HEAPU32[(($base)>>2)]; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($1)>>>0) >= (($3)>>>0); //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $land_lhs_true
      var $4=$addr_addr; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$sp; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base1=(($5)|0); //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($base1)>>2)]; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$sp; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size=(($7+4)|0); //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($size)>>2)]; //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($6+$8)|0); //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($4)>>>0) < (($add_ptr)>>>0); //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2564 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then
      var $9=$sp; //@line 2565 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=$9; //@line 2565 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 2565 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end
      var $10=$sp; //@line 2566 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $next=(($10+8)|0); //@line 2566 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($next)>>2)]; //@line 2566 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$11; //@line 2566 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp3=(($11)|0)==0; //@line 2566 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp3) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2566 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then4
      $retval=0; //@line 2567 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 2567 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_end5
      __label__ = 1; break; //@line 2568 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $return
      var $12=$retval; //@line 2569 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $12; //@line 2569 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _release_unused_segments($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $released;
      var $nsegs;
      var $pred;
      var $sp;
      var $base;
      var $size;
      var $next3;
      var $p;
      var $psize;
      var $tp;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $H147;
      var $I;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K197;
      var $C;
      var $F235;
      $m_addr=$m;
      $released=0; //@line 4079 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nsegs=0; //@line 4080 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $0=$m_addr; //@line 4081 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg=(($0+444)|0); //@line 4081 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $pred=$seg; //@line 4081 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=$pred; //@line 4082 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $next=(($1+8)|0); //@line 4082 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[(($next)>>2)]; //@line 4082 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$2; //@line 4082 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 4083 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $while_cond
      var $3=$sp; //@line 4083 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($3)|0)!=0; //@line 4083 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 86; break; } //@line 4083 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $while_body
      var $4=$sp; //@line 4084 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base1=(($4)|0); //@line 4084 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=HEAP32[(($base1)>>2)]; //@line 4084 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $base=$5; //@line 4084 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$sp; //@line 4085 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size2=(($6+4)|0); //@line 4085 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($size2)>>2)]; //@line 4085 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $size=$7; //@line 4085 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$sp; //@line 4086 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $next4=(($8+8)|0); //@line 4086 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=HEAP32[(($next4)>>2)]; //@line 4086 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $next3=$9; //@line 4086 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$nsegs; //@line 4087 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $inc=(($10+1)|0); //@line 4087 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nsegs=$inc; //@line 4087 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$sp; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($11+12)|0); //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=HEAP32[(($sflags)>>2)]; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$12 & 0; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($and)|0)!=0; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 3; break; } else { __label__ = 85; break; } //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $13=$sp; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags5=(($13+12)|0); //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($sflags5)>>2)]; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and6=$14 & 8; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool7=(($and6)|0)!=0; //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool7) { __label__ = 85; break; } else { __label__ = 4; break; } //@line 4088 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_then
      var $15=$base; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$base; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($16+8)|0); //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$add_ptr; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and8=$17 & 7; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp9=(($and8)|0)==0; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp9) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_true
      var $cond = 0;__label__ = 7; break; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_false
      var $18=$base; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr10=(($18+8)|0); //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$add_ptr10; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and11=$19 & 7; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and11)|0); //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and12=$sub & 7; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $and12;__label__ = 7; break; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $cond_end
      var $cond; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr13=(($15+$cond)|0); //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$add_ptr13; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$20; //@line 4089 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$p; //@line 4090 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($21+4)|0); //@line 4090 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=HEAP32[(($head)>>2)]; //@line 4090 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and14=$22 & -8; //@line 4090 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$and14; //@line 4090 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$p; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head15=(($23+4)|0); //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($head15)>>2)]; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and16=$24 & 3; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp17=(($and16)|0)!=1; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp17) { __label__ = 84; break; } else { __label__ = 8; break; } //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $land_lhs_true18
      var $25=$p; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$25; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$psize; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr19=(($26+$27)|0); //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$base; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$size; //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr20=(($28+$29)|0); //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr21=(($add_ptr20-40)|0); //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($add_ptr19)>>>0) >= (($add_ptr21)>>>0); //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 9; break; } else { __label__ = 84; break; } //@line 4092 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then23
      var $30=$p; //@line 4093 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=$30; //@line 4093 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tp=$31; //@line 4093 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$p; //@line 4095 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=$m_addr; //@line 4095 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dv=(($33+20)|0); //@line 4095 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[(($dv)>>2)]; //@line 4095 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($32)|0)==(($34)|0); //@line 4095 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4095 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then25
      var $35=$m_addr; //@line 4096 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dv26=(($35+20)|0); //@line 4096 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dv26)>>2)]=0; //@line 4096 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=$m_addr; //@line 4097 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($36+8)|0); //@line 4097 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dvsize)>>2)]=0; //@line 4097 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 57; break; //@line 4098 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_else
      var $37=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent=(($37+24)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($parent)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $XP=$38; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($39+12)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($bk)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp27=(($40)|0)!=(($41)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp27) { __label__ = 12; break; } else { __label__ = 16; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then28
      var $42=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($42+8)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[(($fd)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$43; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk29=(($44+12)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=HEAP32[(($bk29)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$45; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $46=$F; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$46; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($48+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $49=HEAPU32[(($least_addr)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp30=(($47)>>>0) >= (($49)>>>0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp30)&1); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool31=(($expval)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool31) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then32
      var $50=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $51=$F; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk33=(($51+12)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk33)>>2)]=$50; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=$F; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd34=(($53+8)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd34)>>2)]=$52; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_else35
      _abort(); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end
      __label__ = 28; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_else36
      var $54=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child=(($54+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($child+4)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=HEAP32[(($arrayidx)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$55; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp37=(($55)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp37) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $lor_lhs_false
      var $56=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child39=(($56+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx40=(($child39)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx40; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=HEAP32[(($arrayidx40)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$57; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp41=(($57)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp41) { __label__ = 18; break; } else { __label__ = 27; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then43
      __label__ = 19; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 19: // $while_cond44
      var $58=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child45=(($58+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx46=(($child45+4)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx46; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($arrayidx46)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp47=(($59)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp47) { var $62 = 1;__label__ = 21; break; } else { __label__ = 20; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $lor_rhs
      var $60=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child49=(($60+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx50=(($child49)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx50; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $61=HEAP32[(($arrayidx50)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp51=(($61)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62 = $cmp51;__label__ = 21; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $lor_end
      var $62;
      if ($62) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $while_body53
      var $63=$CP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$63; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($63)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$64; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $while_end
      var $65=$RP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr54=(($67+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=HEAPU32[(($least_addr54)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp55=(($66)>>>0) >= (($68)>>>0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv56=(($cmp55)&1); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval57=(($conv56)==(1)); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool58=(($expval57)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool58) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then59
      var $69=$RP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($69)>>2)]=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_else60
      _abort(); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end61
      __label__ = 27; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_end62
      __label__ = 28; break;
    case 28: // $if_end63
      var $70=$XP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp64=(($70)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp64) { __label__ = 29; break; } else { __label__ = 56; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then66
      var $71=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index=(($71+28)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($index)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $73=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($73+304)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx67=(($treebins+($72<<2))|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx67; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=$H; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($75)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp68=(($74)|0)==(($76)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp68) { __label__ = 30; break; } else { __label__ = 33; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then70
      var $77=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $78=$H; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($78)>>2)]=$77; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp71=(($77)|0)==0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp71) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then73
      var $79=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index74=(($79+28)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $80=HEAP32[(($index74)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $80; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $81=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($81+4)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82=HEAP32[(($treemap)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and75=$82 & $neg; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap)>>2)]=$and75; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_end76
      __label__ = 40; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_else77
      var $83=$XP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $84=$83; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $85=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr78=(($85+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $86=HEAPU32[(($least_addr78)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp79=(($84)>>>0) >= (($86)>>>0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv80=(($cmp79)&1); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval81=(($conv80)==(1)); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool82=(($expval81)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool82) { __label__ = 34; break; } else { __label__ = 38; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_then83
      var $87=$XP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child84=(($87+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx85=(($child84)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($arrayidx85)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $89=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp86=(($88)|0)==(($89)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp86) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_then88
      var $90=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $91=$XP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child89=(($91+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx90=(($child89)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx90)>>2)]=$90; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 37; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_else91
      var $92=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=$XP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child92=(($93+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx93=(($child92+4)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx93)>>2)]=$92; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 37; break;
    case 37: // $if_end94
      __label__ = 39; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else95
      _abort(); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_end96
      __label__ = 40; break;
    case 40: // $if_end97
      var $94=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp98=(($94)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp98) { __label__ = 41; break; } else { __label__ = 55; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then100
      var $95=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=$95; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $97=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr101=(($97+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $98=HEAPU32[(($least_addr101)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp102=(($96)>>>0) >= (($98)>>>0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv103=(($cmp102)&1); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval104=(($conv103)==(1)); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool105=(($expval104)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool105) { __label__ = 42; break; } else { __label__ = 53; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then106
      var $99=$XP; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $100=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent107=(($100+24)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent107)>>2)]=$99; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child108=(($101+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx109=(($child108)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $102=HEAP32[(($arrayidx109)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C0=$102; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp110=(($102)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp110) { __label__ = 43; break; } else { __label__ = 47; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then112
      var $103=$C0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $104=$103; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $105=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr113=(($105+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=HEAPU32[(($least_addr113)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp114=(($104)>>>0) >= (($106)>>>0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv115=(($cmp114)&1); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval116=(($conv115)==(1)); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool117=(($expval116)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool117) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_then118
      var $107=$C0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child119=(($108+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx120=(($child119)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx120)>>2)]=$107; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $109=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $110=$C0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent121=(($110+24)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent121)>>2)]=$109; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_else122
      _abort(); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_end123
      __label__ = 47; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_end124
      var $111=$tp; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child125=(($111+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx126=(($child125+4)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=HEAP32[(($arrayidx126)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C1=$112; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp127=(($112)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp127) { __label__ = 48; break; } else { __label__ = 52; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_then129
      var $113=$C1; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=$113; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $115=$m_addr; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr130=(($115+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $116=HEAPU32[(($least_addr130)>>2)]; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp131=(($114)>>>0) >= (($116)>>>0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv132=(($cmp131)&1); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval133=(($conv132)==(1)); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool134=(($expval133)|0)!=0; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool134) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_then135
      var $117=$C1; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $118=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child136=(($118+16)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx137=(($child136+4)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx137)>>2)]=$117; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $119=$R; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $120=$C1; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent138=(($120+24)|0); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent138)>>2)]=$119; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 51; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_else139
      _abort(); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_end140
      __label__ = 52; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_end141
      __label__ = 54; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_else142
      _abort(); //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end143
      __label__ = 55; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_end144
      __label__ = 56; break; //@line 4100 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_end145
      __label__ = 57; break;
    case 57: // $if_end146
      var $121=$psize; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$121 >>> 8; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $X=$shr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $122=$X; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp148=(($122)|0)==0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp148) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_then150
      $I=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_else151
      var $123=$X; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp152=(($123)>>>0) > 65535; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp152) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_then154
      $I=31; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_else155
      var $124=$X; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$124; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=$Y; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub156=(($125-256)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr157=$sub156 >>> 16; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and158=$shr157 & 8; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$and158; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$N; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $127=$Y; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl159=$127 << $126; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl159; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub160=(($shl159-4096)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr161=$sub160 >>> 16; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and162=$shr161 & 4; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and162; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=$K; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=$N; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($129+$128)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $130=$K; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $131=$Y; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl163=$131 << $130; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl163; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub164=(($shl163-16384)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr165=$sub164 >>> 16; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and166=$shr165 & 2; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and166; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $132=$N; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add167=(($132+$and166)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add167; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $133=$N; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub168=((14-$133)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $134=$K; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=$Y; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl169=$135 << $134; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl169; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr170=$shl169 >>> 15; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add171=(($sub168+$shr170)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$add171; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $136=$K; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl172=$136 << 1; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $137=$psize; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $138=$K; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add173=(($138+7)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr174=$137 >>> (($add173)>>>0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and175=$shr174 & 1; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add176=(($shl172+$and175)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$add176; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break;
    case 62: // $if_end177
      __label__ = 63; break;
    case 63: // $if_end178
      var $139=$I; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$m_addr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins179=(($140+304)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx180=(($treebins179+($139<<2))|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H147=$arrayidx180; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=$I; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $142=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index181=(($142+28)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index181)>>2)]=$141; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $143=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child182=(($143+16)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx183=(($child182+4)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx183)>>2)]=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child184=(($144+16)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx185=(($child184)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx185)>>2)]=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $145=$m_addr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap186=(($145+4)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=HEAP32[(($treemap186)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $147=$I; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl187=1 << $147; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and188=$146 & $shl187; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool189=(($and188)|0)!=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool189) { __label__ = 65; break; } else { __label__ = 64; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_then190
      var $148=$I; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl191=1 << $148; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=$m_addr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap192=(($149+4)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $150=HEAP32[(($treemap192)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$150 | $shl191; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap192)>>2)]=$or; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $152=$H147; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($152)>>2)]=$151; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $153=$H147; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$153; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent193=(($155+24)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent193)>>2)]=$154; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $156=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk194=(($157+12)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk194)>>2)]=$156; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $158=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd195=(($158+8)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd195)>>2)]=$156; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 83; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_else196
      var $159=$H147; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $160=HEAP32[(($159)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$160; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=$psize; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=$I; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp198=(($162)|0)==31; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp198) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 66: // $cond_true200
      var $cond207 = 0;__label__ = 68; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 67: // $cond_false201
      var $163=$I; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr202=$163 >>> 1; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add203=(($shr202+8)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub204=(($add203-2)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub205=((31-$sub204)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond207 = $sub205;__label__ = 68; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 68: // $cond_end206
      var $cond207; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl208=$161 << $cond207; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K197=$shl208; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 69; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 69: // $for_cond
      var $164=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head209=(($164+4)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[(($head209)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and210=$165 & -8; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $166=$psize; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp211=(($and210)|0)!=(($166)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp211) { __label__ = 70; break; } else { __label__ = 76; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 70: // $if_then213
      var $167=$K197; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr214=$167 >>> 31; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and215=$shr214 & 1; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child216=(($168+16)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx217=(($child216+($and215<<2))|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx217; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=$K197; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl218=$169 << 1; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K197=$shl218; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=$C; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[(($170)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp219=(($171)|0)!=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp219) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_then221
      var $172=$C; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=HEAP32[(($172)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$173; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 75; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_else222
      var $174=$C; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $175=$174; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=$m_addr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr223=(($176+16)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $177=HEAPU32[(($least_addr223)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp224=(($175)>>>0) >= (($177)>>>0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv225=(($cmp224)&1); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval226=(($conv225)==(1)); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool227=(($expval226)|0)!=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool227) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_then228
      var $178=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=$C; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($179)>>2)]=$178; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $180=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent229=(($181+24)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent229)>>2)]=$180; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $182=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $183=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk230=(($183+12)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk230)>>2)]=$182; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $184=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd231=(($184+8)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd231)>>2)]=$182; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 82; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_else232
      _abort(); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_end233
      __label__ = 81; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_else234
      var $185=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd236=(($185+8)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $186=HEAP32[(($fd236)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F235=$186; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $187=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $188=$187; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $189=$m_addr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr237=(($189+16)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $190=HEAPU32[(($least_addr237)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp238=(($188)>>>0) >= (($190)>>>0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp238) { __label__ = 77; break; } else { var $195 = 0;__label__ = 78; break; } //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 77: // $land_rhs
      var $191=$F235; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $192=$191; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $193=$m_addr; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr240=(($193+16)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $194=HEAPU32[(($least_addr240)>>2)]; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp241=(($192)>>>0) >= (($194)>>>0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $195 = $cmp241;__label__ = 78; break;
    case 78: // $land_end
      var $195;
      var $land_ext=(($195)&1);
      var $expval243=(($land_ext)==(1));
      var $tobool244=(($expval243)|0)!=0;
      if ($tobool244) { __label__ = 79; break; } else { __label__ = 80; break; }
    case 79: // $if_then245
      var $196=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $197=$F235; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk246=(($197+12)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk246)>>2)]=$196; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $198=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd247=(($198+8)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd247)>>2)]=$196; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $199=$F235; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $200=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd248=(($200+8)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd248)>>2)]=$199; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $201=$T; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $202=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk249=(($202+12)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk249)>>2)]=$201; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $203=$tp; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent250=(($203+24)|0); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent250)>>2)]=0; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 82; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_else251
      _abort(); //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_end252
      __label__ = 69; break; //@line 4110 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 82: // $for_end
      __label__ = 83; break;
    case 83: // $if_end253
      __label__ = 84; break; //@line 4112 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_end254
      __label__ = 85; break; //@line 4113 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 85: // $if_end255
      var $204=$sp; //@line 4116 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $pred=$204; //@line 4116 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $205=$next3; //@line 4117 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$205; //@line 4117 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 4118 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 86: // $while_end256
      var $206=$nsegs; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp257=(($206)>>>0) > 4294967295; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp257) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 87: // $cond_true259
      var $207=$nsegs; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond262 = $207;__label__ = 89; break; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 88: // $cond_false260
      var $cond262 = -1;__label__ = 89; break; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 89: // $cond_end261
      var $cond262; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $208=$m_addr; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $release_checks=(($208+32)|0); //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($release_checks)>>2)]=$cond262; //@line 4120 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $209=$released; //@line 4122 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $209; //@line 4122 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_release_unused_segments["X"]=1;

function _init_mparams() {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $magic;
      var $psize;
      var $gsize;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 2965 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)==0; //@line 2965 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 2965 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $call=_sysconf(8); //@line 2971 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$call; //@line 2971 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=$psize; //@line 2972 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $gsize=$1; //@line 2972 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$gsize; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=$gsize; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(($3-1)|0); //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$2 & $sub; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($and)|0)!=0; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_lhs_false
      var $4=$psize; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$psize; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub2=(($5-1)|0); //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and3=$4 & $sub2; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($and3)|0)!=0; //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2989 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then5
      _abort(); //@line 2997 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 2997 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end
      var $6=$gsize; //@line 2999 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+8)|0))>>2)]=$6; //@line 2999 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$psize; //@line 3000 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+4)|0))>>2)]=$7; //@line 3000 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+12)|0))>>2)]=-1; //@line 3001 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+16)|0))>>2)]=2097152; //@line 3002 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+20)|0))>>2)]=0; //@line 3004 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[((((_mparams+20)|0))>>2)]; //@line 3011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+440)|0))>>2)]=$8; //@line 3011 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call6=_time(0); //@line 3030 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $xor=$call6 ^ 1431655765; //@line 3030 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $magic=$xor; //@line 3030 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$magic; //@line 3032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$9 | 8; //@line 3032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $magic=$or; //@line 3032 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$magic; //@line 3033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and7=$10 & -8; //@line 3033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $magic=$and7; //@line 3033 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$magic; //@line 3034 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams)|0))>>2)]=$11; //@line 3034 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 3036 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_end8
      ;
      return 1; //@line 3039 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _init_top($m, $p, $psize) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $p_addr;
      var $psize_addr;
      var $offset;
      $m_addr=$m;
      $p_addr=$p;
      $psize_addr=$psize;
      var $0=$p_addr; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=$0; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1+8)|0); //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$2 & 7; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($and)|0)==0; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $cond_true
      var $cond = 0;__label__ = 3; break; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_false
      var $3=$p_addr; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr1=(($4+8)|0); //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$add_ptr1; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and2=$5 & 7; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and2)|0); //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and3=$sub & 7; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $and3;__label__ = 3; break; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_end
      var $cond; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $offset=$cond; //@line 3736 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$p_addr; //@line 3737 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$6; //@line 3737 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$offset; //@line 3737 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr4=(($7+$8)|0); //@line 3737 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$add_ptr4; //@line 3737 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p_addr=$9; //@line 3737 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$offset; //@line 3738 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$psize_addr; //@line 3738 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub5=(($11-$10)|0); //@line 3738 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize_addr=$sub5; //@line 3738 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$p_addr; //@line 3740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$m_addr; //@line 3740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top=(($13+24)|0); //@line 3740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top)>>2)]=$12; //@line 3740 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$psize_addr; //@line 3741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$m_addr; //@line 3741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($15+12)|0); //@line 3741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize)>>2)]=$14; //@line 3741 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$psize_addr; //@line 3742 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$16 | 1; //@line 3742 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$p_addr; //@line 3742 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($17+4)|0); //@line 3742 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or; //@line 3742 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=$p_addr; //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$18; //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$psize_addr; //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr6=(($19+$20)|0); //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$add_ptr6; //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head7=(($21+4)|0); //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head7)>>2)]=40; //@line 3744 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=HEAP32[((((_mparams+16)|0))>>2)]; //@line 3745 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$m_addr; //@line 3745 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $trim_check=(($23+28)|0); //@line 3745 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($trim_check)>>2)]=$22; //@line 3745 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return; //@line 3746 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_init_top["X"]=1;

function _mmap_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $nb_addr;
      var $mmsize;
      var $mm;
      var $offset;
      var $psize;
      var $p;
      $m_addr=$m;
      $nb_addr=$nb;
      var $0=$nb_addr; //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($0+24)|0); //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add1=(($add+7)|0); //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=(($1-1)|0); //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add2=(($add1+$sub)|0); //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub3=(($2-1)|0); //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$sub3 ^ -1; //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$add2 & $neg; //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $mmsize=$and; //@line 3672 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=$mmsize; //@line 3673 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$nb_addr; //@line 3673 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($3)>>>0) > (($4)>>>0); //@line 3673 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 3673 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      $mm=-1; //@line 3674 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$mm; //@line 3675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($5)|0)!=-1; //@line 3675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 2; break; } else { __label__ = 11; break; } //@line 3675 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_then5
      var $6=$mm; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($6+8)|0); //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$add_ptr; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and6=$7 & 7; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($and6)|0)==0; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp7) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_true
      var $cond = 0;__label__ = 5; break; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_false
      var $8=$mm; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr8=(($8+8)|0); //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$add_ptr8; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and9=$9 & 7; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub10=((8-$and9)|0); //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and11=$sub10 & 7; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $and11;__label__ = 5; break; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_end
      var $cond; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $offset=$cond; //@line 3676 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$mmsize; //@line 3677 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$offset; //@line 3677 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub12=(($10-$11)|0); //@line 3677 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub13=(($sub12-16)|0); //@line 3677 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$sub13; //@line 3677 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$mm; //@line 3678 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$offset; //@line 3678 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr14=(($12+$13)|0); //@line 3678 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr14; //@line 3678 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$14; //@line 3678 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$offset; //@line 3679 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$p; //@line 3679 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($16)|0); //@line 3679 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$15; //@line 3679 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$psize; //@line 3680 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=$p; //@line 3680 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($18+4)|0); //@line 3680 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$17; //@line 3680 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$p; //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$19; //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$psize; //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr15=(($20+$21)|0); //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=$add_ptr15; //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head16=(($22+4)|0); //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head16)>>2)]=7; //@line 3682 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$p; //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$psize; //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add17=(($25+4)|0); //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr18=(($24+$add17)|0); //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$add_ptr18; //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head19=(($26+4)|0); //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head19)>>2)]=0; //@line 3683 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$m_addr; //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($27+16)|0); //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=HEAP32[(($least_addr)>>2)]; //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp20=(($28)|0)==0; //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp20) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $lor_lhs_false
      var $29=$mm; //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=$m_addr; //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr21=(($30+16)|0); //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=HEAPU32[(($least_addr21)>>2)]; //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($29)>>>0) < (($31)>>>0); //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 3685 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then23
      var $32=$mm; //@line 3686 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=$m_addr; //@line 3686 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr24=(($33+16)|0); //@line 3686 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr24)>>2)]=$32; //@line 3686 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 3686 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end
      var $34=$mmsize; //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $35=$m_addr; //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($35+432)|0); //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($footprint)>>2)]; //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add25=(($36+$34)|0); //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$add25; //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $37=$m_addr; //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($37+436)|0); //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $38=HEAPU32[(($max_footprint)>>2)]; //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($add25)>>>0) > (($38)>>>0); //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3687 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then27
      var $39=$m_addr; //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $footprint28=(($39+432)|0); //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($footprint28)>>2)]; //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $max_footprint29=(($41+436)|0); //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($max_footprint29)>>2)]=$40; //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3688 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end30
      var $42=$p; //@line 3691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr31=(($43+8)|0); //@line 3691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr31; //@line 3691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3691 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_end32
      __label__ = 12; break; //@line 3693 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_end33
      $retval=0; //@line 3694 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3694 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $return
      var $44=$retval; //@line 3695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $44; //@line 3695 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_mmap_alloc["X"]=1;

function _init_bins($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $i;
      var $bin;
      $m_addr=$m;
      $i=0; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $for_cond
      var $0=$i; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)>>>0) < 32; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $for_body
      var $1=$i; //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=$1 << 1; //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($2+40)|0); //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($smallbins+($shl<<2))|0); //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=$arrayidx; //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $bin=$4; //@line 3753 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$bin; //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$bin; //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($6+12)|0); //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk)>>2)]=$5; //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$bin; //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($7+8)|0); //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd)>>2)]=$5; //@line 3754 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 3755 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $for_inc
      var $8=$i; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $inc=(($8+1)|0); //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $i=$inc; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 3752 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $for_end
      ;
      return; //@line 3756 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _prepend_alloc($m, $newbase, $oldbase, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $newbase_addr;
      var $oldbase_addr;
      var $nb_addr;
      var $p;
      var $oldfirst;
      var $psize;
      var $q;
      var $qsize;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F63;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I203;
      var $B205;
      var $F209;
      var $TP235;
      var $H236;
      var $I237;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K290;
      var $C;
      var $F328;
      $m_addr=$m;
      $newbase_addr=$newbase;
      $oldbase_addr=$oldbase;
      $nb_addr=$nb;
      var $0=$newbase_addr; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=$newbase_addr; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1+8)|0); //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$2 & 7; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($and)|0)==0; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $cond_true
      var $cond = 0;__label__ = 3; break; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_false
      var $3=$newbase_addr; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr1=(($3+8)|0); //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$add_ptr1; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and2=$4 & 7; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and2)|0); //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and3=$sub & 7; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $and3;__label__ = 3; break; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_end
      var $cond; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr4=(($0+$cond)|0); //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$add_ptr4; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$5; //@line 3780 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=$oldbase_addr; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$oldbase_addr; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr5=(($7+8)|0); //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=$add_ptr5; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and6=$8 & 7; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($and6)|0)==0; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp7) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_true8
      var $cond15 = 0;__label__ = 6; break; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_false9
      var $9=$oldbase_addr; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr10=(($9+8)|0); //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$add_ptr10; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and11=$10 & 7; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub12=((8-$and11)|0); //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and13=$sub12 & 7; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond15 = $and13;__label__ = 6; break; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_end14
      var $cond15; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr16=(($6+$cond15)|0); //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$add_ptr16; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$11; //@line 3781 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$oldfirst; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $13=$12; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$p; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$14; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$13; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$15; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$sub_ptr_sub; //@line 3782 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$p; //@line 3783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$16; //@line 3783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=$nb_addr; //@line 3783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr17=(($17+$18)|0); //@line 3783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $19=$add_ptr17; //@line 3783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $q=$19; //@line 3783 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $20=$psize; //@line 3784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$nb_addr; //@line 3784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub18=(($20-$21)|0); //@line 3784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $qsize=$sub18; //@line 3784 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=$nb_addr; //@line 3785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$22 | 1; //@line 3785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or19=$or | 2; //@line 3785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$p; //@line 3785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($23+4)|0); //@line 3785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or19; //@line 3785 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=$oldfirst; //@line 3792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$m_addr; //@line 3792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top=(($25+24)|0); //@line 3792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($top)>>2)]; //@line 3792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp20=(($24)|0)==(($26)|0); //@line 3792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp20) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 3792 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then
      var $27=$qsize; //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$m_addr; //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($28+12)|0); //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=HEAP32[(($topsize)>>2)]; //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($29+$27)|0); //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize)>>2)]=$add; //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tsize=$add; //@line 3793 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=$q; //@line 3794 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=$m_addr; //@line 3794 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top21=(($31+24)|0); //@line 3794 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top21)>>2)]=$30; //@line 3794 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$tsize; //@line 3795 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or22=$32 | 1; //@line 3795 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=$q; //@line 3795 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head23=(($33+4)|0); //@line 3795 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head23)>>2)]=$or22; //@line 3795 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 108; break; //@line 3797 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_else
      var $34=$oldfirst; //@line 3798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $35=$m_addr; //@line 3798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dv=(($35+20)|0); //@line 3798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($dv)>>2)]; //@line 3798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($34)|0)==(($36)|0); //@line 3798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3798 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then25
      var $37=$qsize; //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $38=$m_addr; //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($38+8)|0); //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($dvsize)>>2)]; //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add26=(($39+$37)|0); //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dvsize)>>2)]=$add26; //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $dsize=$add26; //@line 3799 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=$q; //@line 3800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $dv27=(($41+20)|0); //@line 3800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dv27)>>2)]=$40; //@line 3800 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=$dsize; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or28=$42 | 1; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=$q; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head29=(($43+4)|0); //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head29)>>2)]=$or28; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=$dsize; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=$q; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $46=$45; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$dsize; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr30=(($46+$47)|0); //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$add_ptr30; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($48)|0); //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$44; //@line 3801 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 107; break; //@line 3802 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_else31
      var $49=$oldfirst; //@line 3804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head32=(($49+4)|0); //@line 3804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $50=HEAP32[(($head32)>>2)]; //@line 3804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and33=$50 & 3; //@line 3804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp34=(($and33)|0)!=1; //@line 3804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp34) { __label__ = 71; break; } else { __label__ = 11; break; } //@line 3804 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then35
      var $51=$oldfirst; //@line 3805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head36=(($51+4)|0); //@line 3805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=HEAP32[(($head36)>>2)]; //@line 3805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and37=$52 & -8; //@line 3805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nsize=$and37; //@line 3805 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$nsize; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$53 >>> 3; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp38=(($shr)>>>0) < 32; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp38) { __label__ = 12; break; } else { __label__ = 24; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then39
      var $54=$oldfirst; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($54+8)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=HEAP32[(($fd)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$55; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $56=$oldfirst; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($56+12)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $57=HEAP32[(($bk)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B=$57; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $58=$nsize; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr40=$58 >>> 3; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$shr40; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=$F; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $60=$B; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp41=(($59)|0)==(($60)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp41) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then42
      var $61=$I; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $61; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($62)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $63=HEAP32[(($smallmap)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and43=$63 & $neg; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap)>>2)]=$and43; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_else44
      var $64=$F; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $65=$I; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl45=$65 << 1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($66+40)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($smallbins+($shl45<<2))|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$arrayidx; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=$67; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp46=(($64)|0)==(($68)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp46) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $lor_lhs_false
      var $69=$F; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=$69; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $71=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($71+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=HEAPU32[(($least_addr)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp47=(($70)>>>0) >= (($72)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp47) { __label__ = 16; break; } else { var $83 = 0;__label__ = 19; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $land_rhs
      var $73=$B; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=$I; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl48=$74 << 1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins49=(($75+40)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx50=(($smallbins49+($shl48<<2))|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=$arrayidx50; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $77=$76; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp51=(($73)|0)==(($77)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp51) { var $82 = 1;__label__ = 18; break; } else { __label__ = 17; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $lor_rhs
      var $78=$B; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $79=$78; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $80=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr52=(($80+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $81=HEAPU32[(($least_addr52)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp53=(($79)>>>0) >= (($81)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82 = $cmp53;__label__ = 18; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $lor_end
      var $82;
      var $83 = $82;__label__ = 19; break;
    case 19: // $land_end
      var $83;
      var $land_ext=(($83)&1);
      var $expval=(($land_ext)==(1));
      var $tobool=(($expval)|0)!=0;
      if ($tobool) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: // $if_then54
      var $84=$B; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $85=$F; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk55=(($85+12)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk55)>>2)]=$84; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $86=$F; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $87=$B; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd56=(($87+8)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd56)>>2)]=$86; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 22; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_else57
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_end
      __label__ = 23; break;
    case 23: // $if_end58
      __label__ = 70; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_else59
      var $88=$oldfirst; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $89=$88; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $TP=$89; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $90=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent=(($90+24)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $91=HEAP32[(($parent)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $XP=$91; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $92=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk60=(($92+12)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($bk60)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $94=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp61=(($93)|0)!=(($94)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp61) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_then62
      var $95=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd64=(($95+8)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($fd64)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F63=$96; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $97=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk65=(($97+12)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $98=HEAP32[(($bk65)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$98; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $99=$F63; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $100=$99; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr66=(($101+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $102=HEAPU32[(($least_addr66)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp67=(($100)>>>0) >= (($102)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp67)&1); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval68=(($conv)==(1)); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool69=(($expval68)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool69) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_then70
      var $103=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $104=$F63; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk71=(($104+12)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk71)>>2)]=$103; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $105=$F63; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd72=(($106+8)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd72)>>2)]=$105; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_else73
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_end74
      __label__ = 41; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_else75
      var $107=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child=(($107+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx76=(($child+4)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx76; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($arrayidx76)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$108; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp77=(($108)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp77) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $lor_lhs_false79
      var $109=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child80=(($109+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx81=(($child80)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx81; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $110=HEAP32[(($arrayidx81)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$110; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp82=(($110)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp82) { __label__ = 31; break; } else { __label__ = 40; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then84
      __label__ = 32; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $while_cond
      var $111=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child85=(($111+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx86=(($child85+4)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx86; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=HEAP32[(($arrayidx86)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp87=(($112)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp87) { var $115 = 1;__label__ = 34; break; } else { __label__ = 33; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 33: // $lor_rhs89
      var $113=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child90=(($113+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx91=(($child90)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx91; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($arrayidx91)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp92=(($114)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $115 = $cmp92;__label__ = 34; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $lor_end94
      var $115;
      if ($115) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $while_body
      var $116=$CP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $RP=$116; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $117=HEAP32[(($116)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $R=$117; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $while_end
      var $118=$RP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $119=$118; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $120=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr95=(($120+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=HEAPU32[(($least_addr95)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp96=(($119)>>>0) >= (($121)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv97=(($cmp96)&1); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval98=(($conv97)==(1)); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool99=(($expval98)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool99) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then100
      var $122=$RP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($122)>>2)]=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else101
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_end102
      __label__ = 40; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_end103
      __label__ = 41; break;
    case 41: // $if_end104
      var $123=$XP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp105=(($123)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp105) { __label__ = 42; break; } else { __label__ = 69; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then107
      var $124=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index=(($124+28)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $125=HEAP32[(($index)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($126+304)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx108=(($treebins+($125<<2))|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx108; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $127=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=$H; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=HEAP32[(($128)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp109=(($127)|0)==(($129)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp109) { __label__ = 43; break; } else { __label__ = 46; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then111
      var $130=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $131=$H; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($131)>>2)]=$130; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp112=(($130)|0)==0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp112) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_then114
      var $132=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index115=(($132+28)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($index115)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl116=1 << $133; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $neg117=$shl116 ^ -1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $134=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($134+4)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($treemap)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and118=$135 & $neg117; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap)>>2)]=$and118; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_end119
      __label__ = 53; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_else120
      var $136=$XP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $137=$136; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $138=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr121=(($138+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $139=HEAPU32[(($least_addr121)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp122=(($137)>>>0) >= (($139)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv123=(($cmp122)&1); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval124=(($conv123)==(1)); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool125=(($expval124)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool125) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_then126
      var $140=$XP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child127=(($140+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx128=(($child127)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($arrayidx128)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $142=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp129=(($141)|0)==(($142)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp129) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_then131
      var $143=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144=$XP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child132=(($144+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx133=(($child132)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx133)>>2)]=$143; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_else134
      var $145=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=$XP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child135=(($146+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx136=(($child135+4)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx136)>>2)]=$145; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break;
    case 50: // $if_end137
      __label__ = 52; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_else138
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_end139
      __label__ = 53; break;
    case 53: // $if_end140
      var $147=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp141=(($147)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp141) { __label__ = 54; break; } else { __label__ = 68; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_then143
      var $148=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $149=$148; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $150=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr144=(($150+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=HEAPU32[(($least_addr144)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp145=(($149)>>>0) >= (($151)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv146=(($cmp145)&1); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval147=(($conv146)==(1)); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool148=(($expval147)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool148) { __label__ = 55; break; } else { __label__ = 66; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_then149
      var $152=$XP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $153=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent150=(($153+24)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent150)>>2)]=$152; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child151=(($154+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx152=(($child151)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=HEAP32[(($arrayidx152)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C0=$155; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp153=(($155)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp153) { __label__ = 56; break; } else { __label__ = 60; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_then155
      var $156=$C0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $158=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr156=(($158+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $159=HEAPU32[(($least_addr156)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp157=(($157)>>>0) >= (($159)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv158=(($cmp157)&1); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval159=(($conv158)==(1)); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool160=(($expval159)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool160) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_then161
      var $160=$C0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child162=(($161+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx163=(($child162)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx163)>>2)]=$160; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $163=$C0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent164=(($163+24)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent164)>>2)]=$162; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 59; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_else165
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_end166
      __label__ = 60; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_end167
      var $164=$TP; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child168=(($164+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx169=(($child168+4)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[(($arrayidx169)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C1=$165; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp170=(($165)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp170) { __label__ = 61; break; } else { __label__ = 65; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_then172
      var $166=$C1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $167=$166; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=$m_addr; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr173=(($168+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=HEAPU32[(($least_addr173)>>2)]; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp174=(($167)>>>0) >= (($169)>>>0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv175=(($cmp174)&1); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval176=(($conv175)==(1)); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool177=(($expval176)|0)!=0; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool177) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_then178
      var $170=$C1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $171=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child179=(($171+16)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx180=(($child179+4)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx180)>>2)]=$170; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $172=$R; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=$C1; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent181=(($173+24)|0); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent181)>>2)]=$172; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_else182
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_end183
      __label__ = 65; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_end184
      __label__ = 67; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 66: // $if_else185
      _abort(); //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end186
      __label__ = 68; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 68: // $if_end187
      __label__ = 69; break; //@line 3806 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 69: // $if_end188
      __label__ = 70; break;
    case 70: // $if_end189
      var $174=$oldfirst; //@line 3807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $175=$174; //@line 3807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=$nsize; //@line 3807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr190=(($175+$176)|0); //@line 3807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $177=$add_ptr190; //@line 3807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$177; //@line 3807 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $178=$nsize; //@line 3808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=$qsize; //@line 3808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add191=(($179+$178)|0); //@line 3808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $qsize=$add191; //@line 3808 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 71; break; //@line 3809 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_end192
      var $180=$oldfirst; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head193=(($180+4)|0); //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181=HEAP32[(($head193)>>2)]; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and194=$181 & -2; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head193)>>2)]=$and194; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $182=$qsize; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or195=$182 | 1; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $183=$q; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head196=(($183+4)|0); //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head196)>>2)]=$or195; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $184=$qsize; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $185=$q; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $186=$185; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $187=$qsize; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr197=(($186+$187)|0); //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $188=$add_ptr197; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot198=(($188)|0); //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot198)>>2)]=$184; //@line 3810 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $189=$qsize; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr199=$189 >>> 3; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp200=(($shr199)>>>0) < 32; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp200) { __label__ = 72; break; } else { __label__ = 79; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_then202
      var $190=$qsize; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr204=$190 >>> 3; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I203=$shr204; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $191=$I203; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl206=$191 << 1; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $192=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins207=(($192+40)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx208=(($smallbins207+($shl206<<2))|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $193=$arrayidx208; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $194=$193; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B205=$194; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $195=$B205; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F209=$195; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $196=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap210=(($196)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $197=HEAP32[(($smallmap210)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $198=$I203; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl211=1 << $198; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and212=$197 & $shl211; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool213=(($and212)|0)!=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool213) { __label__ = 74; break; } else { __label__ = 73; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_then214
      var $199=$I203; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl215=1 << $199; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $200=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap216=(($200)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $201=HEAP32[(($smallmap216)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or217=$201 | $shl215; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap216)>>2)]=$or217; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 78; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_else218
      var $202=$B205; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd219=(($202+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[(($fd219)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $204=$203; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $205=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr220=(($205+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $206=HEAPU32[(($least_addr220)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp221=(($204)>>>0) >= (($206)>>>0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv222=(($cmp221)&1); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval223=(($conv222)==(1)); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool224=(($expval223)|0)!=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool224) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_then225
      var $207=$B205; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd226=(($207+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $208=HEAP32[(($fd226)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F209=$208; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 77; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_else227
      _abort(); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 77: // $if_end228
      __label__ = 78; break;
    case 78: // $if_end229
      var $209=$q; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $210=$B205; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd230=(($210+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd230)>>2)]=$209; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $211=$q; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $212=$F209; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk231=(($212+12)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk231)>>2)]=$211; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $213=$F209; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $214=$q; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd232=(($214+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd232)>>2)]=$213; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $215=$B205; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $216=$q; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk233=(($216+12)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk233)>>2)]=$215; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 79: // $if_else234
      var $217=$q; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $218=$217; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $TP235=$218; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $219=$qsize; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr238=$219 >>> 8; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $X=$shr238; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $220=$X; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp239=(($220)|0)==0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp239) { __label__ = 80; break; } else { __label__ = 81; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_then241
      $I237=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_else242
      var $221=$X; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp243=(($221)>>>0) > 65535; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp243) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 82: // $if_then245
      $I237=31; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_else246
      var $222=$X; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$222; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $223=$Y; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub247=(($223-256)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr248=$sub247 >>> 16; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and249=$shr248 & 8; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$and249; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $224=$N; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $225=$Y; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl250=$225 << $224; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl250; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub251=(($shl250-4096)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr252=$sub251 >>> 16; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and253=$shr252 & 4; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and253; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $226=$K; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $227=$N; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add254=(($227+$226)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add254; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $228=$K; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $229=$Y; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl255=$229 << $228; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl255; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub256=(($shl255-16384)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr257=$sub256 >>> 16; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and258=$shr257 & 2; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and258; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $230=$N; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add259=(($230+$and258)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add259; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $231=$N; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub260=((14-$231)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $232=$K; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $233=$Y; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl261=$233 << $232; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl261; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr262=$shl261 >>> 15; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add263=(($sub260+$shr262)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$add263; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $234=$K; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl264=$234 << 1; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $235=$qsize; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $236=$K; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add265=(($236+7)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr266=$235 >>> (($add265)>>>0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and267=$shr266 & 1; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add268=(($shl264+$and267)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I237=$add268; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break;
    case 84: // $if_end269
      __label__ = 85; break;
    case 85: // $if_end270
      var $237=$I237; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $238=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins271=(($238+304)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx272=(($treebins271+($237<<2))|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H236=$arrayidx272; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $239=$I237; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $240=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index273=(($240+28)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index273)>>2)]=$239; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $241=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child274=(($241+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx275=(($child274+4)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx275)>>2)]=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $242=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child276=(($242+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx277=(($child276)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx277)>>2)]=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $243=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap278=(($243+4)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $244=HEAP32[(($treemap278)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $245=$I237; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl279=1 << $245; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and280=$244 & $shl279; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool281=(($and280)|0)!=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool281) { __label__ = 87; break; } else { __label__ = 86; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 86: // $if_then282
      var $246=$I237; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl283=1 << $246; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $247=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap284=(($247+4)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $248=HEAP32[(($treemap284)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or285=$248 | $shl283; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap284)>>2)]=$or285; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $249=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $250=$H236; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($250)>>2)]=$249; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $251=$H236; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $252=$251; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $253=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent286=(($253+24)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent286)>>2)]=$252; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $254=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $255=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk287=(($255+12)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk287)>>2)]=$254; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $256=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd288=(($256+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd288)>>2)]=$254; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 105; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 87: // $if_else289
      var $257=$H236; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $258=HEAP32[(($257)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$258; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $259=$qsize; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $260=$I237; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp291=(($260)|0)==31; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp291) { __label__ = 88; break; } else { __label__ = 89; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 88: // $cond_true293
      var $cond300 = 0;__label__ = 90; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 89: // $cond_false294
      var $261=$I237; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr295=$261 >>> 1; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add296=(($shr295+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub297=(($add296-2)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub298=((31-$sub297)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond300 = $sub298;__label__ = 90; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 90: // $cond_end299
      var $cond300; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl301=$259 << $cond300; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K290=$shl301; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 91: // $for_cond
      var $262=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head302=(($262+4)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $263=HEAP32[(($head302)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and303=$263 & -8; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $264=$qsize; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp304=(($and303)|0)!=(($264)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp304) { __label__ = 92; break; } else { __label__ = 98; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 92: // $if_then306
      var $265=$K290; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr307=$265 >>> 31; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and308=$shr307 & 1; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $266=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child309=(($266+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx310=(($child309+($and308<<2))|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx310; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $267=$K290; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl311=$267 << 1; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K290=$shl311; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $268=$C; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $269=HEAP32[(($268)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp312=(($269)|0)!=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp312) { __label__ = 93; break; } else { __label__ = 94; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 93: // $if_then314
      var $270=$C; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $271=HEAP32[(($270)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$271; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 97; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 94: // $if_else315
      var $272=$C; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $273=$272; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $274=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr316=(($274+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $275=HEAPU32[(($least_addr316)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp317=(($273)>>>0) >= (($275)>>>0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv318=(($cmp317)&1); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval319=(($conv318)==(1)); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool320=(($expval319)|0)!=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool320) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 95: // $if_then321
      var $276=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $277=$C; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($277)>>2)]=$276; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $278=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $279=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent322=(($279+24)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent322)>>2)]=$278; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $280=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $281=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk323=(($281+12)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk323)>>2)]=$280; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $282=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd324=(($282+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd324)>>2)]=$280; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 104; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 96: // $if_else325
      _abort(); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 97: // $if_end326
      __label__ = 103; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 98: // $if_else327
      var $283=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd329=(($283+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $284=HEAP32[(($fd329)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F328=$284; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $285=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $286=$285; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $287=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr330=(($287+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $288=HEAPU32[(($least_addr330)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp331=(($286)>>>0) >= (($288)>>>0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp331) { __label__ = 99; break; } else { var $293 = 0;__label__ = 100; break; } //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 99: // $land_rhs333
      var $289=$F328; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $290=$289; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $291=$m_addr; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr334=(($291+16)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $292=HEAPU32[(($least_addr334)>>2)]; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp335=(($290)>>>0) >= (($292)>>>0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $293 = $cmp335;__label__ = 100; break;
    case 100: // $land_end337
      var $293;
      var $land_ext338=(($293)&1);
      var $expval339=(($land_ext338)==(1));
      var $tobool340=(($expval339)|0)!=0;
      if ($tobool340) { __label__ = 101; break; } else { __label__ = 102; break; }
    case 101: // $if_then341
      var $294=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $295=$F328; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk342=(($295+12)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk342)>>2)]=$294; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $296=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd343=(($296+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd343)>>2)]=$294; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $297=$F328; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $298=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd344=(($298+8)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd344)>>2)]=$297; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $299=$T; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $300=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk345=(($300+12)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk345)>>2)]=$299; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $301=$TP235; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent346=(($301+24)|0); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent346)>>2)]=0; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 104; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 102: // $if_else347
      _abort(); //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 103: // $if_end348
      __label__ = 91; break; //@line 3811 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 104: // $for_end
      __label__ = 105; break;
    case 105: // $if_end349
      __label__ = 106; break;
    case 106: // $if_end350
      __label__ = 107; break;
    case 107: // $if_end351
      __label__ = 108; break;
    case 108: // $if_end352
      var $302=$p; //@line 3816 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $303=$302; //@line 3816 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr353=(($303+8)|0); //@line 3816 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      ;
      return $add_ptr353; //@line 3816 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prepend_alloc["X"]=1;

function _add_segment($m, $tbase, $tsize, $mmapped) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $tbase_addr;
      var $tsize_addr;
      var $mmapped_addr;
      var $old_top;
      var $oldsp;
      var $old_end;
      var $ssize;
      var $rawsp;
      var $offset;
      var $asp;
      var $csp;
      var $sp;
      var $ss;
      var $tnext;
      var $p;
      var $nfences;
      var $nextp;
      var $q;
      var $psize;
      var $tn;
      var $I;
      var $B;
      var $F;
      var $TP;
      var $H;
      var $I57;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K105;
      var $C;
      var $F144;
      $m_addr=$m;
      $tbase_addr=$tbase;
      $tsize_addr=$tsize;
      $mmapped_addr=$mmapped;
      var $0=$m_addr; //@line 3822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $top=(($0+24)|0); //@line 3822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[(($top)>>2)]; //@line 3822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $2=$1; //@line 3822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $old_top=$2; //@line 3822 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $3=$m_addr; //@line 3823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $4=$old_top; //@line 3823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $call=_segment_holding($3, $4); //@line 3823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $oldsp=$call; //@line 3823 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $5=$oldsp; //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base=(($5)|0); //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($base)>>2)]; //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $7=$oldsp; //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size=(($7+4)|0); //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($size)>>2)]; //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($6+$8)|0); //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $old_end=$add_ptr; //@line 3824 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $ssize=24; //@line 3825 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $9=$old_end; //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $10=$ssize; //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add=(($10+16)|0); //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add1=(($add+7)|0); //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $idx_neg=(((-$add1))|0); //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr2=(($9+$idx_neg)|0); //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $rawsp=$add_ptr2; //@line 3826 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $11=$rawsp; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr3=(($11+8)|0); //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $12=$add_ptr3; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and=$12 & 7; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($and)|0)==0; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 1: // $cond_true
      var $cond = 0;__label__ = 3; break; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_false
      var $13=$rawsp; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr4=(($13+8)|0); //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr4; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and5=$14 & 7; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and5)|0); //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and6=$sub & 7; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond = $and6;__label__ = 3; break; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_end
      var $cond; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $offset=$cond; //@line 3827 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $15=$rawsp; //@line 3828 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $16=$offset; //@line 3828 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr7=(($15+$16)|0); //@line 3828 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $asp=$add_ptr7; //@line 3828 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $17=$asp; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $18=$old_top; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr8=(($18+16)|0); //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp9=(($17)>>>0) < (($add_ptr8)>>>0); //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp9) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_true10
      var $19=$old_top; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond13 = $19;__label__ = 6; break; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_false11
      var $20=$asp; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond13 = $20;__label__ = 6; break; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_end12
      var $cond13; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $csp=$cond13; //@line 3829 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $21=$csp; //@line 3830 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $22=$21; //@line 3830 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $sp=$22; //@line 3830 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $23=$sp; //@line 3831 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 3831 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr14=(($24+8)|0); //@line 3831 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $25=$add_ptr14; //@line 3831 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $ss=$25; //@line 3831 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $26=$sp; //@line 3832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $27=$26; //@line 3832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $28=$ssize; //@line 3832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr15=(($27+$28)|0); //@line 3832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $29=$add_ptr15; //@line 3832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tnext=$29; //@line 3832 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $30=$tnext; //@line 3833 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$30; //@line 3833 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nfences=0; //@line 3834 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $31=$m_addr; //@line 3837 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $32=$tbase_addr; //@line 3837 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 3837 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $34=$tsize_addr; //@line 3837 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub16=(($34-40)|0); //@line 3837 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      _init_top($31, $33, $sub16); //@line 3837 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $35=$ssize; //@line 3841 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or=$35 | 1; //@line 3841 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or17=$or | 2; //@line 3841 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $36=$sp; //@line 3841 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head=(($36+4)|0); //@line 3841 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or17; //@line 3841 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $37=$ss; //@line 3842 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $38=$m_addr; //@line 3842 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg=(($38+444)|0); //@line 3842 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $39=$37; //@line 3842 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $40=$seg; //@line 3842 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      assert(16 % 1 === 0, 'memcpy given ' + 16 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP32[(($39)>>2)]=HEAP32[(($40)>>2)];HEAP32[(($39+4)>>2)]=HEAP32[(($40+4)>>2)];HEAP32[(($39+8)>>2)]=HEAP32[(($40+8)>>2)];HEAP32[(($39+12)>>2)]=HEAP32[(($40+12)>>2)]; //@line 3842 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $41=$tbase_addr; //@line 3843 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $42=$m_addr; //@line 3843 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg18=(($42+444)|0); //@line 3843 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $base19=(($seg18)|0); //@line 3843 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($base19)>>2)]=$41; //@line 3843 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $43=$tsize_addr; //@line 3844 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $44=$m_addr; //@line 3844 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg20=(($44+444)|0); //@line 3844 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $size21=(($seg20+4)|0); //@line 3844 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size21)>>2)]=$43; //@line 3844 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $45=$mmapped_addr; //@line 3845 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $46=$m_addr; //@line 3845 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg22=(($46+444)|0); //@line 3845 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($seg22+12)|0); //@line 3845 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($sflags)>>2)]=$45; //@line 3845 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $47=$ss; //@line 3846 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 3846 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $seg23=(($48+444)|0); //@line 3846 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $next=(($seg23+8)|0); //@line 3846 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($next)>>2)]=$47; //@line 3846 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 3849 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 7: // $for_cond
      var $49=$p; //@line 3850 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $50=$49; //@line 3850 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr24=(($50+4)|0); //@line 3850 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $51=$add_ptr24; //@line 3850 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nextp=$51; //@line 3850 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $52=$p; //@line 3851 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head25=(($52+4)|0); //@line 3851 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head25)>>2)]=7; //@line 3851 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $53=$nfences; //@line 3852 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $inc=(($53+1)|0); //@line 3852 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $nfences=$inc; //@line 3852 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $54=$nextp; //@line 3853 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head26=(($54+4)|0); //@line 3853 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $55=$head26; //@line 3853 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $56=$old_end; //@line 3853 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp27=(($55)>>>0) < (($56)>>>0); //@line 3853 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp27) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3853 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_then
      var $57=$nextp; //@line 3854 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $p=$57; //@line 3854 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3854 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_else
      __label__ = 11; break; //@line 3856 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end
      __label__ = 7; break; //@line 3857 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 11: // $for_end
      var $58=$csp; //@line 3861 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $59=$old_top; //@line 3861 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($58)|0)!=(($59)|0); //@line 3861 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 12; break; } else { __label__ = 48; break; } //@line 3861 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then29
      var $60=$old_top; //@line 3862 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $61=$60; //@line 3862 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $q=$61; //@line 3862 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $62=$csp; //@line 3863 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $63=$old_top; //@line 3863 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$62; //@line 3863 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$63; //@line 3863 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 3863 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $psize=$sub_ptr_sub; //@line 3863 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $64=$q; //@line 3864 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $65=$64; //@line 3864 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $66=$psize; //@line 3864 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr30=(($65+$66)|0); //@line 3864 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $67=$add_ptr30; //@line 3864 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $tn=$67; //@line 3864 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $68=$tn; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head31=(($68+4)|0); //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $69=HEAP32[(($head31)>>2)]; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and32=$69 & -2; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head31)>>2)]=$and32; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $70=$psize; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or33=$70 | 1; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $71=$q; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head34=(($71+4)|0); //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head34)>>2)]=$or33; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $72=$psize; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $73=$q; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $74=$73; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $75=$psize; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add_ptr35=(($74+$75)|0); //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $76=$add_ptr35; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($76)|0); //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$72; //@line 3865 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $77=$psize; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr=$77 >>> 3; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp36=(($shr)>>>0) < 32; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp36) { __label__ = 13; break; } else { __label__ = 20; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then37
      var $78=$psize; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr38=$78 >>> 3; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I=$shr38; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $79=$I; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl=$79 << 1; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $80=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($80+40)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($smallbins+($shl<<2))|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $81=$arrayidx; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $82=$81; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $B=$82; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $83=$B; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$83; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $84=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($84)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $85=HEAP32[(($smallmap)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $86=$I; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl39=1 << $86; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and40=$85 & $shl39; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($and40)|0)!=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 15; break; } else { __label__ = 14; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then41
      var $87=$I; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl42=1 << $87; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $88=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $smallmap43=(($88)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $89=HEAP32[(($smallmap43)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or44=$89 | $shl42; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap43)>>2)]=$or44; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_else45
      var $90=$B; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd=(($90+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $91=HEAP32[(($fd)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $92=$91; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $93=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($93+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $94=HEAPU32[(($least_addr)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp46=(($92)>>>0) >= (($94)>>>0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp46)&1); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool47=(($expval)|0)!=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool47) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_then48
      var $95=$B; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd49=(($95+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($fd49)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F=$96; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_else50
      _abort(); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_end51
      __label__ = 19; break;
    case 19: // $if_end52
      var $97=$q; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $98=$B; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd53=(($98+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd53)>>2)]=$97; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $99=$q; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $100=$F; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk=(($100+12)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk)>>2)]=$99; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $101=$F; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $102=$q; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd54=(($102+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd54)>>2)]=$101; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $103=$B; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $104=$q; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk55=(($104+12)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk55)>>2)]=$103; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_else56
      var $105=$q; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $106=$105; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $TP=$106; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $107=$psize; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr58=$107 >>> 8; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $X=$shr58; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $108=$X; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp59=(($108)|0)==0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp59) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_then61
      $I57=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_else62
      var $109=$X; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp63=(($109)>>>0) > 65535; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp63) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then65
      $I57=31; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_else66
      var $110=$X; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$110; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $111=$Y; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub67=(($111-256)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr68=$sub67 >>> 16; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and69=$shr68 & 8; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$and69; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $112=$N; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $113=$Y; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl70=$113 << $112; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl70; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub71=(($shl70-4096)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr72=$sub71 >>> 16; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and73=$shr72 & 4; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and73; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $114=$K; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $115=$N; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add74=(($115+$114)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add74; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $116=$K; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $117=$Y; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl75=$117 << $116; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl75; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub76=(($shl75-16384)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr77=$sub76 >>> 16; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and78=$shr77 & 2; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$and78; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $118=$N; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add79=(($118+$and78)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $N=$add79; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $119=$N; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub80=((14-$119)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $120=$K; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $121=$Y; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl81=$121 << $120; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $Y=$shl81; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr82=$shl81 >>> 15; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add83=(($sub80+$shr82)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K=$add83; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $122=$K; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl84=$122 << 1; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $123=$psize; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $124=$K; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add85=(($124+7)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr86=$123 >>> (($add85)>>>0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and87=$shr86 & 1; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add88=(($shl84+$and87)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $I57=$add88; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break;
    case 25: // $if_end89
      __label__ = 26; break;
    case 26: // $if_end90
      var $125=$I57; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($126+304)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx91=(($treebins+($125<<2))|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx91; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $127=$I57; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $128=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $index=(($128+28)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index)>>2)]=$127; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $129=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child=(($129+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx92=(($child+4)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx92)>>2)]=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $130=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child93=(($130+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx94=(($child93)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx94)>>2)]=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $131=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($131+4)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $132=HEAP32[(($treemap)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $133=$I57; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl95=1 << $133; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and96=$132 & $shl95; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool97=(($and96)|0)!=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool97) { __label__ = 28; break; } else { __label__ = 27; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_then98
      var $134=$I57; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl99=1 << $134; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $135=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $treemap100=(($135+4)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $136=HEAP32[(($treemap100)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $or101=$136 | $shl99; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap100)>>2)]=$or101; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $137=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $138=$H; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($138)>>2)]=$137; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $139=$H; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $140=$139; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $141=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent=(($141+24)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent)>>2)]=$140; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $142=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $143=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk102=(($143+12)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk102)>>2)]=$142; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $144=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd103=(($144+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd103)>>2)]=$142; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_else104
      var $145=$H; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $146=HEAP32[(($145)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$146; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $147=$psize; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $148=$I57; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp106=(($148)|0)==31; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp106) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 29: // $cond_true108
      var $cond115 = 0;__label__ = 31; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 30: // $cond_false109
      var $149=$I57; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr110=$149 >>> 1; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $add111=(($shr110+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub112=(($add111-2)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $sub113=((31-$sub112)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cond115 = $sub113;__label__ = 31; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 31: // $cond_end114
      var $cond115; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl116=$147 << $cond115; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K105=$shl116; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 32: // $for_cond117
      var $150=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $head118=(($150+4)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $151=HEAP32[(($head118)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and119=$151 & -8; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $152=$psize; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp120=(($and119)|0)!=(($152)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp120) { __label__ = 33; break; } else { __label__ = 39; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_then122
      var $153=$K105; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shr123=$153 >>> 31; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $and124=$shr123 & 1; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $154=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $child125=(($154+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $arrayidx126=(($child125+($and124<<2))|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx126; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $155=$K105; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $shl127=$155 << 1; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $K105=$shl127; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $156=$C; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $157=HEAP32[(($156)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp128=(($157)|0)!=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp128) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_then130
      var $158=$C; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $159=HEAP32[(($158)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $T=$159; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_else131
      var $160=$C; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $161=$160; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $162=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr132=(($162+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $163=HEAPU32[(($least_addr132)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp133=(($161)>>>0) >= (($163)>>>0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $conv134=(($cmp133)&1); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $expval135=(($conv134)==(1)); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $tobool136=(($expval135)|0)!=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($tobool136) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_then137
      var $164=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $165=$C; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($165)>>2)]=$164; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $166=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $167=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent138=(($167+24)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent138)>>2)]=$166; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $168=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $169=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk139=(($169+12)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk139)>>2)]=$168; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $170=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd140=(($170+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd140)>>2)]=$168; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_else141
      _abort(); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_end142
      __label__ = 44; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_else143
      var $171=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd145=(($171+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[(($fd145)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      $F144=$172; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $173=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $174=$173; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $175=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr146=(($175+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $176=HEAPU32[(($least_addr146)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp147=(($174)>>>0) >= (($176)>>>0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      if ($cmp147) { __label__ = 40; break; } else { var $181 = 0;__label__ = 41; break; } //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 40: // $land_rhs
      var $177=$F144; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $178=$177; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $179=$m_addr; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $least_addr149=(($179+16)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $180=HEAPU32[(($least_addr149)>>2)]; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $cmp150=(($178)>>>0) >= (($180)>>>0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $181 = $cmp150;__label__ = 41; break;
    case 41: // $land_end
      var $181;
      var $land_ext=(($181)&1);
      var $expval152=(($land_ext)==(1));
      var $tobool153=(($expval152)|0)!=0;
      if ($tobool153) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: // $if_then154
      var $182=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $183=$F144; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk155=(($183+12)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk155)>>2)]=$182; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $184=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd156=(($184+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd156)>>2)]=$182; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $185=$F144; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $186=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $fd157=(($186+8)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd157)>>2)]=$185; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $187=$T; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $188=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $bk158=(($188+12)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk158)>>2)]=$187; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $189=$TP; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      var $parent159=(($189+24)|0); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent159)>>2)]=0; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_else160
      _abort(); //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_end161
      __label__ = 32; break; //@line 3866 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 45: // $for_end162
      __label__ = 46; break;
    case 46: // $if_end163
      __label__ = 47; break;
    case 47: // $if_end164
      __label__ = 48; break; //@line 3867 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_end165
      ;
      return; //@line 3870 "/home/The_Fly/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_add_segment["X"]=1;

  
  
  var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
  
  function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      if (!___setErrNo.ret) ___setErrNo.ret = allocate([0], 'i32', ALLOC_STATIC);
      HEAP32[((___setErrNo.ret)>>2)]=value
      return value;
    }
  
  var _stdin=0;
  
  var _stdout=0;
  
  var _stderr=0;
  
  var __impure_ptr=0;var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              return FS.analyzePath([link].concat(path).join('/'),
                                    dontResolveLastLink, linksVisited + 1);
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
          return ret;
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
  
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
  
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
  
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = [];
          for (var i = 0; i < data.length; i++) dataArray.push(data.charCodeAt(i));
          data = dataArray;
        }
        var properties = {isDevice: false, contents: data};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        var properties = {isDevice: false, url: url};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          // Browser.
          // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
          var xhr = new XMLHttpRequest();
          xhr.open('GET', obj.url, false);
  
          // Some hints to the browser that we want binary data.
          if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
          if (xhr.overrideMimeType) {
            xhr.overrideMimeType('text/plain; charset=x-user-defined');
          }
  
          xhr.send(null);
          if (xhr.status != 200 && xhr.status != 0) success = false;
          if (xhr.response !== undefined) {
            obj.contents = new Uint8Array(xhr.response || []);
          } else {
            obj.contents = intArrayFromString(xhr.responseText || '', true);
          }
        } else if (typeof read !== 'undefined') {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(read(obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureRoot();
  
        // Default handlers.
        if (!input) input = function() {
          if (!input.cache || !input.cache.length) {
            var result;
            if (typeof window != 'undefined' &&
                typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
            }
            if (!result) result = '';
            input.cache = intArrayFromString(result + '\n', true);
          }
          return input.cache.shift();
        };
        if (!output) output = function(val) {
          if (val === null || val === '\n'.charCodeAt(0)) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(String.fromCharCode(val));
          }
        };
        if (!output.printer) output.printer = print;
        if (!output.buffer) output.buffer = [];
        if (!error) error = output;
  
        // Create the temporary folder.
        FS.createFolder('/', 'tmp', true, true);
  
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
  
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        _stdin = allocate([1], 'void*', ALLOC_STATIC);
        _stdout = allocate([2], 'void*', ALLOC_STATIC);
        _stderr = allocate([3], 'void*', ALLOC_STATIC);
  
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
  
        // Newlib initialization
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        __impure_ptr = allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_STATIC) ], 'void*', ALLOC_STATIC);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr
        if (FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output('\n'.charCodeAt(0));
        if (FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output('\n'.charCodeAt(0));
      }};
  
  
  
  
  
  
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead = 0;
        while (stream.ungotten.length && nbyte > 0) {
          HEAP8[(buf++)]=stream.ungotten.pop()
          nbyte--;
          bytesRead++;
        }
        var contents = stream.object.contents;
        var size = Math.min(contents.length - offset, nbyte);
        for (var i = 0; i < size; i++) {
          HEAP8[(buf+i)]=contents[offset + i]
          bytesRead++;
        }
        return bytesRead;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead;
        if (stream.object.isDevice) {
          if (stream.object.input) {
            bytesRead = 0;
            while (stream.ungotten.length && nbyte > 0) {
              HEAP8[(buf++)]=stream.ungotten.pop()
              nbyte--;
              bytesRead++;
            }
            for (var i = 0; i < nbyte; i++) {
              try {
                var result = stream.object.input();
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              HEAP8[(buf+i)]=result
            }
            return bytesRead;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var ungotSize = stream.ungotten.length;
          bytesRead = _pread(fildes, buf, nbyte, stream.position);
          if (bytesRead != -1) {
            stream.position += (stream.ungotten.length - ungotSize) + bytesRead;
          }
          return bytesRead;
        }
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) return 0;
      var bytesRead = _read(stream, ptr, bytesToRead);
      var streamObj = FS.streams[stream];
      if (bytesRead == -1) {
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        if (bytesRead < bytesToRead) streamObj.eof = true;
        return Math.floor(bytesRead / size);
      }
    }

  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      return Number(stream in FS.streams && FS.streams[stream].error);
    }

  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      return Number(stream in FS.streams && FS.streams[stream].eof);
    }

  function ___assert_func(filename, line, func, condition) {
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [Pointer_stringify(filename), line, Pointer_stringify(func)];
    }

  
  
  
  
  
  
  
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[(buf+i)];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[(buf+i)]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }

  
  
  function _strlen(ptr) {
      return String_len(ptr);
    }function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }

  
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAP8[(px+i)];
        var y = HEAP8[(py+i)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }

  
  function _memset(ptr, value, num, align) {
      // TODO: make these settings, and in memcpy, {{'s
      if (num >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        var stop = ptr + num;
        while (ptr % 4) { // no need to check for stop, since we have large num
          HEAP8[ptr++] = value;
        }
        if (value < 0) value += 256; // make it unsigned
        var ptr4 = ptr >> 2, stop4 = stop >> 2, value4 = value | (value << 8) | (value << 16) | (value << 24);
        while (ptr4 < stop4) {
          HEAP32[ptr4++] = value4;
        }
        ptr = ptr4 << 2;
        while (ptr < stop) {
          HEAP8[ptr++] = value;
        }
      } else {
        while (num--) {
          HEAP8[ptr++] = value;
        }
      }
    }var _llvm_memset_p0i8_i32=_memset;

  
  function _memcpy(dest, src, num, align) {
      assert(num % 1 === 0, 'memcpy given ' + num + ' bytes to copy. Problem with quantum=1 corrections perhaps?');
      if (num >= 20 && src % 2 == dest % 2) {
        // This is unaligned, but quite large, and potentially alignable, so work hard to get to aligned settings
        if (src % 4 == dest % 4) {
          var stop = src + num;
          while (src % 4) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src4 = src >> 2, dest4 = dest >> 2, stop4 = stop >> 2;
          while (src4 < stop4) {
            HEAP32[dest4++] = HEAP32[src4++];
          }
          src = src4 << 2;
          dest = dest4 << 2;
          while (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        } else {
          var stop = src + num;
          if (src % 2) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src2 = src >> 1, dest2 = dest >> 1, stop2 = stop >> 1;
          while (src2 < stop2) {
            HEAP16[dest2++] = HEAP16[src2++];
          }
          src = src2 << 1;
          dest = dest2 << 1;
          if (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        }
      } else {
        while (num--) {
          HEAP8[dest++] = HEAP8[src++];
        }
      }
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
var _llvm_dbg_declare; // stub for _llvm_dbg_declare
var _llvm_expect_i32; // stub for _llvm_expect_i32

  function _abort(code) {
      ABORT = true;
      throw 'ABORT: ' + code + ', at ' + (new Error().stack);
    }

  
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }

  
  function ___errno_location() {
      return ___setErrNo.ret;
    }
  var ___errno=___errno_location;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
  
      // We need to make sure no one else allocates unfreeable memory!
      // We must control this entirely. So we don't even need to do
      // unfreeable allocations - the HEAP is ours, from STATICTOP up.
      // TODO: We could in theory slice off the top of the HEAP when
      //       sbrk gets a negative increment in |bytes|...
      var self = _sbrk;
      if (!self.called) {
        STATICTOP = alignMemoryPage(STATICTOP); // make sure we start out aligned
        self.called = true;
      }
      var ret = STATICTOP;
      if (bytes != 0) Runtime.staticAlloc(bytes);
      return ret;  // Previous break location.
    }




__ATINIT__.unshift({ func: function() { FS.ignorePermissions = false; if (!FS.init.initialized) FS.init() } });__ATEXIT__.push({ func: function() { FS.quit() } });
___setErrNo(0);

// === Auto-generated postamble setup entry stuff ===

Module.callMain = function callMain(args) {
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_STATIC) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_STATIC));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_STATIC);

  return _main(argc, argv, 0);
}










var __impure_ptr;









var _configuration_table;

var _inflate_order;


















var _fixedtables_lenfix;
var _fixedtables_distfix;


var _static_l_desc;
var _static_d_desc;
var _static_bl_desc;
var _static_ltree;
var _static_dtree;
var _extra_lbits;
var _base_length;
var _extra_dbits;
var _base_dist;

var _extra_blbits;
var _crc_table;





var __str258;






var _z_errmsg;
var _inflate_table_lbase;
var _inflate_table_lext;
var _inflate_table_dbase;
var _inflate_table_dext;
var __gm_;
var _mparams;
STRING_TABLE.__str=allocate([49,46,50,46,53,0] /* 1.2.5\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1=allocate([122,112,105,112,101,46,99,0] /* zpipe.c\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___def=allocate([100,101,102,0] /* def\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2=allocate([114,101,116,32,33,61,32,90,95,83,84,82,69,65,77,95,69,82,82,79,82,0] /* ret != Z_STREAM_ERRO */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3=allocate([115,116,114,109,46,97,118,97,105,108,95,105,110,32,61,61,32,48,0] /* strm.avail_in == 0\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4=allocate([114,101,116,32,61,61,32,90,95,83,84,82,69,65,77,95,69,78,68,0] /* ret == Z_STREAM_END\ */, "i8", ALLOC_STATIC);
STRING_TABLE.___func___inf=allocate([105,110,102,0] /* inf\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5=allocate([122,112,105,112,101,58,32,0] /* zpipe: \00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6=allocate([101,114,114,111,114,32,114,101,97,100,105,110,103,32,115,116,100,105,110,10,0] /* error reading stdin\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str7=allocate([101,114,114,111,114,32,119,114,105,116,105,110,103,32,115,116,100,111,117,116,10,0] /* error writing stdout */, "i8", ALLOC_STATIC);
STRING_TABLE.__str8=allocate([105,110,118,97,108,105,100,32,99,111,109,112,114,101,115,115,105,111,110,32,108,101,118,101,108,10,0] /* invalid compression  */, "i8", ALLOC_STATIC);
STRING_TABLE.__str9=allocate([105,110,118,97,108,105,100,32,111,114,32,105,110,99,111,109,112,108,101,116,101,32,100,101,102,108,97,116,101,32,100,97,116,97,10,0] /* invalid or incomplet */, "i8", ALLOC_STATIC);
STRING_TABLE.__str10=allocate([111,117,116,32,111,102,32,109,101,109,111,114,121,10,0] /* out of memory\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str11=allocate([122,108,105,98,32,118,101,114,115,105,111,110,32,109,105,115,109,97,116,99,104,33,10,0] /* zlib version mismatc */, "i8", ALLOC_STATIC);
STRING_TABLE.__str12=allocate([45,100,0] /* -d\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str13=allocate([122,112,105,112,101,32,117,115,97,103,101,58,32,122,112,105,112,101,32,91,45,100,93,32,60,32,115,111,117,114,99,101,32,62,32,100,101,115,116,10,0] /* zpipe usage: zpipe [ */, "i8", ALLOC_STATIC);
STRING_TABLE._deflateInit2__my_version=allocate([49,46,50,46,53,0] /* 1.2.5\00 */, "i8", ALLOC_STATIC);
_configuration_table=allocate([0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 4, 0, 4, 0, 8, 0, 4, 0, 8, 0, 0, 0, 4, 0, 5, 0, 16, 0, 8, 0, 8, 0, 0, 0, 4, 0, 6, 0, 32, 0, 32, 0, 8, 0, 0, 0, 4, 0, 4, 0, 16, 0, 16, 0, 10, 0, 0, 0, 8, 0, 16, 0, 32, 0, 32, 0, 10, 0, 0, 0, 8, 0, 16, 0, 128, 0, 128, 0, 10, 0, 0, 0, 8, 0, 32, 0, 128, 0, 256, 0, 10, 0, 0, 0, 32, 0, 128, 0, 258, 0, 1024, 0, 10, 0, 0, 0, 32, 0, 258, 0, 258, 0, 4096, 0, 10, 0, 0, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0,"i16",0,"i16",0,"i16",0,"i16",0,"*",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str14=allocate([49,46,50,46,53,0] /* 1.2.5\00 */, "i8", ALLOC_STATIC);
_inflate_order=allocate([16, 0, 17, 0, 18, 0, 0, 0, 8, 0, 7, 0, 9, 0, 6, 0, 10, 0, 5, 0, 11, 0, 4, 0, 12, 0, 3, 0, 13, 0, 2, 0, 14, 0, 1, 0, 15, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
STRING_TABLE.__str115=allocate([105,110,99,111,114,114,101,99,116,32,104,101,97,100,101,114,32,99,104,101,99,107,0] /* incorrect header che */, "i8", ALLOC_STATIC);
STRING_TABLE.__str216=allocate([117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0] /* unknown compression  */, "i8", ALLOC_STATIC);
STRING_TABLE.__str317=allocate([105,110,118,97,108,105,100,32,119,105,110,100,111,119,32,115,105,122,101,0] /* invalid window size\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str418=allocate([117,110,107,110,111,119,110,32,104,101,97,100,101,114,32,102,108,97,103,115,32,115,101,116,0] /* unknown header flags */, "i8", ALLOC_STATIC);
STRING_TABLE.__str519=allocate([104,101,97,100,101,114,32,99,114,99,32,109,105,115,109,97,116,99,104,0] /* header crc mismatch\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str620=allocate([105,110,118,97,108,105,100,32,98,108,111,99,107,32,116,121,112,101,0] /* invalid block type\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str721=allocate([105,110,118,97,108,105,100,32,115,116,111,114,101,100,32,98,108,111,99,107,32,108,101,110,103,116,104,115,0] /* invalid stored block */, "i8", ALLOC_STATIC);
STRING_TABLE.__str822=allocate([116,111,111,32,109,97,110,121,32,108,101,110,103,116,104,32,111,114,32,100,105,115,116,97,110,99,101,32,115,121,109,98,111,108,115,0] /* too many length or d */, "i8", ALLOC_STATIC);
STRING_TABLE.__str923=allocate([105,110,118,97,108,105,100,32,99,111,100,101,32,108,101,110,103,116,104,115,32,115,101,116,0] /* invalid code lengths */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1024=allocate([105,110,118,97,108,105,100,32,98,105,116,32,108,101,110,103,116,104,32,114,101,112,101,97,116,0] /* invalid bit length r */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1125=allocate([105,110,118,97,108,105,100,32,99,111,100,101,32,45,45,32,109,105,115,115,105,110,103,32,101,110,100,45,111,102,45,98,108,111,99,107,0] /* invalid code -- miss */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1226=allocate([105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,115,32,115,101,116,0] /* invalid literal/leng */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1327=allocate([105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,115,32,115,101,116,0] /* invalid distances se */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1428=allocate([105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0] /* invalid literal/leng */, "i8", ALLOC_STATIC);
STRING_TABLE.__str15=allocate([105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0] /* invalid distance cod */, "i8", ALLOC_STATIC);
STRING_TABLE.__str16=allocate([105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0] /* invalid distance too */, "i8", ALLOC_STATIC);
STRING_TABLE.__str17=allocate([105,110,99,111,114,114,101,99,116,32,100,97,116,97,32,99,104,101,99,107,0] /* incorrect data check */, "i8", ALLOC_STATIC);
STRING_TABLE.__str18=allocate([105,110,99,111,114,114,101,99,116,32,108,101,110,103,116,104,32,99,104,101,99,107,0] /* incorrect length che */, "i8", ALLOC_STATIC);
_fixedtables_lenfix=allocate([96, 7, 0, 0, 0, 8, 80, 0, 0, 8, 16, 0, 20, 8, 115, 0, 18, 7, 31, 0, 0, 8, 112, 0, 0, 8, 48, 0, 0, 9, 192, 0, 16, 7, 10, 0, 0, 8, 96, 0, 0, 8, 32, 0, 0, 9, 160, 0, 0, 8, 0, 0, 0, 8, 128, 0, 0, 8, 64, 0, 0, 9, 224, 0, 16, 7, 6, 0, 0, 8, 88, 0, 0, 8, 24, 0, 0, 9, 144, 0, 19, 7, 59, 0, 0, 8, 120, 0, 0, 8, 56, 0, 0, 9, 208, 0, 17, 7, 17, 0, 0, 8, 104, 0, 0, 8, 40, 0, 0, 9, 176, 0, 0, 8, 8, 0, 0, 8, 136, 0, 0, 8, 72, 0, 0, 9, 240, 0, 16, 7, 4, 0, 0, 8, 84, 0, 0, 8, 20, 0, 21, 8, 227, 0, 19, 7, 43, 0, 0, 8, 116, 0, 0, 8, 52, 0, 0, 9, 200, 0, 17, 7, 13, 0, 0, 8, 100, 0, 0, 8, 36, 0, 0, 9, 168, 0, 0, 8, 4, 0, 0, 8, 132, 0, 0, 8, 68, 0, 0, 9, 232, 0, 16, 7, 8, 0, 0, 8, 92, 0, 0, 8, 28, 0, 0, 9, 152, 0, 20, 7, 83, 0, 0, 8, 124, 0, 0, 8, 60, 0, 0, 9, 216, 0, 18, 7, 23, 0, 0, 8, 108, 0, 0, 8, 44, 0, 0, 9, 184, 0, 0, 8, 12, 0, 0, 8, 140, 0, 0, 8, 76, 0, 0, 9, 248, 0, 16, 7, 3, 0, 0, 8, 82, 0, 0, 8, 18, 0, 21, 8, 163, 0, 19, 7, 35, 0, 0, 8, 114, 0, 0, 8, 50, 0, 0, 9, 196, 0, 17, 7, 11, 0, 0, 8, 98, 0, 0, 8, 34, 0, 0, 9, 164, 0, 0, 8, 2, 0, 0, 8, 130, 0, 0, 8, 66, 0, 0, 9, 228, 0, 16, 7, 7, 0, 0, 8, 90, 0, 0, 8, 26, 0, 0, 9, 148, 0, 20, 7, 67, 0, 0, 8, 122, 0, 0, 8, 58, 0, 0, 9, 212, 0, 18, 7, 19, 0, 0, 8, 106, 0, 0, 8, 42, 0, 0, 9, 180, 0, 0, 8, 10, 0, 0, 8, 138, 0, 0, 8, 74, 0, 0, 9, 244, 0, 16, 7, 5, 0, 0, 8, 86, 0, 0, 8, 22, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 118, 0, 0, 8, 54, 0, 0, 9, 204, 0, 17, 7, 15, 0, 0, 8, 102, 0, 0, 8, 38, 0, 0, 9, 172, 0, 0, 8, 6, 0, 0, 8, 134, 0, 0, 8, 70, 0, 0, 9, 236, 0, 16, 7, 9, 0, 0, 8, 94, 0, 0, 8, 30, 0, 0, 9, 156, 0, 20, 7, 99, 0, 0, 8, 126, 0, 0, 8, 62, 0, 0, 9, 220, 0, 18, 7, 27, 0, 0, 8, 110, 0, 0, 8, 46, 0, 0, 9, 188, 0, 0, 8, 14, 0, 0, 8, 142, 0, 0, 8, 78, 0, 0, 9, 252, 0, 96, 7, 0, 0, 0, 8, 81, 0, 0, 8, 17, 0, 21, 8, 131, 0, 18, 7, 31, 0, 0, 8, 113, 0, 0, 8, 49, 0, 0, 9, 194, 0, 16, 7, 10, 0, 0, 8, 97, 0, 0, 8, 33, 0, 0, 9, 162, 0, 0, 8, 1, 0, 0, 8, 129, 0, 0, 8, 65, 0, 0, 9, 226, 0, 16, 7, 6, 0, 0, 8, 89, 0, 0, 8, 25, 0, 0, 9, 146, 0, 19, 7, 59, 0, 0, 8, 121, 0, 0, 8, 57, 0, 0, 9, 210, 0, 17, 7, 17, 0, 0, 8, 105, 0, 0, 8, 41, 0, 0, 9, 178, 0, 0, 8, 9, 0, 0, 8, 137, 0, 0, 8, 73, 0, 0, 9, 242, 0, 16, 7, 4, 0, 0, 8, 85, 0, 0, 8, 21, 0, 16, 8, 258, 0, 19, 7, 43, 0, 0, 8, 117, 0, 0, 8, 53, 0, 0, 9, 202, 0, 17, 7, 13, 0, 0, 8, 101, 0, 0, 8, 37, 0, 0, 9, 170, 0, 0, 8, 5, 0, 0, 8, 133, 0, 0, 8, 69, 0, 0, 9, 234, 0, 16, 7, 8, 0, 0, 8, 93, 0, 0, 8, 29, 0, 0, 9, 154, 0, 20, 7, 83, 0, 0, 8, 125, 0, 0, 8, 61, 0, 0, 9, 218, 0, 18, 7, 23, 0, 0, 8, 109, 0, 0, 8, 45, 0, 0, 9, 186, 0, 0, 8, 13, 0, 0, 8, 141, 0, 0, 8, 77, 0, 0, 9, 250, 0, 16, 7, 3, 0, 0, 8, 83, 0, 0, 8, 19, 0, 21, 8, 195, 0, 19, 7, 35, 0, 0, 8, 115, 0, 0, 8, 51, 0, 0, 9, 198, 0, 17, 7, 11, 0, 0, 8, 99, 0, 0, 8, 35, 0, 0, 9, 166, 0, 0, 8, 3, 0, 0, 8, 131, 0, 0, 8, 67, 0, 0, 9, 230, 0, 16, 7, 7, 0, 0, 8, 91, 0, 0, 8, 27, 0, 0, 9, 150, 0, 20, 7, 67, 0, 0, 8, 123, 0, 0, 8, 59, 0, 0, 9, 214, 0, 18, 7, 19, 0, 0, 8, 107, 0, 0, 8, 43, 0, 0, 9, 182, 0, 0, 8, 11, 0, 0, 8, 139, 0, 0, 8, 75, 0, 0, 9, 246, 0, 16, 7, 5, 0, 0, 8, 87, 0, 0, 8, 23, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 119, 0, 0, 8, 55, 0, 0, 9, 206, 0, 17, 7, 15, 0, 0, 8, 103, 0, 0, 8, 39, 0, 0, 9, 174, 0, 0, 8, 7, 0, 0, 8, 135, 0, 0, 8, 71, 0, 0, 9, 238, 0, 16, 7, 9, 0, 0, 8, 95, 0, 0, 8, 31, 0, 0, 9, 158, 0, 20, 7, 99, 0, 0, 8, 127, 0, 0, 8, 63, 0, 0, 9, 222, 0, 18, 7, 27, 0, 0, 8, 111, 0, 0, 8, 47, 0, 0, 9, 190, 0, 0, 8, 15, 0, 0, 8, 143, 0, 0, 8, 79, 0, 0, 9, 254, 0, 96, 7, 0, 0, 0, 8, 80, 0, 0, 8, 16, 0, 20, 8, 115, 0, 18, 7, 31, 0, 0, 8, 112, 0, 0, 8, 48, 0, 0, 9, 193, 0, 16, 7, 10, 0, 0, 8, 96, 0, 0, 8, 32, 0, 0, 9, 161, 0, 0, 8, 0, 0, 0, 8, 128, 0, 0, 8, 64, 0, 0, 9, 225, 0, 16, 7, 6, 0, 0, 8, 88, 0, 0, 8, 24, 0, 0, 9, 145, 0, 19, 7, 59, 0, 0, 8, 120, 0, 0, 8, 56, 0, 0, 9, 209, 0, 17, 7, 17, 0, 0, 8, 104, 0, 0, 8, 40, 0, 0, 9, 177, 0, 0, 8, 8, 0, 0, 8, 136, 0, 0, 8, 72, 0, 0, 9, 241, 0, 16, 7, 4, 0, 0, 8, 84, 0, 0, 8, 20, 0, 21, 8, 227, 0, 19, 7, 43, 0, 0, 8, 116, 0, 0, 8, 52, 0, 0, 9, 201, 0, 17, 7, 13, 0, 0, 8, 100, 0, 0, 8, 36, 0, 0, 9, 169, 0, 0, 8, 4, 0, 0, 8, 132, 0, 0, 8, 68, 0, 0, 9, 233, 0, 16, 7, 8, 0, 0, 8, 92, 0, 0, 8, 28, 0, 0, 9, 153, 0, 20, 7, 83, 0, 0, 8, 124, 0, 0, 8, 60, 0, 0, 9, 217, 0, 18, 7, 23, 0, 0, 8, 108, 0, 0, 8, 44, 0, 0, 9, 185, 0, 0, 8, 12, 0, 0, 8, 140, 0, 0, 8, 76, 0, 0, 9, 249, 0, 16, 7, 3, 0, 0, 8, 82, 0, 0, 8, 18, 0, 21, 8, 163, 0, 19, 7, 35, 0, 0, 8, 114, 0, 0, 8, 50, 0, 0, 9, 197, 0, 17, 7, 11, 0, 0, 8, 98, 0, 0, 8, 34, 0, 0, 9, 165, 0, 0, 8, 2, 0, 0, 8, 130, 0, 0, 8, 66, 0, 0, 9, 229, 0, 16, 7, 7, 0, 0, 8, 90, 0, 0, 8, 26, 0, 0, 9, 149, 0, 20, 7, 67, 0, 0, 8, 122, 0, 0, 8, 58, 0, 0, 9, 213, 0, 18, 7, 19, 0, 0, 8, 106, 0, 0, 8, 42, 0, 0, 9, 181, 0, 0, 8, 10, 0, 0, 8, 138, 0, 0, 8, 74, 0, 0, 9, 245, 0, 16, 7, 5, 0, 0, 8, 86, 0, 0, 8, 22, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 118, 0, 0, 8, 54, 0, 0, 9, 205, 0, 17, 7, 15, 0, 0, 8, 102, 0, 0, 8, 38, 0, 0, 9, 173, 0, 0, 8, 6, 0, 0, 8, 134, 0, 0, 8, 70, 0, 0, 9, 237, 0, 16, 7, 9, 0, 0, 8, 94, 0, 0, 8, 30, 0, 0, 9, 157, 0, 20, 7, 99, 0, 0, 8, 126, 0, 0, 8, 62, 0, 0, 9, 221, 0, 18, 7, 27, 0, 0, 8, 110, 0, 0, 8, 46, 0, 0, 9, 189, 0, 0, 8, 14, 0, 0, 8, 142, 0, 0, 8, 78, 0, 0, 9, 253, 0, 96, 7, 0, 0, 0, 8, 81, 0, 0, 8, 17, 0, 21, 8, 131, 0, 18, 7, 31, 0, 0, 8, 113, 0, 0, 8, 49, 0, 0, 9, 195, 0, 16, 7, 10, 0, 0, 8, 97, 0, 0, 8, 33, 0, 0, 9, 163, 0, 0, 8, 1, 0, 0, 8, 129, 0, 0, 8, 65, 0, 0, 9, 227, 0, 16, 7, 6, 0, 0, 8, 89, 0, 0, 8, 25, 0, 0, 9, 147, 0, 19, 7, 59, 0, 0, 8, 121, 0, 0, 8, 57, 0, 0, 9, 211, 0, 17, 7, 17, 0, 0, 8, 105, 0, 0, 8, 41, 0, 0, 9, 179, 0, 0, 8, 9, 0, 0, 8, 137, 0, 0, 8, 73, 0, 0, 9, 243, 0, 16, 7, 4, 0, 0, 8, 85, 0, 0, 8, 21, 0, 16, 8, 258, 0, 19, 7, 43, 0, 0, 8, 117, 0, 0, 8, 53, 0, 0, 9, 203, 0, 17, 7, 13, 0, 0, 8, 101, 0, 0, 8, 37, 0, 0, 9, 171, 0, 0, 8, 5, 0, 0, 8, 133, 0, 0, 8, 69, 0, 0, 9, 235, 0, 16, 7, 8, 0, 0, 8, 93, 0, 0, 8, 29, 0, 0, 9, 155, 0, 20, 7, 83, 0, 0, 8, 125, 0, 0, 8, 61, 0, 0, 9, 219, 0, 18, 7, 23, 0, 0, 8, 109, 0, 0, 8, 45, 0, 0, 9, 187, 0, 0, 8, 13, 0, 0, 8, 141, 0, 0, 8, 77, 0, 0, 9, 251, 0, 16, 7, 3, 0, 0, 8, 83, 0, 0, 8, 19, 0, 21, 8, 195, 0, 19, 7, 35, 0, 0, 8, 115, 0, 0, 8, 51, 0, 0, 9, 199, 0, 17, 7, 11, 0, 0, 8, 99, 0, 0, 8, 35, 0, 0, 9, 167, 0, 0, 8, 3, 0, 0, 8, 131, 0, 0, 8, 67, 0, 0, 9, 231, 0, 16, 7, 7, 0, 0, 8, 91, 0, 0, 8, 27, 0, 0, 9, 151, 0, 20, 7, 67, 0, 0, 8, 123, 0, 0, 8, 59, 0, 0, 9, 215, 0, 18, 7, 19, 0, 0, 8, 107, 0, 0, 8, 43, 0, 0, 9, 183, 0, 0, 8, 11, 0, 0, 8, 139, 0, 0, 8, 75, 0, 0, 9, 247, 0, 16, 7, 5, 0, 0, 8, 87, 0, 0, 8, 23, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 119, 0, 0, 8, 55, 0, 0, 9, 207, 0, 17, 7, 15, 0, 0, 8, 103, 0, 0, 8, 39, 0, 0, 9, 175, 0, 0, 8, 7, 0, 0, 8, 135, 0, 0, 8, 71, 0, 0, 9, 239, 0, 16, 7, 9, 0, 0, 8, 95, 0, 0, 8, 31, 0, 0, 9, 159, 0, 20, 7, 99, 0, 0, 8, 127, 0, 0, 8, 63, 0, 0, 9, 223, 0, 18, 7, 27, 0, 0, 8, 111, 0, 0, 8, 47, 0, 0, 9, 191, 0, 0, 8, 15, 0, 0, 8, 143, 0, 0, 8, 79, 0, 0, 9, 255, 0], ["i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0], ALLOC_STATIC);
_fixedtables_distfix=allocate([16, 5, 1, 0, 23, 5, 257, 0, 19, 5, 17, 0, 27, 5, 4097, 0, 17, 5, 5, 0, 25, 5, 1025, 0, 21, 5, 65, 0, 29, 5, 16385, 0, 16, 5, 3, 0, 24, 5, 513, 0, 20, 5, 33, 0, 28, 5, 8193, 0, 18, 5, 9, 0, 26, 5, 2049, 0, 22, 5, 129, 0, 64, 5, 0, 0, 16, 5, 2, 0, 23, 5, 385, 0, 19, 5, 25, 0, 27, 5, 6145, 0, 17, 5, 7, 0, 25, 5, 1537, 0, 21, 5, 97, 0, 29, 5, 24577, 0, 16, 5, 4, 0, 24, 5, 769, 0, 20, 5, 49, 0, 28, 5, 12289, 0, 18, 5, 13, 0, 26, 5, 3073, 0, 22, 5, 193, 0, 64, 5, 0, 0], ["i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0,"i8","i8","i16",0], ALLOC_STATIC);
STRING_TABLE.__dist_code=allocate([0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29] /* \00\01\02\03\04\04\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__length_code=allocate([0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28] /* \00\01\02\03\04\05\0 */, "i8", ALLOC_STATIC);
_static_l_desc=allocate([0, 0, 0, 0, 0, 0, 0, 0, 257, 0, 0, 0, 286, 0, 0, 0, 15, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_static_d_desc=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 15, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_static_bl_desc=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 7, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_static_ltree=allocate([12, 0, 8, 0, 140, 0, 8, 0, 76, 0, 8, 0, 204, 0, 8, 0, 44, 0, 8, 0, 172, 0, 8, 0, 108, 0, 8, 0, 236, 0, 8, 0, 28, 0, 8, 0, 156, 0, 8, 0, 92, 0, 8, 0, 220, 0, 8, 0, 60, 0, 8, 0, 188, 0, 8, 0, 124, 0, 8, 0, 252, 0, 8, 0, 2, 0, 8, 0, 130, 0, 8, 0, 66, 0, 8, 0, 194, 0, 8, 0, 34, 0, 8, 0, 162, 0, 8, 0, 98, 0, 8, 0, 226, 0, 8, 0, 18, 0, 8, 0, 146, 0, 8, 0, 82, 0, 8, 0, 210, 0, 8, 0, 50, 0, 8, 0, 178, 0, 8, 0, 114, 0, 8, 0, 242, 0, 8, 0, 10, 0, 8, 0, 138, 0, 8, 0, 74, 0, 8, 0, 202, 0, 8, 0, 42, 0, 8, 0, 170, 0, 8, 0, 106, 0, 8, 0, 234, 0, 8, 0, 26, 0, 8, 0, 154, 0, 8, 0, 90, 0, 8, 0, 218, 0, 8, 0, 58, 0, 8, 0, 186, 0, 8, 0, 122, 0, 8, 0, 250, 0, 8, 0, 6, 0, 8, 0, 134, 0, 8, 0, 70, 0, 8, 0, 198, 0, 8, 0, 38, 0, 8, 0, 166, 0, 8, 0, 102, 0, 8, 0, 230, 0, 8, 0, 22, 0, 8, 0, 150, 0, 8, 0, 86, 0, 8, 0, 214, 0, 8, 0, 54, 0, 8, 0, 182, 0, 8, 0, 118, 0, 8, 0, 246, 0, 8, 0, 14, 0, 8, 0, 142, 0, 8, 0, 78, 0, 8, 0, 206, 0, 8, 0, 46, 0, 8, 0, 174, 0, 8, 0, 110, 0, 8, 0, 238, 0, 8, 0, 30, 0, 8, 0, 158, 0, 8, 0, 94, 0, 8, 0, 222, 0, 8, 0, 62, 0, 8, 0, 190, 0, 8, 0, 126, 0, 8, 0, 254, 0, 8, 0, 1, 0, 8, 0, 129, 0, 8, 0, 65, 0, 8, 0, 193, 0, 8, 0, 33, 0, 8, 0, 161, 0, 8, 0, 97, 0, 8, 0, 225, 0, 8, 0, 17, 0, 8, 0, 145, 0, 8, 0, 81, 0, 8, 0, 209, 0, 8, 0, 49, 0, 8, 0, 177, 0, 8, 0, 113, 0, 8, 0, 241, 0, 8, 0, 9, 0, 8, 0, 137, 0, 8, 0, 73, 0, 8, 0, 201, 0, 8, 0, 41, 0, 8, 0, 169, 0, 8, 0, 105, 0, 8, 0, 233, 0, 8, 0, 25, 0, 8, 0, 153, 0, 8, 0, 89, 0, 8, 0, 217, 0, 8, 0, 57, 0, 8, 0, 185, 0, 8, 0, 121, 0, 8, 0, 249, 0, 8, 0, 5, 0, 8, 0, 133, 0, 8, 0, 69, 0, 8, 0, 197, 0, 8, 0, 37, 0, 8, 0, 165, 0, 8, 0, 101, 0, 8, 0, 229, 0, 8, 0, 21, 0, 8, 0, 149, 0, 8, 0, 85, 0, 8, 0, 213, 0, 8, 0, 53, 0, 8, 0, 181, 0, 8, 0, 117, 0, 8, 0, 245, 0, 8, 0, 13, 0, 8, 0, 141, 0, 8, 0, 77, 0, 8, 0, 205, 0, 8, 0, 45, 0, 8, 0, 173, 0, 8, 0, 109, 0, 8, 0, 237, 0, 8, 0, 29, 0, 8, 0, 157, 0, 8, 0, 93, 0, 8, 0, 221, 0, 8, 0, 61, 0, 8, 0, 189, 0, 8, 0, 125, 0, 8, 0, 253, 0, 8, 0, 19, 0, 9, 0, 275, 0, 9, 0, 147, 0, 9, 0, 403, 0, 9, 0, 83, 0, 9, 0, 339, 0, 9, 0, 211, 0, 9, 0, 467, 0, 9, 0, 51, 0, 9, 0, 307, 0, 9, 0, 179, 0, 9, 0, 435, 0, 9, 0, 115, 0, 9, 0, 371, 0, 9, 0, 243, 0, 9, 0, 499, 0, 9, 0, 11, 0, 9, 0, 267, 0, 9, 0, 139, 0, 9, 0, 395, 0, 9, 0, 75, 0, 9, 0, 331, 0, 9, 0, 203, 0, 9, 0, 459, 0, 9, 0, 43, 0, 9, 0, 299, 0, 9, 0, 171, 0, 9, 0, 427, 0, 9, 0, 107, 0, 9, 0, 363, 0, 9, 0, 235, 0, 9, 0, 491, 0, 9, 0, 27, 0, 9, 0, 283, 0, 9, 0, 155, 0, 9, 0, 411, 0, 9, 0, 91, 0, 9, 0, 347, 0, 9, 0, 219, 0, 9, 0, 475, 0, 9, 0, 59, 0, 9, 0, 315, 0, 9, 0, 187, 0, 9, 0, 443, 0, 9, 0, 123, 0, 9, 0, 379, 0, 9, 0, 251, 0, 9, 0, 507, 0, 9, 0, 7, 0, 9, 0, 263, 0, 9, 0, 135, 0, 9, 0, 391, 0, 9, 0, 71, 0, 9, 0, 327, 0, 9, 0, 199, 0, 9, 0, 455, 0, 9, 0, 39, 0, 9, 0, 295, 0, 9, 0, 167, 0, 9, 0, 423, 0, 9, 0, 103, 0, 9, 0, 359, 0, 9, 0, 231, 0, 9, 0, 487, 0, 9, 0, 23, 0, 9, 0, 279, 0, 9, 0, 151, 0, 9, 0, 407, 0, 9, 0, 87, 0, 9, 0, 343, 0, 9, 0, 215, 0, 9, 0, 471, 0, 9, 0, 55, 0, 9, 0, 311, 0, 9, 0, 183, 0, 9, 0, 439, 0, 9, 0, 119, 0, 9, 0, 375, 0, 9, 0, 247, 0, 9, 0, 503, 0, 9, 0, 15, 0, 9, 0, 271, 0, 9, 0, 143, 0, 9, 0, 399, 0, 9, 0, 79, 0, 9, 0, 335, 0, 9, 0, 207, 0, 9, 0, 463, 0, 9, 0, 47, 0, 9, 0, 303, 0, 9, 0, 175, 0, 9, 0, 431, 0, 9, 0, 111, 0, 9, 0, 367, 0, 9, 0, 239, 0, 9, 0, 495, 0, 9, 0, 31, 0, 9, 0, 287, 0, 9, 0, 159, 0, 9, 0, 415, 0, 9, 0, 95, 0, 9, 0, 351, 0, 9, 0, 223, 0, 9, 0, 479, 0, 9, 0, 63, 0, 9, 0, 319, 0, 9, 0, 191, 0, 9, 0, 447, 0, 9, 0, 127, 0, 9, 0, 383, 0, 9, 0, 255, 0, 9, 0, 511, 0, 9, 0, 0, 0, 7, 0, 64, 0, 7, 0, 32, 0, 7, 0, 96, 0, 7, 0, 16, 0, 7, 0, 80, 0, 7, 0, 48, 0, 7, 0, 112, 0, 7, 0, 8, 0, 7, 0, 72, 0, 7, 0, 40, 0, 7, 0, 104, 0, 7, 0, 24, 0, 7, 0, 88, 0, 7, 0, 56, 0, 7, 0, 120, 0, 7, 0, 4, 0, 7, 0, 68, 0, 7, 0, 36, 0, 7, 0, 100, 0, 7, 0, 20, 0, 7, 0, 84, 0, 7, 0, 52, 0, 7, 0, 116, 0, 7, 0, 3, 0, 8, 0, 131, 0, 8, 0, 67, 0, 8, 0, 195, 0, 8, 0, 35, 0, 8, 0, 163, 0, 8, 0, 99, 0, 8, 0, 227, 0, 8, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
_static_dtree=allocate([0, 0, 5, 0, 16, 0, 5, 0, 8, 0, 5, 0, 24, 0, 5, 0, 4, 0, 5, 0, 20, 0, 5, 0, 12, 0, 5, 0, 28, 0, 5, 0, 2, 0, 5, 0, 18, 0, 5, 0, 10, 0, 5, 0, 26, 0, 5, 0, 6, 0, 5, 0, 22, 0, 5, 0, 14, 0, 5, 0, 30, 0, 5, 0, 1, 0, 5, 0, 17, 0, 5, 0, 9, 0, 5, 0, 25, 0, 5, 0, 5, 0, 5, 0, 21, 0, 5, 0, 13, 0, 5, 0, 29, 0, 5, 0, 3, 0, 5, 0, 19, 0, 5, 0, 11, 0, 5, 0, 27, 0, 5, 0, 7, 0, 5, 0, 23, 0, 5, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
_extra_lbits=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_base_length=allocate([0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 28, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 48, 0, 0, 0, 56, 0, 0, 0, 64, 0, 0, 0, 80, 0, 0, 0, 96, 0, 0, 0, 112, 0, 0, 0, 128, 0, 0, 0, 160, 0, 0, 0, 192, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_extra_dbits=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_base_dist=allocate([0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 16, 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 0, 64, 0, 0, 0, 96, 0, 0, 0, 128, 0, 0, 0, 192, 0, 0, 0, 256, 0, 0, 0, 384, 0, 0, 0, 512, 0, 0, 0, 768, 0, 0, 0, 1024, 0, 0, 0, 1536, 0, 0, 0, 2048, 0, 0, 0, 3072, 0, 0, 0, 4096, 0, 0, 0, 6144, 0, 0, 0, 8192, 0, 0, 0, 12288, 0, 0, 0, 16384, 0, 0, 0, 24576, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE._bl_order=allocate([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15] /* \10\11\12\00\08\07\0 */, "i8", ALLOC_STATIC);
_extra_blbits=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_crc_table=allocate([0, 0, 0, 0, 1996959894, 0, 0, 0, -301047508, 0, 0, 0, -1727442502, 0, 0, 0, 124634137, 0, 0, 0, 1886057615, 0, 0, 0, -379345611, 0, 0, 0, -1637575261, 0, 0, 0, 249268274, 0, 0, 0, 2044508324, 0, 0, 0, -522852066, 0, 0, 0, -1747789432, 0, 0, 0, 162941995, 0, 0, 0, 2125561021, 0, 0, 0, -407360249, 0, 0, 0, -1866523247, 0, 0, 0, 498536548, 0, 0, 0, 1789927666, 0, 0, 0, -205950648, 0, 0, 0, -2067906082, 0, 0, 0, 450548861, 0, 0, 0, 1843258603, 0, 0, 0, -187386543, 0, 0, 0, -2083289657, 0, 0, 0, 325883990, 0, 0, 0, 1684777152, 0, 0, 0, -43845254, 0, 0, 0, -1973040660, 0, 0, 0, 335633487, 0, 0, 0, 1661365465, 0, 0, 0, -99664541, 0, 0, 0, -1928851979, 0, 0, 0, 997073096, 0, 0, 0, 1281953886, 0, 0, 0, -715111964, 0, 0, 0, -1570279054, 0, 0, 0, 1006888145, 0, 0, 0, 1258607687, 0, 0, 0, -770865667, 0, 0, 0, -1526024853, 0, 0, 0, 901097722, 0, 0, 0, 1119000684, 0, 0, 0, -608450090, 0, 0, 0, -1396901568, 0, 0, 0, 853044451, 0, 0, 0, 1172266101, 0, 0, 0, -589951537, 0, 0, 0, -1412350631, 0, 0, 0, 651767980, 0, 0, 0, 1373503546, 0, 0, 0, -925412992, 0, 0, 0, -1076862698, 0, 0, 0, 565507253, 0, 0, 0, 1454621731, 0, 0, 0, -809855591, 0, 0, 0, -1195530993, 0, 0, 0, 671266974, 0, 0, 0, 1594198024, 0, 0, 0, -972236366, 0, 0, 0, -1324619484, 0, 0, 0, 795835527, 0, 0, 0, 1483230225, 0, 0, 0, -1050600021, 0, 0, 0, -1234817731, 0, 0, 0, 1994146192, 0, 0, 0, 31158534, 0, 0, 0, -1731059524, 0, 0, 0, -271249366, 0, 0, 0, 1907459465, 0, 0, 0, 112637215, 0, 0, 0, -1614814043, 0, 0, 0, -390540237, 0, 0, 0, 2013776290, 0, 0, 0, 251722036, 0, 0, 0, -1777751922, 0, 0, 0, -519137256, 0, 0, 0, 2137656763, 0, 0, 0, 141376813, 0, 0, 0, -1855689577, 0, 0, 0, -429695999, 0, 0, 0, 1802195444, 0, 0, 0, 476864866, 0, 0, 0, -2056965928, 0, 0, 0, -228458418, 0, 0, 0, 1812370925, 0, 0, 0, 453092731, 0, 0, 0, -2113342271, 0, 0, 0, -183516073, 0, 0, 0, 1706088902, 0, 0, 0, 314042704, 0, 0, 0, -1950435094, 0, 0, 0, -54949764, 0, 0, 0, 1658658271, 0, 0, 0, 366619977, 0, 0, 0, -1932296973, 0, 0, 0, -69972891, 0, 0, 0, 1303535960, 0, 0, 0, 984961486, 0, 0, 0, -1547960204, 0, 0, 0, -725929758, 0, 0, 0, 1256170817, 0, 0, 0, 1037604311, 0, 0, 0, -1529756563, 0, 0, 0, -740887301, 0, 0, 0, 1131014506, 0, 0, 0, 879679996, 0, 0, 0, -1385723834, 0, 0, 0, -631195440, 0, 0, 0, 1141124467, 0, 0, 0, 855842277, 0, 0, 0, -1442165665, 0, 0, 0, -586318647, 0, 0, 0, 1342533948, 0, 0, 0, 654459306, 0, 0, 0, -1106571248, 0, 0, 0, -921952122, 0, 0, 0, 1466479909, 0, 0, 0, 544179635, 0, 0, 0, -1184443383, 0, 0, 0, -832445281, 0, 0, 0, 1591671054, 0, 0, 0, 702138776, 0, 0, 0, -1328506846, 0, 0, 0, -942167884, 0, 0, 0, 1504918807, 0, 0, 0, 783551873, 0, 0, 0, -1212326853, 0, 0, 0, -1061524307, 0, 0, 0, -306674912, 0, 0, 0, -1698712650, 0, 0, 0, 62317068, 0, 0, 0, 1957810842, 0, 0, 0, -355121351, 0, 0, 0, -1647151185, 0, 0, 0, 81470997, 0, 0, 0, 1943803523, 0, 0, 0, -480048366, 0, 0, 0, -1805370492, 0, 0, 0, 225274430, 0, 0, 0, 2053790376, 0, 0, 0, -468791541, 0, 0, 0, -1828061283, 0, 0, 0, 167816743, 0, 0, 0, 2097651377, 0, 0, 0, -267414716, 0, 0, 0, -2029476910, 0, 0, 0, 503444072, 0, 0, 0, 1762050814, 0, 0, 0, -144550051, 0, 0, 0, -2140837941, 0, 0, 0, 426522225, 0, 0, 0, 1852507879, 0, 0, 0, -19653770, 0, 0, 0, -1982649376, 0, 0, 0, 282753626, 0, 0, 0, 1742555852, 0, 0, 0, -105259153, 0, 0, 0, -1900089351, 0, 0, 0, 397917763, 0, 0, 0, 1622183637, 0, 0, 0, -690576408, 0, 0, 0, -1580100738, 0, 0, 0, 953729732, 0, 0, 0, 1340076626, 0, 0, 0, -776247311, 0, 0, 0, -1497606297, 0, 0, 0, 1068828381, 0, 0, 0, 1219638859, 0, 0, 0, -670225446, 0, 0, 0, -1358292148, 0, 0, 0, 906185462, 0, 0, 0, 1090812512, 0, 0, 0, -547295293, 0, 0, 0, -1469587627, 0, 0, 0, 829329135, 0, 0, 0, 1181335161, 0, 0, 0, -882789492, 0, 0, 0, -1134132454, 0, 0, 0, 628085408, 0, 0, 0, 1382605366, 0, 0, 0, -871598187, 0, 0, 0, -1156888829, 0, 0, 0, 570562233, 0, 0, 0, 1426400815, 0, 0, 0, -977650754, 0, 0, 0, -1296233688, 0, 0, 0, 733239954, 0, 0, 0, 1555261956, 0, 0, 0, -1026031705, 0, 0, 0, -1244606671, 0, 0, 0, 752459403, 0, 0, 0, 1541320221, 0, 0, 0, -1687895376, 0, 0, 0, -328994266, 0, 0, 0, 1969922972, 0, 0, 0, 40735498, 0, 0, 0, -1677130071, 0, 0, 0, -351390145, 0, 0, 0, 1913087877, 0, 0, 0, 83908371, 0, 0, 0, -1782625662, 0, 0, 0, -491226604, 0, 0, 0, 2075208622, 0, 0, 0, 213261112, 0, 0, 0, -1831694693, 0, 0, 0, -438977011, 0, 0, 0, 2094854071, 0, 0, 0, 198958881, 0, 0, 0, -2032938284, 0, 0, 0, -237706686, 0, 0, 0, 1759359992, 0, 0, 0, 534414190, 0, 0, 0, -2118248755, 0, 0, 0, -155638181, 0, 0, 0, 1873836001, 0, 0, 0, 414664567, 0, 0, 0, -2012718362, 0, 0, 0, -15766928, 0, 0, 0, 1711684554, 0, 0, 0, 285281116, 0, 0, 0, -1889165569, 0, 0, 0, -127750551, 0, 0, 0, 1634467795, 0, 0, 0, 376229701, 0, 0, 0, -1609899400, 0, 0, 0, -686959890, 0, 0, 0, 1308918612, 0, 0, 0, 956543938, 0, 0, 0, -1486412191, 0, 0, 0, -799009033, 0, 0, 0, 1231636301, 0, 0, 0, 1047427035, 0, 0, 0, -1362007478, 0, 0, 0, -640263460, 0, 0, 0, 1088359270, 0, 0, 0, 936918000, 0, 0, 0, -1447252397, 0, 0, 0, -558129467, 0, 0, 0, 1202900863, 0, 0, 0, 817233897, 0, 0, 0, -1111625188, 0, 0, 0, -893730166, 0, 0, 0, 1404277552, 0, 0, 0, 615818150, 0, 0, 0, -1160759803, 0, 0, 0, -841546093, 0, 0, 0, 1423857449, 0, 0, 0, 601450431, 0, 0, 0, -1285129682, 0, 0, 0, -1000256840, 0, 0, 0, 1567103746, 0, 0, 0, 711928724, 0, 0, 0, -1274298825, 0, 0, 0, -1022587231, 0, 0, 0, 1510334235, 0, 0, 0, 755167117, 0, 0, 0, 0, 0, 0, 0, 421212481, 0, 0, 0, 842424962, 0, 0, 0, 724390851, 0, 0, 0, 1684849924, 0, 0, 0, 2105013317, 0, 0, 0, 1448781702, 0, 0, 0, 1329698503, 0, 0, 0, -925267448, 0, 0, 0, -775767223, 0, 0, 0, -84940662, 0, 0, 0, -470492725, 0, 0, 0, -1397403892, 0, 0, 0, -1246855603, 0, 0, 0, -1635570290, 0, 0, 0, -2020074289, 0, 0, 0, 1254232657, 0, 0, 0, 1406739216, 0, 0, 0, 2029285587, 0, 0, 0, 1643069842, 0, 0, 0, 783210325, 0, 0, 0, 934667796, 0, 0, 0, 479770071, 0, 0, 0, 92505238, 0, 0, 0, -2112120743, 0, 0, 0, -1694455528, 0, 0, 0, -1339163941, 0, 0, 0, -1456026726, 0, 0, 0, -428384931, 0, 0, 0, -9671652, 0, 0, 0, -733921313, 0, 0, 0, -849736034, 0, 0, 0, -1786501982, 0, 0, 0, -1935731229, 0, 0, 0, -1481488864, 0, 0, 0, -1096190111, 0, 0, 0, -236396122, 0, 0, 0, -386674457, 0, 0, 0, -1008827612, 0, 0, 0, -624577947, 0, 0, 0, 1566420650, 0, 0, 0, 1145479147, 0, 0, 0, 1869335592, 0, 0, 0, 1987116393, 0, 0, 0, 959540142, 0, 0, 0, 539646703, 0, 0, 0, 185010476, 0, 0, 0, 303839341, 0, 0, 0, -549046541, 0, 0, 0, -966981710, 0, 0, 0, -311405455, 0, 0, 0, -194288336, 0, 0, 0, -1154812937, 0, 0, 0, -1573797194, 0, 0, 0, -1994616459, 0, 0, 0, -1878548428, 0, 0, 0, 396344571, 0, 0, 0, 243568058, 0, 0, 0, 631889529, 0, 0, 0, 1018359608, 0, 0, 0, 1945336319, 0, 0, 0, 1793607870, 0, 0, 0, 1103436669, 0, 0, 0, 1490954812, 0, 0, 0, -260485371, 0, 0, 0, -379421116, 0, 0, 0, -1034998393, 0, 0, 0, -615244602, 0, 0, 0, -1810527743, 0, 0, 0, -1928414400, 0, 0, 0, -1507596157, 0, 0, 0, -1086793278, 0, 0, 0, 950060301, 0, 0, 0, 565965900, 0, 0, 0, 177645455, 0, 0, 0, 328046286, 0, 0, 0, 1556873225, 0, 0, 0, 1171730760, 0, 0, 0, 1861902987, 0, 0, 0, 2011255754, 0, 0, 0, -1162125996, 0, 0, 0, -1549767659, 0, 0, 0, -2004009002, 0, 0, 0, -1852436841, 0, 0, 0, -556296112, 0, 0, 0, -942888687, 0, 0, 0, -320734510, 0, 0, 0, -168113261, 0, 0, 0, 1919080284, 0, 0, 0, 1803150877, 0, 0, 0, 1079293406, 0, 0, 0, 1498383519, 0, 0, 0, 370020952, 0, 0, 0, 253043481, 0, 0, 0, 607678682, 0, 0, 0, 1025720731, 0, 0, 0, 1711106983, 0, 0, 0, 2095471334, 0, 0, 0, 1472923941, 0, 0, 0, 1322268772, 0, 0, 0, 26324643, 0, 0, 0, 411738082, 0, 0, 0, 866634785, 0, 0, 0, 717028704, 0, 0, 0, -1390091857, 0, 0, 0, -1270886162, 0, 0, 0, -1626176723, 0, 0, 0, -2046184852, 0, 0, 0, -918018901, 0, 0, 0, -799861270, 0, 0, 0, -75610583, 0, 0, 0, -496666776, 0, 0, 0, 792689142, 0, 0, 0, 908347575, 0, 0, 0, 487136116, 0, 0, 0, 68299317, 0, 0, 0, 1263779058, 0, 0, 0, 1380486579, 0, 0, 0, 2036719216, 0, 0, 0, 1618931505, 0, 0, 0, -404294658, 0, 0, 0, -16923969, 0, 0, 0, -707751556, 0, 0, 0, -859070403, 0, 0, 0, -2088093958, 0, 0, 0, -1701771333, 0, 0, 0, -1313057672, 0, 0, 0, -1465424583, 0, 0, 0, 998479947, 0, 0, 0, 580430090, 0, 0, 0, 162921161, 0, 0, 0, 279890824, 0, 0, 0, 1609522511, 0, 0, 0, 1190423566, 0, 0, 0, 1842954189, 0, 0, 0, 1958874764, 0, 0, 0, -212200893, 0, 0, 0, -364829950, 0, 0, 0, -1049857855, 0, 0, 0, -663273088, 0, 0, 0, -1758013625, 0, 0, 0, -1909594618, 0, 0, 0, -1526680123, 0, 0, 0, -1139047292, 0, 0, 0, 1900120602, 0, 0, 0, 1750776667, 0, 0, 0, 1131931800, 0, 0, 0, 1517083097, 0, 0, 0, 355290910, 0, 0, 0, 204897887, 0, 0, 0, 656092572, 0, 0, 0, 1040194781, 0, 0, 0, -1181220846, 0, 0, 0, -1602014893, 0, 0, 0, -1951505776, 0, 0, 0, -1833610287, 0, 0, 0, -571161322, 0, 0, 0, -990907305, 0, 0, 0, -272455788, 0, 0, 0, -153512235, 0, 0, 0, -1375224599, 0, 0, 0, -1222865496, 0, 0, 0, -1674453397, 0, 0, 0, -2060783830, 0, 0, 0, -898926099, 0, 0, 0, -747616084, 0, 0, 0, -128115857, 0, 0, 0, -515495378, 0, 0, 0, 1725839073, 0, 0, 0, 2143618976, 0, 0, 0, 1424512099, 0, 0, 0, 1307796770, 0, 0, 0, 45282277, 0, 0, 0, 464110244, 0, 0, 0, 813994343, 0, 0, 0, 698327078, 0, 0, 0, -456806728, 0, 0, 0, -35741703, 0, 0, 0, -688665542, 0, 0, 0, -806814341, 0, 0, 0, -2136380484, 0, 0, 0, -1716364547, 0, 0, 0, -1298200258, 0, 0, 0, -1417398145, 0, 0, 0, 740041904, 0, 0, 0, 889656817, 0, 0, 0, 506086962, 0, 0, 0, 120682355, 0, 0, 0, 1215357364, 0, 0, 0, 1366020341, 0, 0, 0, 2051441462, 0, 0, 0, 1667084919, 0, 0, 0, -872753330, 0, 0, 0, -756947441, 0, 0, 0, -104024628, 0, 0, 0, -522746739, 0, 0, 0, -1349119414, 0, 0, 0, -1232264437, 0, 0, 0, -1650429752, 0, 0, 0, -2068102775, 0, 0, 0, 52649286, 0, 0, 0, 439905287, 0, 0, 0, 823476164, 0, 0, 0, 672009861, 0, 0, 0, 1733269570, 0, 0, 0, 2119477507, 0, 0, 0, 1434057408, 0, 0, 0, 1281543041, 0, 0, 0, -2126985953, 0, 0, 0, -1742474146, 0, 0, 0, -1290885219, 0, 0, 0, -1441425700, 0, 0, 0, -447479781, 0, 0, 0, -61918886, 0, 0, 0, -681418087, 0, 0, 0, -830909480, 0, 0, 0, 1239502615, 0, 0, 0, 1358593622, 0, 0, 0, 2077699477, 0, 0, 0, 1657543892, 0, 0, 0, 764250643, 0, 0, 0, 882293586, 0, 0, 0, 532408465, 0, 0, 0, 111204816, 0, 0, 0, 1585378284, 0, 0, 0, 1197851309, 0, 0, 0, 1816695150, 0, 0, 0, 1968414767, 0, 0, 0, 974272232, 0, 0, 0, 587794345, 0, 0, 0, 136598634, 0, 0, 0, 289367339, 0, 0, 0, -1767409180, 0, 0, 0, -1883486043, 0, 0, 0, -1533994138, 0, 0, 0, -1115018713, 0, 0, 0, -221528864, 0, 0, 0, -338653791, 0, 0, 0, -1057104286, 0, 0, 0, -639176925, 0, 0, 0, 347922877, 0, 0, 0, 229101820, 0, 0, 0, 646611775, 0, 0, 0, 1066513022, 0, 0, 0, 1892689081, 0, 0, 0, 1774917112, 0, 0, 0, 1122387515, 0, 0, 0, 1543337850, 0, 0, 0, -597333067, 0, 0, 0, -981574924, 0, 0, 0, -296548041, 0, 0, 0, -146261898, 0, 0, 0, -1207325007, 0, 0, 0, -1592614928, 0, 0, 0, -1975530445, 0, 0, 0, -1826292366, 0, 0, 0, 0, 0, 0, 0, 29518391, 0, 0, 0, 59036782, 0, 0, 0, 38190681, 0, 0, 0, 118073564, 0, 0, 0, 114017003, 0, 0, 0, 76381362, 0, 0, 0, 89069189, 0, 0, 0, 236147128, 0, 0, 0, 265370511, 0, 0, 0, 228034006, 0, 0, 0, 206958561, 0, 0, 0, 152762724, 0, 0, 0, 148411219, 0, 0, 0, 178138378, 0, 0, 0, 190596925, 0, 0, 0, 472294256, 0, 0, 0, 501532999, 0, 0, 0, 530741022, 0, 0, 0, 509615401, 0, 0, 0, 456068012, 0, 0, 0, 451764635, 0, 0, 0, 413917122, 0, 0, 0, 426358261, 0, 0, 0, 305525448, 0, 0, 0, 334993663, 0, 0, 0, 296822438, 0, 0, 0, 275991697, 0, 0, 0, 356276756, 0, 0, 0, 352202787, 0, 0, 0, 381193850, 0, 0, 0, 393929805, 0, 0, 0, 944588512, 0, 0, 0, 965684439, 0, 0, 0, 1003065998, 0, 0, 0, 973863097, 0, 0, 0, 1061482044, 0, 0, 0, 1049003019, 0, 0, 0, 1019230802, 0, 0, 0, 1023561829, 0, 0, 0, 912136024, 0, 0, 0, 933002607, 0, 0, 0, 903529270, 0, 0, 0, 874031361, 0, 0, 0, 827834244, 0, 0, 0, 815125939, 0, 0, 0, 852716522, 0, 0, 0, 856752605, 0, 0, 0, 611050896, 0, 0, 0, 631869351, 0, 0, 0, 669987326, 0, 0, 0, 640506825, 0, 0, 0, 593644876, 0, 0, 0, 580921211, 0, 0, 0, 551983394, 0, 0, 0, 556069653, 0, 0, 0, 712553512, 0, 0, 0, 733666847, 0, 0, 0, 704405574, 0, 0, 0, 675154545, 0, 0, 0, 762387700, 0, 0, 0, 749958851, 0, 0, 0, 787859610, 0, 0, 0, 792175277, 0, 0, 0, 1889177024, 0, 0, 0, 1901651959, 0, 0, 0, 1931368878, 0, 0, 0, 1927033753, 0, 0, 0, 2006131996, 0, 0, 0, 1985040171, 0, 0, 0, 1947726194, 0, 0, 0, 1976933189, 0, 0, 0, 2122964088, 0, 0, 0, 2135668303, 0, 0, 0, 2098006038, 0, 0, 0, 2093965857, 0, 0, 0, 2038461604, 0, 0, 0, 2017599123, 0, 0, 0, 2047123658, 0, 0, 0, 2076625661, 0, 0, 0, 1824272048, 0, 0, 0, 1836991623, 0, 0, 0, 1866005214, 0, 0, 0, 1861914857, 0, 0, 0, 1807058540, 0, 0, 0, 1786244187, 0, 0, 0, 1748062722, 0, 0, 0, 1777547317, 0, 0, 0, 1655668488, 0, 0, 0, 1668093247, 0, 0, 0, 1630251878, 0, 0, 0, 1625932113, 0, 0, 0, 1705433044, 0, 0, 0, 1684323811, 0, 0, 0, 1713505210, 0, 0, 0, 1742760333, 0, 0, 0, 1222101792, 0, 0, 0, 1226154263, 0, 0, 0, 1263738702, 0, 0, 0, 1251046777, 0, 0, 0, 1339974652, 0, 0, 0, 1310460363, 0, 0, 0, 1281013650, 0, 0, 0, 1301863845, 0, 0, 0, 1187289752, 0, 0, 0, 1191637167, 0, 0, 0, 1161842422, 0, 0, 0, 1149379777, 0, 0, 0, 1103966788, 0, 0, 0, 1074747507, 0, 0, 0, 1112139306, 0, 0, 0, 1133218845, 0, 0, 0, 1425107024, 0, 0, 0, 1429406311, 0, 0, 0, 1467333694, 0, 0, 0, 1454888457, 0, 0, 0, 1408811148, 0, 0, 0, 1379576507, 0, 0, 0, 1350309090, 0, 0, 0, 1371438805, 0, 0, 0, 1524775400, 0, 0, 0, 1528845279, 0, 0, 0, 1499917702, 0, 0, 0, 1487177649, 0, 0, 0, 1575719220, 0, 0, 0, 1546255107, 0, 0, 0, 1584350554, 0, 0, 0, 1605185389, 0, 0, 0, -516613248, 0, 0, 0, -520654409, 0, 0, 0, -491663378, 0, 0, 0, -478960167, 0, 0, 0, -432229540, 0, 0, 0, -402728597, 0, 0, 0, -440899790, 0, 0, 0, -461763323, 0, 0, 0, -282703304, 0, 0, 0, -287039473, 0, 0, 0, -324886954, 0, 0, 0, -312413087, 0, 0, 0, -399514908, 0, 0, 0, -370308909, 0, 0, 0, -341100918, 0, 0, 0, -362193731, 0, 0, 0, -49039120, 0, 0, 0, -53357881, 0, 0, 0, -23630690, 0, 0, 0, -11204951, 0, 0, 0, -98955220, 0, 0, 0, -69699045, 0, 0, 0, -107035582, 0, 0, 0, -128143755, 0, 0, 0, -218044088, 0, 0, 0, -222133377, 0, 0, 0, -259769050, 0, 0, 0, -247048431, 0, 0, 0, -200719980, 0, 0, 0, -171234397, 0, 0, 0, -141715974, 0, 0, 0, -162529331, 0, 0, 0, -646423200, 0, 0, 0, -658884777, 0, 0, 0, -620984050, 0, 0, 0, -616635591, 0, 0, 0, -562956868, 0, 0, 0, -541876341, 0, 0, 0, -571137582, 0, 0, 0, -600355867, 0, 0, 0, -680850216, 0, 0, 0, -693541137, 0, 0, 0, -722478922, 0, 0, 0, -718425471, 0, 0, 0, -798841852, 0, 0, 0, -777990605, 0, 0, 0, -739872662, 0, 0, 0, -769385891, 0, 0, 0, -983630320, 0, 0, 0, -996371417, 0, 0, 0, -958780802, 0, 0, 0, -954711991, 0, 0, 0, -1034463540, 0, 0, 0, -1013629701, 0, 0, 0, -1043103070, 0, 0, 0, -1072568171, 0, 0, 0, -884101208, 0, 0, 0, -896547425, 0, 0, 0, -926319674, 0, 0, 0, -922021391, 0, 0, 0, -867956876, 0, 0, 0, -846828221, 0, 0, 0, -809446630, 0, 0, 0, -838682323, 0, 0, 0, -1850763712, 0, 0, 0, -1871840137, 0, 0, 0, -1842658770, 0, 0, 0, -1813436391, 0, 0, 0, -1767489892, 0, 0, 0, -1755032405, 0, 0, 0, -1792873742, 0, 0, 0, -1797226299, 0, 0, 0, -1615017992, 0, 0, 0, -1635865137, 0, 0, 0, -1674046570, 0, 0, 0, -1644529247, 0, 0, 0, -1732939996, 0, 0, 0, -1720253165, 0, 0, 0, -1691239606, 0, 0, 0, -1695297155, 0, 0, 0, -1920387792, 0, 0, 0, -1941217529, 0, 0, 0, -1911692962, 0, 0, 0, -1882223767, 0, 0, 0, -1971282452, 0, 0, 0, -1958545445, 0, 0, 0, -1996207742, 0, 0, 0, -2000280651, 0, 0, 0, -2087033720, 0, 0, 0, -2108158273, 0, 0, 0, -2145472282, 0, 0, 0, -2116232495, 0, 0, 0, -2070688684, 0, 0, 0, -2058246557, 0, 0, 0, -2028529606, 0, 0, 0, -2032831987, 0, 0, 0, -1444753248, 0, 0, 0, -1474250089, 0, 0, 0, -1436154674, 0, 0, 0, -1415287047, 0, 0, 0, -1360299908, 0, 0, 0, -1356262837, 0, 0, 0, -1385190382, 0, 0, 0, -1397897691, 0, 0, 0, -1477345000, 0, 0, 0, -1506546897, 0, 0, 0, -1535814282, 0, 0, 0, -1514717375, 0, 0, 0, -1594349116, 0, 0, 0, -1590017037, 0, 0, 0, -1552089686, 0, 0, 0, -1564567651, 0, 0, 0, -1245416496, 0, 0, 0, -1274668569, 0, 0, 0, -1237276738, 0, 0, 0, -1216164471, 0, 0, 0, -1295131892, 0, 0, 0, -1290817221, 0, 0, 0, -1320611998, 0, 0, 0, -1333041835, 0, 0, 0, -1143528856, 0, 0, 0, -1173010337, 0, 0, 0, -1202457082, 0, 0, 0, -1181639631, 0, 0, 0, -1126266188, 0, 0, 0, -1122180989, 0, 0, 0, -1084596518, 0, 0, 0, -1097321235, 0, 0, 0, 0, 0, 0, 0, -1195612315, 0, 0, 0, -1442199413, 0, 0, 0, 313896942, 0, 0, 0, -1889364137, 0, 0, 0, 937357362, 0, 0, 0, 627793884, 0, 0, 0, -1646839623, 0, 0, 0, -978048785, 0, 0, 0, 2097696650, 0, 0, 0, 1874714724, 0, 0, 0, -687765759, 0, 0, 0, 1255587768, 0, 0, 0, -227878691, 0, 0, 0, -522225869, 0, 0, 0, 1482887254, 0, 0, 0, 1343838111, 0, 0, 0, -391827206, 0, 0, 0, -99573996, 0, 0, 0, 1118632049, 0, 0, 0, -545537848, 0, 0, 0, 1741137837, 0, 0, 0, 1970407491, 0, 0, 0, -842109146, 0, 0, 0, -1783791760, 0, 0, 0, 756094997, 0, 0, 0, 1067759611, 0, 0, 0, -2028416866, 0, 0, 0, 449832999, 0, 0, 0, -1569484990, 0, 0, 0, -1329192788, 0, 0, 0, 142231497, 0, 0, 0, -1607291074, 0, 0, 0, 412010587, 0, 0, 0, 171665333, 0, 0, 0, -1299775280, 0, 0, 0, 793786473, 0, 0, 0, -1746116852, 0, 0, 0, -2057703198, 0, 0, 0, 1038456711, 0, 0, 0, 1703315409, 0, 0, 0, -583343948, 0, 0, 0, -812691622, 0, 0, 0, 1999841343, 0, 0, 0, -354152314, 0, 0, 0, 1381529571, 0, 0, 0, 1089329165, 0, 0, 0, -128860312, 0, 0, 0, -265553759, 0, 0, 0, 1217896388, 0, 0, 0, 1512189994, 0, 0, 0, -492939441, 0, 0, 0, 2135519222, 0, 0, 0, -940242797, 0, 0, 0, -717183107, 0, 0, 0, 1845280792, 0, 0, 0, 899665998, 0, 0, 0, -1927039189, 0, 0, 0, -1617553211, 0, 0, 0, 657096608, 0, 0, 0, -1157806311, 0, 0, 0, 37822588, 0, 0, 0, 284462994, 0, 0, 0, -1471616777, 0, 0, 0, -1693165507, 0, 0, 0, 598228824, 0, 0, 0, 824021174, 0, 0, 0, -1985873965, 0, 0, 0, 343330666, 0, 0, 0, -1396004849, 0, 0, 0, -1098971167, 0, 0, 0, 113467524, 0, 0, 0, 1587572946, 0, 0, 0, -434366537, 0, 0, 0, -190203815, 0, 0, 0, 1276501820, 0, 0, 0, -775755899, 0, 0, 0, 1769898208, 0, 0, 0, 2076913422, 0, 0, 0, -1015592853, 0, 0, 0, -888336478, 0, 0, 0, 1941006535, 0, 0, 0, 1627703081, 0, 0, 0, -642211764, 0, 0, 0, 1148164341, 0, 0, 0, -53215344, 0, 0, 0, -295284610, 0, 0, 0, 1457141531, 0, 0, 0, 247015245, 0, 0, 0, -1241169880, 0, 0, 0, -1531908154, 0, 0, 0, 470583459, 0, 0, 0, -2116308966, 0, 0, 0, 963106687, 0, 0, 0, 735213713, 0, 0, 0, -1821499404, 0, 0, 0, 992409347, 0, 0, 0, -2087022490, 0, 0, 0, -1859174520, 0, 0, 0, 697522413, 0, 0, 0, -1270587308, 0, 0, 0, 217581361, 0, 0, 0, 508405983, 0, 0, 0, -1494102086, 0, 0, 0, -23928852, 0, 0, 0, 1177467017, 0, 0, 0, 1419450215, 0, 0, 0, -332959742, 0, 0, 0, 1911572667, 0, 0, 0, -917753890, 0, 0, 0, -604405712, 0, 0, 0, 1665525589, 0, 0, 0, 1799331996, 0, 0, 0, -746338311, 0, 0, 0, -1053399017, 0, 0, 0, 2039091058, 0, 0, 0, -463652917, 0, 0, 0, 1558270126, 0, 0, 0, 1314193216, 0, 0, 0, -152528859, 0, 0, 0, -1366587277, 0, 0, 0, 372764438, 0, 0, 0, 75645176, 0, 0, 0, -1136777315, 0, 0, 0, 568925988, 0, 0, 0, -1722451903, 0, 0, 0, -1948198993, 0, 0, 0, 861712586, 0, 0, 0, -312887749, 0, 0, 0, 1441124702, 0, 0, 0, 1196457648, 0, 0, 0, -1304107, 0, 0, 0, 1648042348, 0, 0, 0, -628668919, 0, 0, 0, -936187417, 0, 0, 0, 1888390786, 0, 0, 0, 686661332, 0, 0, 0, -1873675855, 0, 0, 0, -2098964897, 0, 0, 0, 978858298, 0, 0, 0, -1483798141, 0, 0, 0, 523464422, 0, 0, 0, 226935048, 0, 0, 0, -1254447507, 0, 0, 0, -1119821404, 0, 0, 0, 100435649, 0, 0, 0, 390670639, 0, 0, 0, -1342878134, 0, 0, 0, 841119475, 0, 0, 0, -1969352298, 0, 0, 0, -1741963656, 0, 0, 0, 546822429, 0, 0, 0, 2029308235, 0, 0, 0, -1068978642, 0, 0, 0, -755170880, 0, 0, 0, 1782671013, 0, 0, 0, -141140452, 0, 0, 0, 1328167289, 0, 0, 0, 1570739863, 0, 0, 0, -450629134, 0, 0, 0, 1298864389, 0, 0, 0, -170426784, 0, 0, 0, -412954226, 0, 0, 0, 1608431339, 0, 0, 0, -1039561134, 0, 0, 0, 2058742071, 0, 0, 0, 1744848601, 0, 0, 0, -792976964, 0, 0, 0, -1998638614, 0, 0, 0, 811816591, 0, 0, 0, 584513889, 0, 0, 0, -1704288764, 0, 0, 0, 129869501, 0, 0, 0, -1090403880, 0, 0, 0, -1380684234, 0, 0, 0, 352848211, 0, 0, 0, 494030490, 0, 0, 0, -1513215489, 0, 0, 0, -1216641519, 0, 0, 0, 264757620, 0, 0, 0, -1844389427, 0, 0, 0, 715964072, 0, 0, 0, 941166918, 0, 0, 0, -2136639965, 0, 0, 0, -658086283, 0, 0, 0, 1618608400, 0, 0, 0, 1926213374, 0, 0, 0, -898381413, 0, 0, 0, 1470427426, 0, 0, 0, -283601337, 0, 0, 0, -38979159, 0, 0, 0, 1158766284, 0, 0, 0, 1984818694, 0, 0, 0, -823031453, 0, 0, 0, -599513459, 0, 0, 0, 1693991400, 0, 0, 0, -114329263, 0, 0, 0, 1100160564, 0, 0, 0, 1395044826, 0, 0, 0, -342174017, 0, 0, 0, -1275476247, 0, 0, 0, 189112716, 0, 0, 0, 435162722, 0, 0, 0, -1588827897, 0, 0, 0, 1016811966, 0, 0, 0, -2077804837, 0, 0, 0, -1768777419, 0, 0, 0, 774831696, 0, 0, 0, 643086745, 0, 0, 0, -1628905732, 0, 0, 0, -1940033262, 0, 0, 0, 887166583, 0, 0, 0, -1456066866, 0, 0, 0, 294275499, 0, 0, 0, 54519365, 0, 0, 0, -1149009632, 0, 0, 0, -471821962, 0, 0, 0, 1532818963, 0, 0, 0, 1240029693, 0, 0, 0, -246071656, 0, 0, 0, 1820460577, 0, 0, 0, -734109372, 0, 0, 0, -963916118, 0, 0, 0, 2117577167, 0, 0, 0, -696303304, 0, 0, 0, 1858283101, 0, 0, 0, 2088143283, 0, 0, 0, -993333546, 0, 0, 0, 1495127663, 0, 0, 0, -509497078, 0, 0, 0, -216785180, 0, 0, 0, 1269332353, 0, 0, 0, 332098007, 0, 0, 0, -1418260814, 0, 0, 0, -1178427044, 0, 0, 0, 25085497, 0, 0, 0, -1666580864, 0, 0, 0, 605395429, 0, 0, 0, 916469259, 0, 0, 0, -1910746770, 0, 0, 0, -2040129881, 0, 0, 0, 1054503362, 0, 0, 0, 745528876, 0, 0, 0, -1798063799, 0, 0, 0, 151290352, 0, 0, 0, -1313282411, 0, 0, 0, -1559410309, 0, 0, 0, 464596510, 0, 0, 0, 1137851976, 0, 0, 0, -76654291, 0, 0, 0, -371460413, 0, 0, 0, 1365741990, 0, 0, 0, -860837601, 0, 0, 0, 1946996346, 0, 0, 0, 1723425172, 0, 0, 0, -570095887, 0, 0, 0, 0, 0, 0, 0, -1775237257, 0, 0, 0, 744558318, 0, 0, 0, -1169094247, 0, 0, 0, 432303367, 0, 0, 0, -1879807376, 0, 0, 0, 900031465, 0, 0, 0, -1550490466, 0, 0, 0, 847829774, 0, 0, 0, -1531388807, 0, 0, 0, 518641120, 0, 0, 0, -1998990697, 0, 0, 0, 726447625, 0, 0, 0, -1115901570, 0, 0, 0, 120436967, 0, 0, 0, -1860321392, 0, 0, 0, 1678817053, 0, 0, 0, -232738710, 0, 0, 0, 1215412723, 0, 0, 0, -566116732, 0, 0, 0, 2111101466, 0, 0, 0, -337322643, 0, 0, 0, 1370871028, 0, 0, 0, -947530877, 0, 0, 0, 1452829715, 0, 0, 0, -1062704284, 0, 0, 0, 2063164157, 0, 0, 0, -322345590, 0, 0, 0, 1331429652, 0, 0, 0, -647231901, 0, 0, 0, 1664946170, 0, 0, 0, -183695219, 0, 0, 0, -937398725, 0, 0, 0, 1578133836, 0, 0, 0, -465477419, 0, 0, 0, 1920034722, 0, 0, 0, -773586116, 0, 0, 0, 1205077067, 0, 0, 0, -41611822, 0, 0, 0, 1807026853, 0, 0, 0, -89606859, 0, 0, 0, 1821946434, 0, 0, 0, -691422245, 0, 0, 0, 1090108588, 0, 0, 0, -479406030, 0, 0, 0, 1969020741, 0, 0, 0, -821176612, 0, 0, 0, 1497223595, 0, 0, 0, -1406084826, 0, 0, 0, 973135441, 0, 0, 0, -2142119992, 0, 0, 0, 375509183, 0, 0, 0, -1242254303, 0, 0, 0, 600093526, 0, 0, 0, -1718240561, 0, 0, 0, 262520248, 0, 0, 0, -1632107992, 0, 0, 0, 143131999, 0, 0, 0, -1294398266, 0, 0, 0, 619252657, 0, 0, 0, -2021888209, 0, 0, 0, 290220120, 0, 0, 0, -1424137791, 0, 0, 0, 1026385590, 0, 0, 0, -1874731914, 0, 0, 0, 108124929, 0, 0, 0, -1138699624, 0, 0, 0, 705746415, 0, 0, 0, -1987726991, 0, 0, 0, 532002310, 0, 0, 0, -1511735393, 0, 0, 0, 869578984, 0, 0, 0, -1563883656, 0, 0, 0, 888733711, 0, 0, 0, -1901590122, 0, 0, 0, 412618465, 0, 0, 0, -1156748673, 0, 0, 0, 759000328, 0, 0, 0, -1754504047, 0, 0, 0, 22832102, 0, 0, 0, -195990677, 0, 0, 0, 1650551836, 0, 0, 0, -667916923, 0, 0, 0, 1308648178, 0, 0, 0, -309000596, 0, 0, 0, 2074411291, 0, 0, 0, -1040971646, 0, 0, 0, 1472466933, 0, 0, 0, -958812059, 0, 0, 0, 1357494034, 0, 0, 0, -356991349, 0, 0, 0, 2089335292, 0, 0, 0, -551690910, 0, 0, 0, 1227741717, 0, 0, 0, -209923188, 0, 0, 0, 1699534075, 0, 0, 0, 1482797645, 0, 0, 0, -833505990, 0, 0, 0, 1946205347, 0, 0, 0, -500122668, 0, 0, 0, 1101389642, 0, 0, 0, -678045635, 0, 0, 0, 1841615268, 0, 0, 0, -67840301, 0, 0, 0, 1793681731, 0, 0, 0, -52859340, 0, 0, 0, 1183344557, 0, 0, 0, -793222950, 0, 0, 0, 1932330052, 0, 0, 0, -451083469, 0, 0, 0, 1598818986, 0, 0, 0, -914616867, 0, 0, 0, 1014039888, 0, 0, 0, -1438580185, 0, 0, 0, 269487038, 0, 0, 0, -2044719927, 0, 0, 0, 632645719, 0, 0, 0, -1283100896, 0, 0, 0, 164914873, 0, 0, 0, -1612422706, 0, 0, 0, 251256414, 0, 0, 0, -1731602135, 0, 0, 0, 580440240, 0, 0, 0, -1264003129, 0, 0, 0, 389919577, 0, 0, 0, -2129808338, 0, 0, 0, 995933623, 0, 0, 0, -1385383232, 0, 0, 0, 545503469, 0, 0, 0, -1229733990, 0, 0, 0, 216184323, 0, 0, 0, -1697468044, 0, 0, 0, 961009130, 0, 0, 0, -1351101795, 0, 0, 0, 354867972, 0, 0, 0, -2095653773, 0, 0, 0, 302736355, 0, 0, 0, -2076482412, 0, 0, 0, 1047162125, 0, 0, 0, -1470469510, 0, 0, 0, 198119140, 0, 0, 0, -1644230253, 0, 0, 0, 665714698, 0, 0, 0, -1315043459, 0, 0, 0, 1150488560, 0, 0, 0, -761067385, 0, 0, 0, 1760690462, 0, 0, 0, -20838807, 0, 0, 0, 1566008055, 0, 0, 0, -882416256, 0, 0, 0, 1899392025, 0, 0, 0, -419009682, 0, 0, 0, 1981535486, 0, 0, 0, -533998711, 0, 0, 0, 1518000656, 0, 0, 0, -867508889, 0, 0, 0, 1876933113, 0, 0, 0, -101728626, 0, 0, 0, 1136572183, 0, 0, 0, -712069024, 0, 0, 0, -391915818, 0, 0, 0, 2123616673, 0, 0, 0, -993863624, 0, 0, 0, 1391648591, 0, 0, 0, -244859951, 0, 0, 0, 1733803174, 0, 0, 0, -586762945, 0, 0, 0, 1261875784, 0, 0, 0, -634712616, 0, 0, 0, 1276840623, 0, 0, 0, -162921674, 0, 0, 0, 1618609217, 0, 0, 0, -1007722273, 0, 0, 0, 1440704424, 0, 0, 0, -275878351, 0, 0, 0, 2042521926, 0, 0, 0, -1934401077, 0, 0, 0, 444819132, 0, 0, 0, -1596821723, 0, 0, 0, 920807506, 0, 0, 0, -1787360052, 0, 0, 0, 54987707, 0, 0, 0, -1189739998, 0, 0, 0, 791020885, 0, 0, 0, -1103381819, 0, 0, 0, 671858098, 0, 0, 0, -1839549397, 0, 0, 0, 74101596, 0, 0, 0, -1476405310, 0, 0, 0, 835702965, 0, 0, 0, -1952523988, 0, 0, 0, 497999451, 0, 0, 0, -1329437541, 0, 0, 0, 653419500, 0, 0, 0, -1667011979, 0, 0, 0, 177433858, 0, 0, 0, -1459222116, 0, 0, 0, 1060507371, 0, 0, 0, -2056845454, 0, 0, 0, 324468741, 0, 0, 0, -2109030507, 0, 0, 0, 343587042, 0, 0, 0, -1372868229, 0, 0, 0, 941340172, 0, 0, 0, -1685138798, 0, 0, 0, 230610405, 0, 0, 0, -1209017220, 0, 0, 0, 568318731, 0, 0, 0, -724380794, 0, 0, 0, 1122161905, 0, 0, 0, -122430104, 0, 0, 0, 1854134815, 0, 0, 0, -854147455, 0, 0, 0, 1529264630, 0, 0, 0, -512249745, 0, 0, 0, 2001188632, 0, 0, 0, -430307192, 0, 0, 0, 1885999103, 0, 0, 0, -902101402, 0, 0, 0, 1544225041, 0, 0, 0, -6396529, 0, 0, 0, 1773036280, 0, 0, 0, -738235551, 0, 0, 0, 1171221526, 0, 0, 0, 2028079776, 0, 0, 0, -288223785, 0, 0, 0, 1417872462, 0, 0, 0, -1028455623, 0, 0, 0, 1629906855, 0, 0, 0, -149528368, 0, 0, 0, 1296525641, 0, 0, 0, -612929986, 0, 0, 0, 1248514478, 0, 0, 0, -598026535, 0, 0, 0, 1712054080, 0, 0, 0, -264513481, 0, 0, 0, 1403960489, 0, 0, 0, -979452962, 0, 0, 0, 2144318023, 0, 0, 0, -369117904, 0, 0, 0, 485670333, 0, 0, 0, -1966949686, 0, 0, 0, 814986067, 0, 0, 0, -1499220956, 0, 0, 0, 87478458, 0, 0, 0, -1828268083, 0, 0, 0, 693624404, 0, 0, 0, -1083713245, 0, 0, 0, 779773619, 0, 0, 0, -1203084860, 0, 0, 0, 35350621, 0, 0, 0, -1809092822, 0, 0, 0, 935201716, 0, 0, 0, -1584526141, 0, 0, 0, 467600730, 0, 0, 0, -1913716179, 0, 0, 0, 0, 0, 0, 0, 1093737241, 0, 0, 0, -2107492814, 0, 0, 0, -1017959125, 0, 0, 0, 80047204, 0, 0, 0, 1173649277, 0, 0, 0, -2035852714, 0, 0, 0, -946454193, 0, 0, 0, 143317448, 0, 0, 0, 1237041873, 0, 0, 0, -1964445702, 0, 0, 0, -874908445, 0, 0, 0, 206550444, 0, 0, 0, 1300147893, 0, 0, 0, -1909619810, 0, 0, 0, -820209529, 0, 0, 0, 1360183882, 0, 0, 0, 270784851, 0, 0, 0, -747572104, 0, 0, 0, -1841172639, 0, 0, 0, 1440198190, 0, 0, 0, 350663991, 0, 0, 0, -675964900, 0, 0, 0, -1769700603, 0, 0, 0, 1503140738, 0, 0, 0, 413728923, 0, 0, 0, -604361296, 0, 0, 0, -1697958231, 0, 0, 0, 1566406630, 0, 0, 0, 476867839, 0, 0, 0, -549502508, 0, 0, 0, -1643226419, 0, 0, 0, -1574665067, 0, 0, 0, -485122164, 0, 0, 0, 541504167, 0, 0, 0, 1635232190, 0, 0, 0, -1495144207, 0, 0, 0, -405736472, 0, 0, 0, 612622019, 0, 0, 0, 1706214874, 0, 0, 0, -1431413411, 0, 0, 0, -341883324, 0, 0, 0, 684485487, 0, 0, 0, 1778217078, 0, 0, 0, -1368706759, 0, 0, 0, -279303648, 0, 0, 0, 738789131, 0, 0, 0, 1832393746, 0, 0, 0, -214546721, 0, 0, 0, -1308140090, 0, 0, 0, 1901359341, 0, 0, 0, 811953140, 0, 0, 0, -135058757, 0, 0, 0, -1228787294, 0, 0, 0, 1972444297, 0, 0, 0, 882902928, 0, 0, 0, -71524585, 0, 0, 0, -1165130738, 0, 0, 0, 2044635429, 0, 0, 0, 955232828, 0, 0, 0, -8785037, 0, 0, 0, -1102518166, 0, 0, 0, 2098971969, 0, 0, 0, 1009442392, 0, 0, 0, 89094640, 0, 0, 0, 1149133545, 0, 0, 0, -2027073598, 0, 0, 0, -971221797, 0, 0, 0, 25826708, 0, 0, 0, 1086000781, 0, 0, 0, -2081938522, 0, 0, 0, -1025951553, 0, 0, 0, 231055416, 0, 0, 0, 1291107105, 0, 0, 0, -1884842486, 0, 0, 0, -828994285, 0, 0, 0, 151047260, 0, 0, 0, 1211225925, 0, 0, 0, -1956447634, 0, 0, 0, -900472457, 0, 0, 0, 1415429050, 0, 0, 0, 359440547, 0, 0, 0, -700478072, 0, 0, 0, -1760651631, 0, 0, 0, 1352194014, 0, 0, 0, 296340679, 0, 0, 0, -755310100, 0, 0, 0, -1815348491, 0, 0, 0, 1557619314, 0, 0, 0, 501643627, 0, 0, 0, -558541760, 0, 0, 0, -1618718887, 0, 0, 0, 1477578262, 0, 0, 0, 421729551, 0, 0, 0, -630179804, 0, 0, 0, -1690229955, 0, 0, 0, -1486095003, 0, 0, 0, -430250372, 0, 0, 0, 621398871, 0, 0, 0, 1681444942, 0, 0, 0, -1548840703, 0, 0, 0, -492860904, 0, 0, 0, 567060275, 0, 0, 0, 1627241514, 0, 0, 0, -1344199507, 0, 0, 0, -288342092, 0, 0, 0, 763564703, 0, 0, 0, 1823607174, 0, 0, 0, -1423685431, 0, 0, 0, -367701040, 0, 0, 0, 692485883, 0, 0, 0, 1752655330, 0, 0, 0, -159826129, 0, 0, 0, -1220008906, 0, 0, 0, 1947928861, 0, 0, 0, 891949572, 0, 0, 0, -222538933, 0, 0, 0, -1282586542, 0, 0, 0, 1893623161, 0, 0, 0, 837779040, 0, 0, 0, -17570073, 0, 0, 0, -1077740034, 0, 0, 0, 2089930965, 0, 0, 0, 1033948108, 0, 0, 0, -97088893, 0, 0, 0, -1157131878, 0, 0, 0, 2018819249, 0, 0, 0, 962963368, 0, 0, 0, 1268286267, 0, 0, 0, 178886690, 0, 0, 0, -906316535, 0, 0, 0, -1999917552, 0, 0, 0, 1331556191, 0, 0, 0, 242021446, 0, 0, 0, -851453587, 0, 0, 0, -1945189772, 0, 0, 0, 1125276403, 0, 0, 0, 35865066, 0, 0, 0, -1049596735, 0, 0, 0, -2143193128, 0, 0, 0, 1205286551, 0, 0, 0, 115748238, 0, 0, 0, -977993563, 0, 0, 0, -2071716932, 0, 0, 0, 445268337, 0, 0, 0, 1539005032, 0, 0, 0, -1729595581, 0, 0, 0, -640062374, 0, 0, 0, 508505365, 0, 0, 0, 1602106892, 0, 0, 0, -1674765529, 0, 0, 0, -585367490, 0, 0, 0, 302028985, 0, 0, 0, 1395753888, 0, 0, 0, -1872580981, 0, 0, 0, -783043182, 0, 0, 0, 382072029, 0, 0, 0, 1475669956, 0, 0, 0, -1800944913, 0, 0, 0, -711534090, 0, 0, 0, -373553234, 0, 0, 0, -1467147081, 0, 0, 0, 1809723804, 0, 0, 0, 720317061, 0, 0, 0, -310809654, 0, 0, 0, -1404538669, 0, 0, 0, 1864064504, 0, 0, 0, 774522593, 0, 0, 0, -516497818, 0, 0, 0, -1610103425, 0, 0, 0, 1666508884, 0, 0, 0, 577106765, 0, 0, 0, -437014014, 0, 0, 0, -1530746597, 0, 0, 0, 1737589808, 0, 0, 0, 648060713, 0, 0, 0, -1196505628, 0, 0, 0, -106963203, 0, 0, 0, 986510294, 0, 0, 0, 2080237775, 0, 0, 0, -1133794944, 0, 0, 0, -44387687, 0, 0, 0, 1040818098, 0, 0, 0, 2134410411, 0, 0, 0, -1339810772, 0, 0, 0, -250280139, 0, 0, 0, 843459102, 0, 0, 0, 1937191175, 0, 0, 0, -1260294072, 0, 0, 0, -170890415, 0, 0, 0, 914572922, 0, 0, 0, 2008178019, 0, 0, 0, 1322777291, 0, 0, 0, 266789330, 0, 0, 0, -860500743, 0, 0, 0, -1920673824, 0, 0, 0, 1242732207, 0, 0, 0, 186879414, 0, 0, 0, -932142947, 0, 0, 0, -1992180860, 0, 0, 0, 1180508931, 0, 0, 0, 124532762, 0, 0, 0, -1002498767, 0, 0, 0, -2062676440, 0, 0, 0, 1117278055, 0, 0, 0, 61428862, 0, 0, 0, -1057326763, 0, 0, 0, -2117377460, 0, 0, 0, 533018753, 0, 0, 0, 1593058200, 0, 0, 0, -1649996109, 0, 0, 0, -594143830, 0, 0, 0, 453006565, 0, 0, 0, 1513181180, 0, 0, 0, -1721605417, 0, 0, 0, -665617970, 0, 0, 0, 391110985, 0, 0, 0, 1451162192, 0, 0, 0, -1792157829, 0, 0, 0, -736310174, 0, 0, 0, 327847213, 0, 0, 0, 1388025396, 0, 0, 0, -1847018721, 0, 0, 0, -791044090, 0, 0, 0, -319586722, 0, 0, 0, -1379769017, 0, 0, 0, 1855015020, 0, 0, 0, 799036277, 0, 0, 0, -399109574, 0, 0, 0, -1459156701, 0, 0, 0, 1783899144, 0, 0, 0, 728055569, 0, 0, 0, -461789290, 0, 0, 0, -1521959793, 0, 0, 0, 1713082788, 0, 0, 0, 657099453, 0, 0, 0, -524497934, 0, 0, 0, -1584541461, 0, 0, 0, 1658781120, 0, 0, 0, 602924761, 0, 0, 0, -1109279724, 0, 0, 0, -53434611, 0, 0, 0, 1065585190, 0, 0, 0, 2125631807, 0, 0, 0, -1188769680, 0, 0, 0, -132789399, 0, 0, 0, 994502210, 0, 0, 0, 2054683995, 0, 0, 0, -1251252772, 0, 0, 0, -195395899, 0, 0, 0, 923358190, 0, 0, 0, 1983400183, 0, 0, 0, -1313994312, 0, 0, 0, -258010463, 0, 0, 0, 869023626, 0, 0, 0, 1929192595, 0, 0, 0, 0, 0, 0, 0, 929743361, 0, 0, 0, 1859421187, 0, 0, 0, 1505641986, 0, 0, 0, -592967417, 0, 0, 0, -339555578, 0, 0, 0, -1300460284, 0, 0, 0, -2062135547, 0, 0, 0, -1202646258, 0, 0, 0, -1891905265, 0, 0, 0, -695888115, 0, 0, 0, -504408820, 0, 0, 0, 1694046729, 0, 0, 0, 1402198024, 0, 0, 0, 170761738, 0, 0, 0, 1028086795, 0, 0, 0, 1889740316, 0, 0, 0, 1204413469, 0, 0, 0, 511156767, 0, 0, 0, 689791006, 0, 0, 0, -1408553189, 0, 0, 0, -1688081126, 0, 0, 0, -1025529064, 0, 0, 0, -172660455, 0, 0, 0, -923650798, 0, 0, 0, -6752493, 0, 0, 0, -1507413743, 0, 0, 0, -1857260784, 0, 0, 0, 341457941, 0, 0, 0, 590413332, 0, 0, 0, 2056173590, 0, 0, 0, 1306819095, 0, 0, 0, -532263624, 0, 0, 0, -684945607, 0, 0, 0, -1902982853, 0, 0, 0, -1174926534, 0, 0, 0, 1022247999, 0, 0, 0, 193234494, 0, 0, 0, 1379582012, 0, 0, 0, 1699742269, 0, 0, 0, 1477926454, 0, 0, 0, 1870502967, 0, 0, 0, 918805045, 0, 0, 0, 27858996, 0, 0, 0, -2067835087, 0, 0, 0, -1277848272, 0, 0, 0, -362032334, 0, 0, 0, -587132621, 0, 0, 0, -1864013020, 0, 0, 0, -1483757275, 0, 0, 0, -30281945, 0, 0, 0, -916771546, 0, 0, 0, 1280139811, 0, 0, 0, 2066194466, 0, 0, 0, 580511264, 0, 0, 0, 368256033, 0, 0, 0, 682915882, 0, 0, 0, 534690347, 0, 0, 0, 1180761129, 0, 0, 0, 1896496680, 0, 0, 0, -199462611, 0, 0, 0, -1015631060, 0, 0, 0, -1698106066, 0, 0, 0, -1381877969, 0, 0, 0, -1064461712, 0, 0, 0, -135833487, 0, 0, 0, -1369891213, 0, 0, 0, -1724654478, 0, 0, 0, 472224631, 0, 0, 0, 726618486, 0, 0, 0, 1928402804, 0, 0, 0, 1167840629, 0, 0, 0, 2027719038, 0, 0, 0, 1337346943, 0, 0, 0, 369626493, 0, 0, 0, 560123772, 0, 0, 0, -1535868807, 0, 0, 0, -1826733448, 0, 0, 0, -895482758, 0, 0, 0, -37042565, 0, 0, 0, -1339114388, 0, 0, 0, -2025554323, 0, 0, 0, -554026897, 0, 0, 0, -376374674, 0, 0, 0, 1820767595, 0, 0, 0, 1542223722, 0, 0, 0, 38941032, 0, 0, 0, 892924777, 0, 0, 0, 142585698, 0, 0, 0, 1058368867, 0, 0, 0, 1722493793, 0, 0, 0, 1371662688, 0, 0, 0, -724064667, 0, 0, 0, -474127260, 0, 0, 0, -1174199706, 0, 0, 0, -1922441113, 0, 0, 0, 550229832, 0, 0, 0, 396432713, 0, 0, 0, 1310675787, 0, 0, 0, 2037748042, 0, 0, 0, -60563889, 0, 0, 0, -888595378, 0, 0, 0, -1833477556, 0, 0, 0, -1512204211, 0, 0, 0, -1734687674, 0, 0, 0, -1343224249, 0, 0, 0, -162643899, 0, 0, 0, -1054571964, 0, 0, 0, 1144180033, 0, 0, 0, 1935150912, 0, 0, 0, 719735106, 0, 0, 0, 495749955, 0, 0, 0, 1349054804, 0, 0, 0, 1728197461, 0, 0, 0, 1052538199, 0, 0, 0, 165066582, 0, 0, 0, -1933510573, 0, 0, 0, -1146471854, 0, 0, 0, -501973936, 0, 0, 0, -713114031, 0, 0, 0, -398859686, 0, 0, 0, -548200357, 0, 0, 0, -2031262119, 0, 0, 0, -1316510632, 0, 0, 0, 881978205, 0, 0, 0, 66791772, 0, 0, 0, 1514499934, 0, 0, 0, 1831841119, 0, 0, 0, -2145700383, 0, 0, 0, -1217267744, 0, 0, 0, -288378398, 0, 0, 0, -643468317, 0, 0, 0, 1555250406, 0, 0, 0, 1809448679, 0, 0, 0, 845658341, 0, 0, 0, 84769508, 0, 0, 0, 944383727, 0, 0, 0, 253813998, 0, 0, 0, 1453236972, 0, 0, 0, 1643405549, 0, 0, 0, -454938648, 0, 0, 0, -746000919, 0, 0, 0, -1976128533, 0, 0, 0, -1118017046, 0, 0, 0, -256371715, 0, 0, 0, -942484996, 0, 0, 0, -1637050370, 0, 0, 0, -1459202561, 0, 0, 0, 739252986, 0, 0, 0, 461035771, 0, 0, 0, 1120182009, 0, 0, 0, 1974361336, 0, 0, 0, 1223229683, 0, 0, 0, 2139341554, 0, 0, 0, 641565936, 0, 0, 0, 290932465, 0, 0, 0, -1807676940, 0, 0, 0, -1557410827, 0, 0, 0, -90862089, 0, 0, 0, -838905866, 0, 0, 0, 1616738521, 0, 0, 0, 1463270104, 0, 0, 0, 243924186, 0, 0, 0, 971194075, 0, 0, 0, -1124765218, 0, 0, 0, -1952468001, 0, 0, 0, -769526307, 0, 0, 0, -448055332, 0, 0, 0, -670274601, 0, 0, 0, -278484522, 0, 0, 0, -1227296812, 0, 0, 0, -2119029291, 0, 0, 0, 77882064, 0, 0, 0, 869179601, 0, 0, 0, 1785784019, 0, 0, 0, 1561994450, 0, 0, 0, 285105861, 0, 0, 0, 664050884, 0, 0, 0, 2116737734, 0, 0, 0, 1228937415, 0, 0, 0, -866756670, 0, 0, 0, -79915581, 0, 0, 0, -1568484415, 0, 0, 0, -1779953216, 0, 0, 0, -1464906293, 0, 0, 0, -1614442550, 0, 0, 0, -964965944, 0, 0, 0, -250541111, 0, 0, 0, 1946633420, 0, 0, 0, 1131251405, 0, 0, 0, 450085071, 0, 0, 0, 767099598, 0, 0, 0, 1083617169, 0, 0, 0, 2013031824, 0, 0, 0, 776088466, 0, 0, 0, 422111635, 0, 0, 0, -1673615722, 0, 0, 0, -1420532585, 0, 0, 0, -219536747, 0, 0, 0, -981409644, 0, 0, 0, -121127777, 0, 0, 0, -810713442, 0, 0, 0, -1777125220, 0, 0, 0, -1585841507, 0, 0, 0, 611300760, 0, 0, 0, 319125401, 0, 0, 0, 1253781915, 0, 0, 0, 2110911386, 0, 0, 0, 808814989, 0, 0, 0, 123685772, 0, 0, 0, 1591807374, 0, 0, 0, 1770770319, 0, 0, 0, -325222262, 0, 0, 0, -604552565, 0, 0, 0, -2109143927, 0, 0, 0, -1255946616, 0, 0, 0, -2006672765, 0, 0, 0, -1089578878, 0, 0, 0, -424665472, 0, 0, 0, -774185855, 0, 0, 0, 1422693252, 0, 0, 0, 1671844229, 0, 0, 0, 974657415, 0, 0, 0, 225629574, 0, 0, 0, -1596923223, 0, 0, 0, -1749409624, 0, 0, 0, -838572374, 0, 0, 0, -110189397, 0, 0, 0, 2088299438, 0, 0, 0, 1259481519, 0, 0, 0, 313290669, 0, 0, 0, 633777580, 0, 0, 0, 411169191, 0, 0, 0, 803943334, 0, 0, 0, 1985312164, 0, 0, 0, 1094694821, 0, 0, 0, -1003882336, 0, 0, 0, -213697887, 0, 0, 0, -1426228061, 0, 0, 0, -1650999646, 0, 0, 0, -797719371, 0, 0, 0, -417790284, 0, 0, 0, -1096335178, 0, 0, 0, -1983020361, 0, 0, 0, 215731634, 0, 0, 0, 1001459635, 0, 0, 0, 1645169073, 0, 0, 0, 1432718256, 0, 0, 0, 1747113915, 0, 0, 0, 1598559674, 0, 0, 0, 116806584, 0, 0, 0, 832344505, 0, 0, 0, -1265967428, 0, 0, 0, -2082464579, 0, 0, 0, -631350593, 0, 0, 0, -315320130, 0, 0, 0, 0, 0, 0, 0, 1701297336, 0, 0, 0, -1949824598, 0, 0, 0, -290474734, 0, 0, 0, 1469538959, 0, 0, 0, 854646327, 0, 0, 0, -597726427, 0, 0, 0, -1187457123, 0, 0, 0, -282544955, 0, 0, 0, -1974531971, 0, 0, 0, 1692450159, 0, 0, 0, 25625047, 0, 0, 0, -1195387318, 0, 0, 0, -573019406, 0, 0, 0, 863494112, 0, 0, 0, 1443914584, 0, 0, 0, -1621681840, 0, 0, 0, -97475096, 0, 0, 0, 345968890, 0, 0, 0, 1912122434, 0, 0, 0, -926909473, 0, 0, 0, -1381513369, 0, 0, 0, 1124627061, 0, 0, 0, 644861645, 0, 0, 0, 1887415701, 0, 0, 0, 353898797, 0, 0, 0, -71850945, 0, 0, 0, -1630529401, 0, 0, 0, 669568794, 0, 0, 0, 1116697506, 0, 0, 0, -1407138128, 0, 0, 0, -918062584, 0, 0, 0, 1051669152, 0, 0, 0, 1539870232, 0, 0, 0, -1251525878, 0, 0, 0, -805271630, 0, 0, 0, 1765298223, 0, 0, 0, 207613079, 0, 0, 0, -487564923, 0, 0, 0, -2020088515, 0, 0, 0, -779647387, 0, 0, 0, -1260373283, 0, 0, 0, 1515163599, 0, 0, 0, 1059599223, 0, 0, 0, -2045713174, 0, 0, 0, -478717870, 0, 0, 0, 232320320, 0, 0, 0, 1757368824, 0, 0, 0, -1577571344, 0, 0, 0, -996174008, 0, 0, 0, 707797594, 0, 0, 0, 1331142370, 0, 0, 0, -160478849, 0, 0, 0, -1828129337, 0, 0, 0, 2108113109, 0, 0, 0, 415300717, 0, 0, 0, 1322295093, 0, 0, 0, 733422477, 0, 0, 0, -988244321, 0, 0, 0, -1602278873, 0, 0, 0, 424148410, 0, 0, 0, 2082488578, 0, 0, 0, -1836059632, 0, 0, 0, -135771992, 0, 0, 0, 1029182619, 0, 0, 0, 1480566819, 0, 0, 0, -1232069327, 0, 0, 0, -738745975, 0, 0, 0, 1791981076, 0, 0, 0, 262720172, 0, 0, 0, -519602242, 0, 0, 0, -2074033402, 0, 0, 0, -764370850, 0, 0, 0, -1223222042, 0, 0, 0, 1505274356, 0, 0, 0, 1021252940, 0, 0, 0, -2048408879, 0, 0, 0, -528449943, 0, 0, 0, 238013307, 0, 0, 0, 1799911363, 0, 0, 0, -1576071733, 0, 0, 0, -949440141, 0, 0, 0, 700908641, 0, 0, 0, 1285601497, 0, 0, 0, -174559420, 0, 0, 0, -1862282244, 0, 0, 0, 2119198446, 0, 0, 0, 456645206, 0, 0, 0, 1294448910, 0, 0, 0, 675284406, 0, 0, 0, -957370204, 0, 0, 0, -1551365092, 0, 0, 0, 447798145, 0, 0, 0, 2144823097, 0, 0, 0, -1854352853, 0, 0, 0, -199266669, 0, 0, 0, 66528827, 0, 0, 0, 1720752771, 0, 0, 0, -2009124975, 0, 0, 0, -312962263, 0, 0, 0, 1415595188, 0, 0, 0, 822605836, 0, 0, 0, -542618338, 0, 0, 0, -1160777306, 0, 0, 0, -320892162, 0, 0, 0, -1984418234, 0, 0, 0, 1729600340, 0, 0, 0, 40904684, 0, 0, 0, -1152847759, 0, 0, 0, -567325495, 0, 0, 0, 813758939, 0, 0, 0, 1441219939, 0, 0, 0, -1667219605, 0, 0, 0, -104365101, 0, 0, 0, 392705729, 0, 0, 0, 1913621113, 0, 0, 0, -885563932, 0, 0, 0, -1370431140, 0, 0, 0, 1090475086, 0, 0, 0, 630778102, 0, 0, 0, 1938328494, 0, 0, 0, 384775958, 0, 0, 0, -129990140, 0, 0, 0, -1658372420, 0, 0, 0, 606071073, 0, 0, 0, 1098405273, 0, 0, 0, -1344806773, 0, 0, 0, -894411725, 0, 0, 0, 1001806317, 0, 0, 0, 1590814037, 0, 0, 0, -1333899193, 0, 0, 0, -719721217, 0, 0, 0, 1814117218, 0, 0, 0, 155617242, 0, 0, 0, -404147512, 0, 0, 0, -2104586640, 0, 0, 0, -727782104, 0, 0, 0, -1309060720, 0, 0, 0, 1599530114, 0, 0, 0, 976312378, 0, 0, 0, -2096525401, 0, 0, 0, -428985569, 0, 0, 0, 146900493, 0, 0, 0, 1839610549, 0, 0, 0, -1528741699, 0, 0, 0, -1048118267, 0, 0, 0, 791234839, 0, 0, 0, 1246688687, 0, 0, 0, -210361806, 0, 0, 0, -1777230198, 0, 0, 0, 2025728920, 0, 0, 0, 500799264, 0, 0, 0, 1271526520, 0, 0, 0, 783173824, 0, 0, 0, -1073611310, 0, 0, 0, -1520025238, 0, 0, 0, 475961079, 0, 0, 0, 2033789519, 0, 0, 0, -1751736483, 0, 0, 0, -219077659, 0, 0, 0, 85551949, 0, 0, 0, 1618925557, 0, 0, 0, -1898880281, 0, 0, 0, -340337057, 0, 0, 0, 1385040322, 0, 0, 0, 938063226, 0, 0, 0, -649723800, 0, 0, 0, -1138639664, 0, 0, 0, -365830264, 0, 0, 0, -1890163920, 0, 0, 0, 1643763234, 0, 0, 0, 77490842, 0, 0, 0, -1113146105, 0, 0, 0, -658439745, 0, 0, 0, 913224877, 0, 0, 0, 1393100821, 0, 0, 0, -1706135011, 0, 0, 0, -14037339, 0, 0, 0, 294026167, 0, 0, 0, 1960953615, 0, 0, 0, -841412462, 0, 0, 0, -1463899094, 0, 0, 0, 1175525688, 0, 0, 0, 594978176, 0, 0, 0, 1969669848, 0, 0, 0, 268532320, 0, 0, 0, -22098062, 0, 0, 0, -1681296438, 0, 0, 0, 586261591, 0, 0, 0, 1201019119, 0, 0, 0, -1455837699, 0, 0, 0, -866250427, 0, 0, 0, 116280694, 0, 0, 0, 1669984718, 0, 0, 0, -1926871844, 0, 0, 0, -398329756, 0, 0, 0, 1366896633, 0, 0, 0, 874419009, 0, 0, 0, -625924525, 0, 0, 0, -1076454677, 0, 0, 0, -372835917, 0, 0, 0, -1935588085, 0, 0, 0, 1645146137, 0, 0, 0, 124341409, 0, 0, 0, -1101948100, 0, 0, 0, -617207932, 0, 0, 0, 899256982, 0, 0, 0, 1358835246, 0, 0, 0, -1715907546, 0, 0, 0, -52500322, 0, 0, 0, 309419404, 0, 0, 0, 1997988148, 0, 0, 0, -835832151, 0, 0, 0, -1421243887, 0, 0, 0, 1172717315, 0, 0, 0, 545358779, 0, 0, 0, 1989271779, 0, 0, 0, 334912603, 0, 0, 0, -44439223, 0, 0, 0, -1740745231, 0, 0, 0, 554074732, 0, 0, 0, 1147223764, 0, 0, 0, -1429304378, 0, 0, 0, -810993794, 0, 0, 0, 943816662, 0, 0, 0, 1562821486, 0, 0, 0, -1282836868, 0, 0, 0, -688993596, 0, 0, 0, 1876303193, 0, 0, 0, 179413473, 0, 0, 0, -467790605, 0, 0, 0, -2122733493, 0, 0, 0, -680932589, 0, 0, 0, -1307674709, 0, 0, 0, 1554105017, 0, 0, 0, 969309697, 0, 0, 0, -2130794084, 0, 0, 0, -442952412, 0, 0, 0, 188129334, 0, 0, 0, 1850809486, 0, 0, 0, -1491704186, 0, 0, 0, -1032725954, 0, 0, 0, 752774956, 0, 0, 0, 1236915092, 0, 0, 0, -259980279, 0, 0, 0, -1780041551, 0, 0, 0, 2068385187, 0, 0, 0, 506376475, 0, 0, 0, 1212076611, 0, 0, 0, 760835835, 0, 0, 0, -1007232023, 0, 0, 0, -1500420271, 0, 0, 0, 531214540, 0, 0, 0, 2060323956, 0, 0, 0, -1805534874, 0, 0, 0, -251263522, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str51=allocate([105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0] /* invalid distance too */, "i8", ALLOC_STATIC);
STRING_TABLE.__str152=allocate([105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0] /* invalid distance cod */, "i8", ALLOC_STATIC);
STRING_TABLE.__str253=allocate([105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0] /* invalid literal/leng */, "i8", ALLOC_STATIC);
STRING_TABLE.__str56=allocate([110,101,101,100,32,100,105,99,116,105,111,110,97,114,121,0] /* need dictionary\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str157=allocate([115,116,114,101,97,109,32,101,110,100,0] /* stream end\00 */, "i8", ALLOC_STATIC);
__str258=allocate(1, "i8", ALLOC_STATIC);
STRING_TABLE.__str359=allocate([102,105,108,101,32,101,114,114,111,114,0] /* file error\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str460=allocate([115,116,114,101,97,109,32,101,114,114,111,114,0] /* stream error\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str561=allocate([100,97,116,97,32,101,114,114,111,114,0] /* data error\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str662=allocate([105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0] /* insufficient memory\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str763=allocate([98,117,102,102,101,114,32,101,114,114,111,114,0] /* buffer error\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str864=allocate([105,110,99,111,109,112,97,116,105,98,108,101,32,118,101,114,115,105,111,110,0] /* incompatible version */, "i8", ALLOC_STATIC);
_z_errmsg=allocate(40, "*", ALLOC_STATIC);
_inflate_table_lbase=allocate([3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 13, 0, 15, 0, 17, 0, 19, 0, 23, 0, 27, 0, 31, 0, 35, 0, 43, 0, 51, 0, 59, 0, 67, 0, 83, 0, 99, 0, 115, 0, 131, 0, 163, 0, 195, 0, 227, 0, 258, 0, 0, 0, 0, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
_inflate_table_lext=allocate([16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 17, 0, 17, 0, 17, 0, 17, 0, 18, 0, 18, 0, 18, 0, 18, 0, 19, 0, 19, 0, 19, 0, 19, 0, 20, 0, 20, 0, 20, 0, 20, 0, 21, 0, 21, 0, 21, 0, 21, 0, 16, 0, 73, 0, 195, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
_inflate_table_dbase=allocate([1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 7, 0, 9, 0, 13, 0, 17, 0, 25, 0, 33, 0, 49, 0, 65, 0, 97, 0, 129, 0, 193, 0, 257, 0, 385, 0, 513, 0, 769, 0, 1025, 0, 1537, 0, 2049, 0, 3073, 0, 4097, 0, 6145, 0, 8193, 0, 12289, 0, 16385, 0, 24577, 0, 0, 0, 0, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
_inflate_table_dext=allocate([16, 0, 16, 0, 16, 0, 16, 0, 17, 0, 17, 0, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 20, 0, 21, 0, 21, 0, 22, 0, 22, 0, 23, 0, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 0, 26, 0, 27, 0, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 64, 0, 64, 0], ["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0], ALLOC_STATIC);
__gm_=allocate(468, ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_mparams=allocate(24, "i32", ALLOC_STATIC);
HEAP32[((_static_l_desc)>>2)]=((_static_ltree)|0);
HEAP32[((_static_l_desc+4)>>2)]=((_extra_lbits)|0);
HEAP32[((_static_d_desc)>>2)]=((_static_dtree)|0);
HEAP32[((_static_d_desc+4)>>2)]=((_extra_dbits)|0);
HEAP32[((_static_bl_desc+4)>>2)]=((_extra_blbits)|0);
HEAP32[((_z_errmsg)>>2)]=((STRING_TABLE.__str56)|0);
HEAP32[((_z_errmsg+4)>>2)]=((STRING_TABLE.__str157)|0);
HEAP32[((_z_errmsg+8)>>2)]=((__str258)|0);
HEAP32[((_z_errmsg+12)>>2)]=((STRING_TABLE.__str359)|0);
HEAP32[((_z_errmsg+16)>>2)]=((STRING_TABLE.__str460)|0);
HEAP32[((_z_errmsg+20)>>2)]=((STRING_TABLE.__str561)|0);
HEAP32[((_z_errmsg+24)>>2)]=((STRING_TABLE.__str662)|0);
HEAP32[((_z_errmsg+28)>>2)]=((STRING_TABLE.__str763)|0);
HEAP32[((_z_errmsg+32)>>2)]=((STRING_TABLE.__str864)|0);
HEAP32[((_z_errmsg+36)>>2)]=((__str258)|0);
FUNCTION_TABLE = [0,0,_zcalloc,0,_zcfree,0,_deflate_stored,0,_deflate_fast,0,_deflate_slow,0]; Module["FUNCTION_TABLE"] = FUNCTION_TABLE;


function run(args) {
  args = args || Module['arguments'];

  initRuntime();

  var ret = null;
  if (Module['_main']) {
    ret = Module.callMain(args);
    exitRuntime();
  }
  return ret;
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

if (Module['preRun']) {
  Module['preRun']();
}


if (!Module['noInitialRun']) {
  var ret = run();
}

// {{POST_RUN_ADDITIONS}}

if (Module['postRun']) {
  Module['postRun']();
}





  // {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["_def","_inf","_zerr","_main","_deflateInit2_","_deflateEnd","_deflateReset","_lm_init","_deflate","_putShortMSB","_flush_pending","_deflate_huff","_deflate_rle","_fill_window","_read_buf","_deflate_stored","_deflate_fast","_deflate_slow","_longest_match","_inflateReset","_inflateReset2","_inflateInit2_","_inflateInit_","_inflate","_tr_static_init","_fixedtables","_init_block","_updatewindow","_inflateEnd","__tr_init","__tr_stored_block","_copy_block","_bi_flush","__tr_align","__tr_flush_block","_detect_data_type","_build_tree","_build_bl_tree","_compress_block","_bi_windup","_send_all_trees","_send_tree","_bi_reverse","_scan_tree","_pqdownheap","_gen_bitlen","_gen_codes","_adler32","_crc32","_crc32_little","_crc32_big","_inflate_fast","_zcalloc","_zcfree","_inflate_table","_malloc","_tmalloc_small","_tmalloc_large","_sys_alloc","_free","_sys_trim","_segment_holding","_release_unused_segments","_init_mparams","_init_top","_mmap_alloc","_init_bins","_prepend_alloc","_add_segment"]

